<UserControl x:Class="R54IN0.WPF.IOStockDataGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:R54IN0.WPF"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:mvvmlight="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="1400">
    
    <UserControl.InputBindings>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding NewIOStockFormatAdditionCommand}" />
        <KeyBinding Key="E" Modifiers="Ctrl" Command="{Binding IOStockFormatModificationCommand}" />
        <KeyBinding Key="D" Modifiers="Ctrl" Command="{Binding IOStockFormatDeletionCommand}" />
    </UserControl.InputBindings>

    <UserControl.Resources>
        <local:BindingProxy x:Key="DataContextProxy" DataContext="{Binding}" />
    </UserControl.Resources>

    <Grid>
        <DataGrid x:Name="DataGridControl" AutoGenerateColumns="False"
                  ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem}"
                  CanUserAddRows="False" GridLinesVisibility="All" HeadersVisibility="All"
                  CanUserDeleteRows="False">

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="ContextMenuOpening">
                    <mvvmlight:EventToCommand Command="{Binding ContextMenuOpeningEventCommand}" />
                </i:EventTrigger>

                <i:EventTrigger EventName="BeginningEdit">
                    <mvvmlight:EventToCommand Command="{Binding BeginningEditEventCommand}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <DataGrid.Resources>
                <local:StockTypeToStringConverter x:Key="StockTypeConverter" />
            </DataGrid.Resources>

            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="입출고 기록 수정하기" Command="{Binding IOStockFormatModificationCommand}"  InputGestureText="Ctrl+E" />
                    <MenuItem Header="새로운 입출고 기록 추가하기" Command="{Binding NewIOStockFormatAdditionCommand}" InputGestureText="Ctrl+S" />
                    <MenuItem Header="입출고 기록 삭제하기" Command="{Binding IOStockFormatDeletionCommand}"  InputGestureText="Ctrl+D" />
                    <Separator />
                    <MenuItem Header="제품별 입출고 현황으로 보기" Command="{Binding SearchAsIOStockRecordCommand}" />
                    <MenuItem Header="재고현황으로 보기" Command="{Binding SearchAsInventoryRecordCommand}" />
                </ContextMenu>
            </DataGrid.ContextMenu>

            <DataGrid.CellStyle>
                <Style
                    TargetType="{x:Type DataGridCell}"
                    BasedOn="{StaticResource MetroDataGridCell}">

                    <Setter Property="BorderThickness"
                            Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="1" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Column.DisplayIndex}"
                         Value="0">
                            <Setter Property="Background"
                        Value="{DynamicResource AccentColorBrush4}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Column.DisplayIndex}"
                         Value="12">
                            <Setter Property="Background"
                        Value="{DynamicResource AccentColorBrush4}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>

            <DataGrid.Columns>
                <DataGridTextColumn Header="종류" IsReadOnly="True" Width="Auto" Binding="{Binding StockType, Converter={StaticResource StockTypeConverter}}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding StockType}" Value="INCOMING">
                                    <Setter Property="Foreground" Value="#FF3362FF" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding StockType}" Value="OUTGOING">
                                    <Setter Property="Foreground" Value="#FFE24D83" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="날짜" IsReadOnly="True" Width="Auto" Binding="{Binding Date, StringFormat='{}{0:yyyy-MM-dd}'}" />
                <DataGridTextColumn Header="제품" Width="Auto" Binding="{Binding Inventory.Product.Name}"
                                    IsReadOnly="{Binding DataContext.IsReadOnly, Mode=TwoWay, Source={StaticResource DataContextProxy}}" />
                <DataGridTextColumn Header="규격" Width="Auto"  Binding="{Binding Inventory.Specification}"
                                    IsReadOnly="{Binding DataContext.IsReadOnly, Mode=TwoWay, Source={StaticResource DataContextProxy}}" />
                <DataGridTextColumn Header="규격의 설명" Width="1*" Binding="{Binding Inventory.Memo}"
                                IsReadOnly="{Binding DataContext.IsReadOnly, Mode=TwoWay, Source={StaticResource DataContextProxy}}"
                                Visibility="{Binding DataContext.SpecificationMemoColumnVisibility, Mode=TwoWay, Source={StaticResource DataContextProxy}}" />

                <DataGridComboBoxColumn Header="제조사"
                                        Visibility="{Binding DataContext.MakerColumnVisibility, Mode=TwoWay, Source={StaticResource DataContextProxy}}"
                                        IsReadOnly="{Binding DataContext.IsReadOnly, Mode=TwoWay, Source={StaticResource DataContextProxy}}"
                                        ItemsSource="{Binding DataContext.Makers, Mode=TwoWay, Source={StaticResource DataContextProxy}}"
                                        SelectedItemBinding="{Binding Inventory.Maker}"
                                        DisplayMemberPath="Name">
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}" />
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>

                <DataGridTextColumn Header="입고수량" IsReadOnly="True" Binding="{Binding InComingQuantity, StringFormat='{}{0:#,#.}'}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="출고수량" IsReadOnly="True" Binding="{Binding OutGoingQuantity, StringFormat='{}{0:#,#.}'}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="잔여수량" Binding="{Binding RemainingQuantity, StringFormat='{}{0:#,#.}'}" IsReadOnly="True"
                                    Visibility="{Binding DataContext.RemainQtyColumnVisibility, Mode=TwoWay, Source={StaticResource DataContextProxy}}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridComboBoxColumn Header="단위"
                                    IsReadOnly="{Binding DataContext.IsReadOnly, Mode=TwoWay, Source={StaticResource DataContextProxy}}"
                                    ItemsSource="{Binding DataContext.Measures, Mode=TwoWay, Source={StaticResource DataContextProxy}}"
                                    SelectedItemBinding="{Binding Inventory.Measure}"
                                    DisplayMemberPath="Name">
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}" />
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>

                <DataGridComboBoxColumn Header="보관장소"
                                    IsReadOnly="{Binding DataContext.IsReadOnly, Mode=TwoWay, Source={StaticResource DataContextProxy}}"
                                    ItemsSource="{Binding DataContext.Warehouses, Mode=TwoWay, Source={StaticResource DataContextProxy}}"
                                    SelectedItemBinding="{Binding Warehouse}"
                                    DisplayMemberPath="Name">
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}" />
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>

                <DataGridComboBoxColumn Header="프로젝트명"
                                    IsReadOnly="{Binding DataContext.IsReadOnly, Mode=TwoWay, Source={StaticResource DataContextProxy}}"
                                    ItemsSource="{Binding DataContext.Projects, Mode=TwoWay, Source={StaticResource DataContextProxy}}"
                                    SelectedItemBinding="{Binding Project}"
                                    DisplayMemberPath="Name">
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}" />
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>

                <DataGridTextColumn Header="종류" Width="Auto" Binding="{Binding StockType, Converter={StaticResource StockTypeConverter}}"
                                    IsReadOnly="True"
                                    Visibility="{Binding DataContext.SecondStockTypeColumnVisibility, Mode=TwoWay, Source={StaticResource DataContextProxy}}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding StockType}" Value="INCOMING">
                                    <Setter Property="Foreground" Value="#FF3362FF" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding StockType}" Value="OUTGOING">
                                    <Setter Property="Foreground" Value="#FFE24D83" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="단가" IsReadOnly="True" Binding="{Binding UnitPrice, StringFormat='{}{0:#,#.}'}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="합계" IsReadOnly="True" Binding="{Binding TotalPrice, StringFormat='{}{0:#,#.}'}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridComboBoxColumn Header="구입처"
                                    IsReadOnly="{Binding DataContext.IsReadOnly, Mode=TwoWay, Source={StaticResource DataContextProxy}}"
                                    ItemsSource="{Binding DataContext.Suppliers, Mode=TwoWay, Source={StaticResource DataContextProxy}}"
                                    SelectedItemBinding="{Binding Supplier}"
                                    DisplayMemberPath="Name">
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}" />
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>

                <DataGridComboBoxColumn Header="판매처"
                                    IsReadOnly="{Binding DataContext.IsReadOnly, Mode=TwoWay, Source={StaticResource DataContextProxy}}"
                                    ItemsSource="{Binding DataContext.Customers, Mode=TwoWay, Source={StaticResource DataContextProxy}}"
                                    SelectedItemBinding="{Binding Customer}"
                                    DisplayMemberPath="Name">
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}" />
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>

                <DataGridComboBoxColumn Header="담당자"
                                    IsReadOnly="{Binding DataContext.IsReadOnly, Mode=TwoWay, Source={StaticResource DataContextProxy}}"
                                    ItemsSource="{Binding DataContext.Employees, Mode=TwoWay, Source={StaticResource DataContextProxy}}"
                                    SelectedItemBinding="{Binding Employee}"
                                    DisplayMemberPath="Name">
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}" />
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>

                <DataGridTextColumn Header="비고" Width="2*" Binding="{Binding Memo}"
                                    IsReadOnly="{Binding DataContext.IsReadOnly, Mode=TwoWay, Source={StaticResource DataContextProxy}}" />
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>