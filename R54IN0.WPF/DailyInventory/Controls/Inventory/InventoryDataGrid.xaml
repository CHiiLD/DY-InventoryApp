<UserControl x:Class="R54IN0.WPF.InventoryDataGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:R54IN0.WPF"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:mvvmlight="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
             mc:Ignorable="d"
             x:Name="this"
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.InputBindings>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding IOStockAmenderWindowCallCommand}"/>
    </UserControl.InputBindings>

    <UserControl.Resources>
        <local:BindingProxy x:Key="DataContextProxy" DataContext="{Binding}" />
    </UserControl.Resources>

    <Grid>
        <DataGrid x:Name="DataGridControl" AutoGenerateColumns="False" CanUserAddRows="False" GridLinesVisibility="All"
              Style="{DynamicResource AzureDataGrid}"
              ItemsSource="{Binding Items}"
              SelectedItem="{Binding SelectedItem}" 
              CanUserDeleteRows="False">

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="CellEditEnding">
                    <mvvmlight:EventToCommand Command="{Binding CellEditEndingEventCommand}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <DataGrid.Resources>
                <ContextMenu  x:Key="InventoryDataGridContextMenu">
                    <MenuItem Header="새로운 입출고 기록 추가하기" InputGestureText="Ctrl+S" Command="{Binding DataContext.IOStockAmenderWindowCallCommand, Source={StaticResource DataContextProxy}}" />
                    <MenuItem Header="제품별 입출고 현황으로 보기" Command="{Binding DataContext.SearchAsIOStockRecordCommand, Source={StaticResource DataContextProxy}}" />
                    <MenuItem Header="재고와 입출고 기록을 모두 삭제하기" Command="{Binding DataContext.InventoryDataDeletionCommand, Source={StaticResource DataContextProxy}}" />
                </ContextMenu>
            </DataGrid.Resources>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow" BasedOn="{StaticResource MetroDataGridRow}">
                    <Setter Property="ContextMenu" Value="{StaticResource InventoryDataGridContextMenu}" />
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>
                <DataGridTextColumn Header="제품" Width="Auto" Binding="{Binding Product.Name}"
                                    IsReadOnly="{Binding DataContext.IsReadOnly, Mode=TwoWay, Source={StaticResource DataContextProxy}}"
                                    Visibility="{Binding DataContext.ProductColumnVisibility, Mode=TwoWay, Source={StaticResource DataContextProxy}}" />
                <DataGridTextColumn Header="규격" Width="Auto" Binding="{Binding Specification}"
                                    IsReadOnly="{Binding DataContext.IsReadOnly, Mode=TwoWay, Source={StaticResource DataContextProxy}}" />
                <DataGridTextColumn x:Name="MemoColumn" Header="설명" Width="30*" Binding="{Binding Memo}"
                                    IsReadOnly="{Binding DataContext.IsReadOnly, Mode=TwoWay, Source={StaticResource DataContextProxy}}" />
                <DataGridTextColumn x:Name="QuantityColumn" Header="수량" Width="Auto" Binding="{Binding Quantity, StringFormat='{}{0:#,#.}'}" IsReadOnly="True">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="단위" Width="Auto" Binding="{Binding Measure.Name}"
                                    IsReadOnly="{Binding DataContext.IsReadOnly, Mode=TwoWay, Source={StaticResource DataContextProxy}}"
                                    Visibility="{Binding DataContext.MeasureColumnVisibility, Mode=TwoWay, Source={StaticResource DataContextProxy}}">
                </DataGridTextColumn>
                <DataGridTextColumn Header="제조사" Width="Auto" Binding="{Binding Maker.Name}"
                                    IsReadOnly="{Binding DataContext.IsReadOnly, Mode=TwoWay, Source={StaticResource DataContextProxy}}"
                                    Visibility="{Binding DataContext.MakerColumnVisibility, Mode=TwoWay, Source={StaticResource DataContextProxy}}" />
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>