2016-02-29 21:01:09,648 [14640] DEBUG ReadOnlyServer-49134518 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:01:09,660 [14640] DEBUG ReadOnlyServer-49134518 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:01:09,661 [14640] DEBUG ReadOnlyServer-49134518 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:01:09,661 [14640] DEBUG ReadOnlyServer-49134518 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:01:09,661 [14640] DEBUG ReadOnlyServer-49134518 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:01:09,735 [14640] DEBUG WriteOnlyServer-624109 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:01:09,741 [14640] DEBUG WriteOnlyServer-624109 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:01:09,741 [14640] DEBUG WriteOnlyServer-624109 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:01:09,761 [14640] DEBUG ReadOnlyServer-49134518 - Listener (0.0.0.0:4000) was started
2016-02-29 21:01:09,763 [14640] DEBUG WriteOnlyServer-624109 - Listener (0.0.0.0:4001) was started
2016-02-29 21:01:09,809 [1816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:09,814 [5916] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:09,875 [12160] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:01:09,894 [5916] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:01:09,901 [6748] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:01:09,902 [14912] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:01:09,904 [9860] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:01:09,905 [14912] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:01:09,907 [180] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:01:09,908 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:01:09,910 [12160] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:01:09,911 [5916] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:01:09,914 [6748] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:01:09,914 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:01:09,917 [9860] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:01:09,917 [5916] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:01:09,920 [180] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:01:09,920 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:01:09,934 [12160] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6870)
2016-02-29 21:01:09,935 [14912] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:01:09,940 [14912] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:01:09,977 [14640] DEBUG ReadOnlyServer-49134518 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:01:09,978 [14640] DEBUG WriteOnlyServer-624109 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:01:09,995 [14640] DEBUG ReadOnlyServer-49134518 - Listener (0.0.0.0:4000) was started
2016-02-29 21:01:09,995 [14640] DEBUG WriteOnlyServer-624109 - Listener (0.0.0.0:4001) was started
2016-02-29 21:01:09,997 [14912] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:09,997 [14912] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:09,998 [180] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:01:10,000 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:01:10,001 [9860] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:01:10,002 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:01:10,003 [12160] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:01:10,003 [14912] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:01:10,004 [6748] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:01:10,005 [14912] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:01:10,005 [180] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:01:10,006 [5916] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:01:10,007 [9860] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:01:10,008 [14912] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:01:10,008 [12160] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:01:10,009 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:01:10,010 [6748] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:01:10,011 [14912] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:01:10,012 [180] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6870)
2016-02-29 21:01:10,014 [14912] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:01:10,014 [14912] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:01:10,039 [14640] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:01:10,047 [9860] DEBUG WriteOnlyServer-624109 - insert into Maker (ID, Name) values ('6bec6cca-0ac0-4dec-b0ab-6e82e903fb14', 'soime');
2016-02-29 21:01:10,050 [9860] DEBUG WriteOnlyServer-624109 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 184)
2016-02-29 21:01:10,143 [5916] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:01:10,145 [5916] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 6bec6cca-0ac0-4dec-b0ab-6e82e903fb14)
2016-02-29 21:01:10,158 [14640] DEBUG ReadOnlyServer-49134518 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:01:10,158 [14640] DEBUG WriteOnlyServer-624109 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:01:10,181 [14640] DEBUG ReadOnlyServer-49134518 - Listener (0.0.0.0:4000) was started
2016-02-29 21:01:10,181 [14640] DEBUG WriteOnlyServer-624109 - Listener (0.0.0.0:4001) was started
2016-02-29 21:01:10,193 [5916] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:10,193 [14912] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:10,198 [6748] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:01:10,199 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:01:10,200 [180] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:01:10,201 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:01:10,202 [9860] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1214)
2016-02-29 21:01:10,203 [14912] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:01:10,204 [12160] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:01:10,205 [5916] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:01:10,205 [6748] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:01:10,206 [5916] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:01:10,207 [180] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:01:10,207 [14912] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:01:10,208 [9860] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:01:10,209 [5916] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:01:10,210 [12160] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:01:10,210 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:01:10,212 [6748] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6870)
2016-02-29 21:01:10,213 [5916] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:01:10,213 [5916] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:01:10,216 [14640] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 21:01:10,217 [180] DEBUG WriteOnlyServer-624109 - delete from Maker where ID = '58ad1913-a5bd-4104-91e0-40c333fa72e4';
2016-02-29 21:01:10,225 [180] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 21:01:10,226 [180] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 21:01:10,226 [180] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = '58ad1913-a5bd-4104-91e0-40c333fa72e4';
2016-02-29 21:01:10,229 [180] DEBUG WriteOnlyServer-624109 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 21:01:10,229 [16192] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: DELT, TYPE: Maker)
2016-02-29 21:01:10,233 [16192] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 58ad1913-a5bd-4104-91e0-40c333fa72e4)
2016-02-29 21:01:10,235 [16192] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:01:10,236 [16192] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:01:10,236 [16192] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:01:10,239 [9860] DEBUG WriteOnlyServer-624109 - update InventoryFormat set MakerID = '' where ID = '05af790f-9a73-4f3e-bd05-cc49d58bda12';
2016-02-29 21:01:10,241 [9860] DEBUG WriteOnlyServer-624109 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 348)
2016-02-29 21:01:10,241 [9860] DEBUG WriteOnlyServer-624109 - update InventoryFormat set MakerID = '' where ID = 'abdb677e-da20-4489-9995-fc9e29630096';
2016-02-29 21:01:10,243 [9860] DEBUG WriteOnlyServer-624109 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 348)
2016-02-29 21:01:10,243 [9860] DEBUG WriteOnlyServer-624109 - update InventoryFormat set MakerID = '' where ID = 'd2c07acf-93f0-44b7-82f6-cedfd759dfb5';
2016-02-29 21:01:10,245 [9860] DEBUG WriteOnlyServer-624109 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 349)
2016-02-29 21:01:10,327 [14640] DEBUG ReadOnlyServer-49134518 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:01:10,327 [14640] DEBUG WriteOnlyServer-624109 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:01:10,329 [14640] DEBUG ReadOnlyServer-49134518 - Listener (0.0.0.0:4000) was started
2016-02-29 21:01:10,329 [14640] DEBUG WriteOnlyServer-624109 - Listener (0.0.0.0:4001) was started
2016-02-29 21:01:10,333 [5916] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:10,333 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:10,334 [12160] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:01:10,336 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:01:10,337 [9860] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:01:10,338 [5916] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:01:10,339 [12160] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1149)
2016-02-29 21:01:10,340 [5916] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:01:10,341 [9860] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:01:10,341 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:01:10,342 [180] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:01:10,343 [5916] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:01:10,344 [6748] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:01:10,345 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:01:10,345 [12160] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:01:10,346 [14912] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:01:10,347 [9860] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:01:10,348 [5916] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:01:10,349 [180] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6762)
2016-02-29 21:01:10,350 [14912] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:01:10,351 [14912] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:01:10,522 [14640] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 21:01:10,522 [12160] DEBUG WriteOnlyServer-624109 - insert into Product (ID, Name) values ('f71f9e87-1845-4f49-b028-999577ed6189', '새로운 제품');
2016-02-29 21:01:10,531 [12160] DEBUG WriteOnlyServer-624109 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 197)
2016-02-29 21:01:10,531 [16192] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Product)
2016-02-29 21:01:10,531 [16192] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Product, ID: f71f9e87-1845-4f49-b028-999577ed6189)
2016-02-29 21:01:10,627 [14640] DEBUG ReadOnlyServer-49134518 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:01:10,627 [14640] DEBUG WriteOnlyServer-624109 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:01:10,631 [14640] DEBUG ReadOnlyServer-49134518 - Listener (0.0.0.0:4000) was started
2016-02-29 21:01:10,631 [14640] DEBUG WriteOnlyServer-624109 - Listener (0.0.0.0:4001) was started
2016-02-29 21:01:10,634 [14912] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:10,634 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:10,635 [9860] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:01:10,636 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:01:10,637 [12160] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:01:10,638 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:01:10,639 [180] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1149)
2016-02-29 21:01:10,640 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:01:10,641 [6748] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:01:10,641 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:01:10,642 [9860] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:01:10,643 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:01:10,644 [12160] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:01:10,644 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:01:10,645 [180] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:01:10,646 [16192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:01:10,646 [6748] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:01:10,647 [5916] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:01:10,648 [9860] DEBUG ReadOnlyServer-49134518 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6762)
2016-02-29 21:01:10,649 [14912] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:01:10,649 [14912] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:01:10,652 [14640] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:01:10,652 [12160] DEBUG WriteOnlyServer-624109 - insert into Maker (ID, Name) values ('4a9d0906-ed5b-462c-a18d-67def7bc469c', 'some maker');
2016-02-29 21:01:10,652 [14640] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Measure)
2016-02-29 21:01:10,653 [14640] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:InventoryFormat)
2016-02-29 21:01:10,660 [12160] DEBUG WriteOnlyServer-624109 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 189)
2016-02-29 21:01:10,660 [14912] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:01:10,660 [12160] DEBUG WriteOnlyServer-624109 - insert into Measure (ID, Name) values ('e61b90a4-278e-4579-8177-fc3b586d6e8c', 'some measure');
2016-02-29 21:01:10,660 [14912] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 4a9d0906-ed5b-462c-a18d-67def7bc469c)
2016-02-29 21:01:10,667 [12160] DEBUG WriteOnlyServer-624109 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Measure, SIZE: 193)
2016-02-29 21:01:10,668 [14912] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Measure)
2016-02-29 21:01:10,668 [12160] DEBUG WriteOnlyServer-624109 - insert into InventoryFormat (ID, Specification, Quantity, Memo, ProductID, MakerID, MeasureID) values ('cd624838-48d5-4a09-8345-e7a8330442bd', 'some specification', '0', 'spec', 'c5defae5-6536-44fe-8efb-574470c669dd', '4a9d0906-ed5b-462c-a18d-67def7bc469c', 'e61b90a4-278e-4579-8177-fc3b586d6e8c');
2016-02-29 21:01:10,668 [14912] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: e61b90a4-278e-4579-8177-fc3b586d6e8c)
2016-02-29 21:01:10,670 [12160] DEBUG WriteOnlyServer-624109 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 394)
2016-02-29 21:01:10,670 [14912] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: InventoryFormat)
2016-02-29 21:01:10,670 [14912] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: cd624838-48d5-4a09-8345-e7a8330442bd)
2016-02-29 21:01:11,660 [14640] DEBUG ReadOnlyServer-49134518 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:01:11,660 [14640] DEBUG WriteOnlyServer-624109 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:01:37,520 [7416] DEBUG ReadOnlyServer-8101387 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:01:37,529 [7416] DEBUG ReadOnlyServer-8101387 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:01:37,529 [7416] DEBUG ReadOnlyServer-8101387 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:01:37,529 [7416] DEBUG ReadOnlyServer-8101387 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:01:37,529 [7416] DEBUG ReadOnlyServer-8101387 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:01:37,587 [7416] DEBUG WriteOnlyServer-41264644 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:01:37,588 [7416] DEBUG WriteOnlyServer-41264644 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:01:37,588 [7416] DEBUG WriteOnlyServer-41264644 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:01:37,606 [7416] DEBUG ReadOnlyServer-8101387 - Listener (0.0.0.0:4000) was started
2016-02-29 21:01:37,608 [7416] DEBUG WriteOnlyServer-41264644 - Listener (0.0.0.0:4001) was started
2016-02-29 21:01:37,653 [5772] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:37,658 [16504] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:37,712 [16580] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:01:37,729 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:01:37,736 [5752] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:01:37,736 [4644] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:01:37,738 [12240] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:01:37,739 [16504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:01:37,741 [200] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:01:37,742 [4644] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:01:37,744 [16580] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:01:37,744 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:01:37,746 [5752] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:01:37,747 [16504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:01:37,749 [12240] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:01:37,750 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:01:37,752 [200] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:01:37,753 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:01:37,763 [16580] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6871)
2016-02-29 21:01:37,765 [4644] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:01:37,769 [4644] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:01:37,799 [7416] DEBUG ReadOnlyServer-8101387 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:01:37,800 [7416] DEBUG WriteOnlyServer-41264644 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:01:37,804 [7416] DEBUG ReadOnlyServer-8101387 - Listener (0.0.0.0:4000) was started
2016-02-29 21:01:37,804 [7416] DEBUG WriteOnlyServer-41264644 - Listener (0.0.0.0:4001) was started
2016-02-29 21:01:37,806 [4644] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:37,806 [4644] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:37,807 [12240] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:01:37,810 [16504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:01:37,810 [16580] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:01:37,811 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:01:37,812 [5752] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:01:37,812 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:01:37,813 [200] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:01:37,813 [16504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:01:37,814 [12240] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:01:37,814 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:01:37,815 [16580] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:01:37,815 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:01:37,816 [5752] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:01:37,817 [16504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:01:37,817 [200] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:01:37,818 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:01:37,819 [12240] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6871)
2016-02-29 21:01:37,820 [4644] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:01:37,820 [4644] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:01:37,835 [7416] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:01:37,841 [16580] DEBUG WriteOnlyServer-41264644 - insert into Maker (ID, Name) values ('bd02a864-3817-4eb4-8a14-74ecfad5d482', 'soime');
2016-02-29 21:01:37,851 [16580] DEBUG WriteOnlyServer-41264644 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 184)
2016-02-29 21:01:37,930 [16504] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:01:37,931 [16504] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: bd02a864-3817-4eb4-8a14-74ecfad5d482)
2016-02-29 21:01:37,955 [7416] DEBUG ReadOnlyServer-8101387 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:01:37,955 [7416] DEBUG WriteOnlyServer-41264644 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:01:37,956 [7416] DEBUG ReadOnlyServer-8101387 - Listener (0.0.0.0:4000) was started
2016-02-29 21:01:37,956 [7416] DEBUG WriteOnlyServer-41264644 - Listener (0.0.0.0:4001) was started
2016-02-29 21:01:37,968 [4644] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:37,968 [4644] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:37,969 [200] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:01:37,971 [4644] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:01:37,972 [16580] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:01:37,972 [4644] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:01:37,973 [12240] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1214)
2016-02-29 21:01:37,973 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:01:37,974 [5752] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:01:37,975 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:01:37,975 [200] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:01:37,976 [16504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:01:37,977 [16580] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:01:37,977 [16504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:01:37,978 [12240] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:01:37,978 [16504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:01:37,979 [5752] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:01:37,980 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:01:37,981 [200] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6871)
2016-02-29 21:01:37,982 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:01:37,982 [1936] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:01:37,984 [7416] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 21:01:37,985 [16580] DEBUG WriteOnlyServer-41264644 - delete from Maker where ID = '707f5ed2-498c-41d4-9d03-252744b81c37';
2016-02-29 21:01:37,994 [16580] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 21:01:37,994 [16580] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 21:01:37,994 [16580] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = '707f5ed2-498c-41d4-9d03-252744b81c37';
2016-02-29 21:01:37,997 [16580] DEBUG WriteOnlyServer-41264644 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 21:01:37,997 [16504] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: DELT, TYPE: Maker)
2016-02-29 21:01:38,000 [16504] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 707f5ed2-498c-41d4-9d03-252744b81c37)
2016-02-29 21:01:38,001 [16504] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:01:38,002 [16504] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:01:38,002 [16504] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:01:38,004 [12240] DEBUG WriteOnlyServer-41264644 - update InventoryFormat set MakerID = '' where ID = '75be262e-954d-4e2c-8026-049f5f5a045c';
2016-02-29 21:01:38,006 [12240] DEBUG WriteOnlyServer-41264644 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 349)
2016-02-29 21:01:38,006 [12240] DEBUG WriteOnlyServer-41264644 - update InventoryFormat set MakerID = '' where ID = '8c4e1036-3e0b-452f-b2e7-b408f176d51b';
2016-02-29 21:01:38,008 [12240] DEBUG WriteOnlyServer-41264644 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 351)
2016-02-29 21:01:38,008 [12240] DEBUG WriteOnlyServer-41264644 - update InventoryFormat set MakerID = '' where ID = '952abf06-9cef-4ffa-8dae-a585a761d6aa';
2016-02-29 21:01:38,010 [12240] DEBUG WriteOnlyServer-41264644 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 348)
2016-02-29 21:01:38,095 [7416] DEBUG ReadOnlyServer-8101387 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:01:38,095 [7416] DEBUG WriteOnlyServer-41264644 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:01:38,098 [7416] DEBUG ReadOnlyServer-8101387 - Listener (0.0.0.0:4000) was started
2016-02-29 21:01:38,101 [7416] DEBUG WriteOnlyServer-41264644 - Listener (0.0.0.0:4001) was started
2016-02-29 21:01:38,106 [4644] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:38,107 [4644] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:38,108 [16580] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:01:38,109 [4644] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:01:38,110 [5752] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:01:38,111 [4644] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:01:38,111 [200] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1146)
2016-02-29 21:01:38,112 [4644] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:01:38,113 [12240] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:01:38,113 [4644] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:01:38,114 [16580] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:01:38,114 [4644] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:01:38,115 [5752] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:01:38,116 [4644] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:01:38,116 [200] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:01:38,117 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:01:38,118 [12240] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:01:38,118 [16504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:01:38,119 [16580] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6763)
2016-02-29 21:01:38,120 [16504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:01:38,121 [16504] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:01:38,262 [7416] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 21:01:38,262 [5752] DEBUG WriteOnlyServer-41264644 - insert into Product (ID, Name) values ('b06bd69d-0072-4387-a85c-7bb00698bae8', '새로운 제품');
2016-02-29 21:01:38,271 [5752] DEBUG WriteOnlyServer-41264644 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 197)
2016-02-29 21:01:38,271 [4644] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Product)
2016-02-29 21:01:38,272 [4644] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Product, ID: b06bd69d-0072-4387-a85c-7bb00698bae8)
2016-02-29 21:01:38,377 [7416] DEBUG ReadOnlyServer-8101387 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:01:38,377 [7416] DEBUG WriteOnlyServer-41264644 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:01:38,381 [7416] DEBUG ReadOnlyServer-8101387 - Listener (0.0.0.0:4000) was started
2016-02-29 21:01:38,381 [7416] DEBUG WriteOnlyServer-41264644 - Listener (0.0.0.0:4001) was started
2016-02-29 21:01:38,383 [16504] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:38,383 [16504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:38,384 [12240] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:01:38,386 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:01:38,387 [200] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:01:38,388 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:01:38,388 [5752] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1146)
2016-02-29 21:01:38,389 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:01:38,390 [16580] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:01:38,391 [16504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:01:38,391 [12240] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:01:38,392 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:01:38,392 [200] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:01:38,393 [16504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:01:38,394 [5752] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:01:38,394 [4644] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:01:38,395 [16580] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:01:38,395 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:01:38,397 [12240] DEBUG ReadOnlyServer-8101387 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6763)
2016-02-29 21:01:38,398 [4644] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:01:38,398 [4644] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:01:38,401 [7416] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:01:38,401 [200] DEBUG WriteOnlyServer-41264644 - insert into Maker (ID, Name) values ('715dfd1f-7023-4aba-aa68-8a00d71cdf02', 'some maker');
2016-02-29 21:01:38,401 [7416] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Measure)
2016-02-29 21:01:38,402 [7416] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:InventoryFormat)
2016-02-29 21:01:38,409 [200] DEBUG WriteOnlyServer-41264644 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 189)
2016-02-29 21:01:38,409 [1936] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:01:38,409 [1936] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 715dfd1f-7023-4aba-aa68-8a00d71cdf02)
2016-02-29 21:01:38,409 [200] DEBUG WriteOnlyServer-41264644 - insert into Measure (ID, Name) values ('4ea69f3d-114f-4500-8f84-39e360175511', 'some measure');
2016-02-29 21:01:38,414 [200] DEBUG WriteOnlyServer-41264644 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Measure, SIZE: 193)
2016-02-29 21:01:38,414 [1936] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Measure)
2016-02-29 21:01:38,414 [1936] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: 4ea69f3d-114f-4500-8f84-39e360175511)
2016-02-29 21:01:38,414 [200] DEBUG WriteOnlyServer-41264644 - insert into InventoryFormat (ID, Specification, Quantity, Memo, ProductID, MakerID, MeasureID) values ('e7cfcbbd-9bdc-4f05-8b7b-7e218853bb8e', 'some specification', '0', 'spec', '79ad9165-34af-49c0-9d1a-0c4aa5f62980', '715dfd1f-7023-4aba-aa68-8a00d71cdf02', '4ea69f3d-114f-4500-8f84-39e360175511');
2016-02-29 21:01:38,416 [200] DEBUG WriteOnlyServer-41264644 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 394)
2016-02-29 21:01:38,416 [1936] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: InventoryFormat)
2016-02-29 21:01:38,416 [1936] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: e7cfcbbd-9bdc-4f05-8b7b-7e218853bb8e)
2016-02-29 21:01:39,410 [7416] DEBUG ReadOnlyServer-8101387 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:01:39,410 [7416] DEBUG WriteOnlyServer-41264644 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:01:50,328 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:01:50,337 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:01:50,337 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:01:50,337 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:01:50,337 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:01:50,393 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:01:50,394 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:01:50,394 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:01:50,416 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - Listener (127.0.0.1:4000) was started
2016-02-29 21:01:50,418 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - Listener (127.0.0.1:4001) was started
2016-02-29 21:01:50,451 [5772] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:50,455 [1936] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:50,476 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 21:01:50,476 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 21:01:50,488 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - Listener (127.0.0.1:4000) was started
2016-02-29 21:01:50,489 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - Listener (127.0.0.1:4001) was started
2016-02-29 21:01:50,491 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 21:01:50,491 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 21:01:50,493 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - Listener (127.0.0.1:4000) was started
2016-02-29 21:01:50,493 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - Listener (127.0.0.1:4001) was started
2016-02-29 21:01:50,497 [16504] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:50,497 [16504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:50,561 [12240] DEBUG ReadOnlyServer-24968468 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:01:50,578 [16504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:01:50,582 [16504] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Product)
2016-02-29 21:01:50,587 [16580] DEBUG WriteOnlyServer-46700660 - delete from Product where ID = '5db4e63c-219f-4ca2-9278-b3dfb471e248';
2016-02-29 21:01:50,599 [16580] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 21:01:50,599 [16580] DEBUG R54IN0.Server.DeleteCommand - KillInventoryFormat
2016-02-29 21:01:50,599 [16580] DEBUG R54IN0.Server.DeleteCommand - delete from IOStockFormat where InventoryID in (select ID from InventoryFormat where ProductID = '5db4e63c-219f-4ca2-9278-b3dfb471e248');
2016-02-29 21:01:50,605 [16580] DEBUG R54IN0.Server.DeleteCommand - delete from InventoryFormat where ProductID = '5db4e63c-219f-4ca2-9278-b3dfb471e248';
2016-02-29 21:01:50,606 [16580] DEBUG WriteOnlyServer-46700660 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Product, SIZE: 164)
2016-02-29 21:01:50,611 [14068] DEBUG ReadOnlyServer-24968468 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Product, BYTE SIZE: 128)
2016-02-29 21:01:50,614 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Product)
2016-02-29 21:01:50,618 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 21:01:50,618 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 21:01:50,620 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - Listener (127.0.0.1:4000) was started
2016-02-29 21:01:50,621 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - Listener (127.0.0.1:4001) was started
2016-02-29 21:01:50,624 [1936] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:50,624 [16504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:50,637 [14068] DEBUG ReadOnlyServer-24968468 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:01:50,638 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:01:50,638 [1936] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Employee)
2016-02-29 21:01:50,638 [5752] DEBUG WriteOnlyServer-46700660 - delete from Employee where ID = 'ab0662eb-7b5b-4194-b6ee-01618d9198c3';
2016-02-29 21:01:50,641 [5752] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 21:01:50,642 [5752] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 21:01:50,642 [5752] DEBUG R54IN0.Server.DeleteCommand - update IOStockFormat set EmployeeID = '' where EmployeeID = 'ab0662eb-7b5b-4194-b6ee-01618d9198c3';
2016-02-29 21:01:50,644 [5752] DEBUG WriteOnlyServer-46700660 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Employee, SIZE: 165)
2016-02-29 21:01:50,650 [14992] DEBUG ReadOnlyServer-24968468 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Employee, BYTE SIZE: 129)
2016-02-29 21:01:50,651 [16504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Employee)
2016-02-29 21:01:50,654 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 21:01:50,655 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 21:01:50,656 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - Listener (127.0.0.1:4000) was started
2016-02-29 21:01:50,656 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - Listener (127.0.0.1:4001) was started
2016-02-29 21:01:50,660 [16504] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:50,660 [16504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:50,673 [14992] DEBUG ReadOnlyServer-24968468 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:01:50,674 [16504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:01:50,675 [16504] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 21:01:50,675 [13856] DEBUG WriteOnlyServer-46700660 - delete from Maker where ID = 'ccf65fbb-d103-4b08-8edc-83901702a4ae';
2016-02-29 21:01:50,681 [13856] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 21:01:50,681 [13856] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 21:01:50,681 [13856] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = 'ccf65fbb-d103-4b08-8edc-83901702a4ae';
2016-02-29 21:01:50,684 [13856] DEBUG WriteOnlyServer-46700660 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 21:01:50,687 [5752] DEBUG ReadOnlyServer-24968468 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Maker, BYTE SIZE: 126)
2016-02-29 21:01:50,689 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Maker)
2016-02-29 21:01:50,696 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 21:01:50,697 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 21:01:50,725 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - Listener (127.0.0.1:4000) was started
2016-02-29 21:01:50,725 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - Listener (127.0.0.1:4001) was started
2016-02-29 21:01:50,733 [1936] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:50,734 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:50,745 [14068] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 21:01:50,750 [5752] DEBUG WriteOnlyServer-46700660 - insert into Product (ID, Name) values ('aee6cd02-9e91-4ea8-9d66-459a346cdb00', 'new');
2016-02-29 21:01:50,757 [5752] DEBUG WriteOnlyServer-46700660 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 184)
2016-02-29 21:01:50,767 [14992] DEBUG ReadOnlyServer-24968468 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Product, BYTE SIZE: 186)
2016-02-29 21:01:50,769 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Product)
2016-02-29 21:01:50,776 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 21:01:50,777 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 21:01:50,780 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - Listener (127.0.0.1:4000) was started
2016-02-29 21:01:50,780 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - Listener (127.0.0.1:4001) was started
2016-02-29 21:01:50,790 [1936] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:50,790 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:50,813 [2960] DEBUG ReadOnlyServer-24968468 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 860)
2016-02-29 21:01:50,814 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:01:50,818 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 21:01:50,818 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 21:01:50,820 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - Listener (127.0.0.1:4000) was started
2016-02-29 21:01:50,821 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - Listener (127.0.0.1:4001) was started
2016-02-29 21:01:50,828 [1936] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:50,828 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:50,839 [2960] DEBUG ReadOnlyServer-24968468 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 860)
2016-02-29 21:01:50,841 [3384] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:01:50,842 [14068] DEBUG ReadOnlyServer-24968468 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Product, BYTE SIZE: 192)
2016-02-29 21:01:50,842 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Product)
2016-02-29 21:01:50,846 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 21:01:50,846 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 21:01:50,848 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - Listener (127.0.0.1:4000) was started
2016-02-29 21:01:50,848 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - Listener (127.0.0.1:4001) was started
2016-02-29 21:01:50,855 [1936] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:50,855 [1936] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:50,882 [5752] DEBUG ReadOnlyServer-24968468 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6586)
2016-02-29 21:01:50,884 [16504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:01:50,886 [14992] DEBUG ReadOnlyServer-24968468 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: InventoryFormat, BYTE SIZE: 382)
2016-02-29 21:01:50,887 [3384] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:InventoryFormat)
2016-02-29 21:01:50,891 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 21:01:50,891 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 21:01:50,893 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - Listener (127.0.0.1:4000) was started
2016-02-29 21:01:50,893 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - Listener (127.0.0.1:4001) was started
2016-02-29 21:01:50,897 [3384] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:50,897 [3384] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:01:50,909 [14992] DEBUG ReadOnlyServer-24968468 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 860)
2016-02-29 21:01:50,911 [3384] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:01:50,911 [3384] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:Product)
2016-02-29 21:01:50,914 [16580] DEBUG WriteOnlyServer-46700660 - update Product set Name = 'some' where ID = '22a22bb1-f773-428d-a0ed-129fad79f04c';
2016-02-29 21:01:50,921 [16580] DEBUG WriteOnlyServer-46700660 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 185)
2016-02-29 21:01:50,923 [16580] DEBUG ReadOnlyServer-24968468 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Product, BYTE SIZE: 187)
2016-02-29 21:01:50,924 [3384] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Product)
2016-02-29 21:01:50,932 [TestRunnerThread] DEBUG ReadOnlyServer-24968468 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 21:01:50,932 [TestRunnerThread] DEBUG WriteOnlyServer-46700660 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 21:01:52,296 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 73f3e87d-1439-4312-be1b-13ea29c663dc)
2016-02-29 21:01:52,316 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 3c49378f-eaf4-412c-beee-d08d35f05974)
2016-02-29 21:01:53,843 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 879c65ef-fe13-4295-bec2-dd7c29952a27)
2016-02-29 21:01:53,846 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: a298a525-fc2e-48cb-a826-0d08f98b7298)
2016-02-29 21:01:53,848 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: b191e829-614c-4001-9bc8-04e94aeb45a2)
2016-02-29 21:01:53,859 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: c13c2f6a-85ff-4c8c-8887-d5e03f1db735)
2016-02-29 21:01:54,017 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 89b3cd1b-ef37-4f19-9164-748cbc56f5c3)
2016-02-29 21:01:54,027 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 5e4b7beb-dc83-4fcf-b146-512d111fa6f8)
2016-02-29 21:01:56,905 [12760] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:01:57,169 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 0f95ec52-f07a-42b7-8fd0-3c8460a56fee)
2016-02-29 21:01:57,169 [12760] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:01:57,174 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 551d18c8-2e2a-4b96-b4f4-c2650e05ab4a)
2016-02-29 21:01:57,184 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1ae00392-22b5-4d80-82eb-feb5ddc3121e)
2016-02-29 21:01:57,184 [12760] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  -13 -> -3
2016-02-29 21:01:57,188 [12760] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:01:57,192 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: d499c8bf-4139-4e60-a543-a9063abf7a4e)
2016-02-29 21:01:57,196 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 2b87f90a-59ae-4547-92ea-beb18a4874bc)
2016-02-29 21:01:57,196 [12760] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  17 -> 18
2016-02-29 21:01:57,200 [12760] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:01:57,203 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: eb92bc88-dbce-4fe1-ae34-383ae2d19e32)
2016-02-29 21:01:57,206 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Warehouse, ID: 44827249-040d-4afe-8b06-722d34a1400e)
2016-02-29 21:01:57,208 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: 046d942b-30e5-4ff3-b3b7-cda8b66415b6)
2016-02-29 21:01:57,210 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 1f40ad85-5ccd-4e35-9d7e-3bdd9232d750)
2016-02-29 21:01:57,213 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 291879ea-1a26-4fe4-967f-f10f59747339)
2016-02-29 21:01:57,213 [12760] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  2 -> 3
2016-02-29 21:01:57,217 [12760] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:01:57,221 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: f1600e8a-9718-4d76-8818-a96d4f845cf3)
2016-02-29 21:01:57,224 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 0f95ec52-f07a-42b7-8fd0-3c8460a56fee)
2016-02-29 21:01:57,224 [12760] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  0 -> -1
2016-02-29 21:01:57,228 [12760] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:01:57,232 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Customer, ID: 60e9c7d1-45db-4847-9696-4a08570c8339)
2016-02-29 21:01:57,234 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Project, ID: 4664897a-a3e8-4f35-a4c8-d11c584ab773)
2016-02-29 21:01:57,236 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: a586532f-c4cf-45dd-96a2-9cff462c10bd)
2016-02-29 21:01:57,237 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 1abe91e5-062b-4047-8417-b7a11154e440)
2016-02-29 21:01:57,241 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 375a7e08-e949-4f15-91b8-4ff2e8a92b9e)
2016-02-29 21:01:57,241 [12760] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  8 -> 7
2016-02-29 21:01:57,262 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 291879ea-1a26-4fe4-967f-f10f59747339)
2016-02-29 21:01:57,263 [12760] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  3 -> 5
2016-02-29 21:01:57,277 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1ae00392-22b5-4d80-82eb-feb5ddc3121e)
2016-02-29 21:01:57,282 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1ae00392-22b5-4d80-82eb-feb5ddc3121e)
2016-02-29 21:01:57,294 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 75f65312-a564-4f10-b954-09b004757ec6)
2016-02-29 21:01:57,300 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 75f65312-a564-4f10-b954-09b004757ec6)
2016-02-29 21:01:57,306 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 75f65312-a564-4f10-b954-09b004757ec6)
2016-02-29 21:01:57,352 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 25815de6-1118-4675-ab1f-4455ee80276b)
2016-02-29 21:01:57,352 [12760] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:01:57,355 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 3d1efe42-6d92-4167-85df-bea3d76e9444)
2016-02-29 21:01:57,358 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 25815de6-1118-4675-ab1f-4455ee80276b)
2016-02-29 21:01:57,358 [12760] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  0 -> 1
2016-02-29 21:01:57,358 [12760] DEBUG R54IN0.WPF.DataDirector - update Property: Memo   -> 
2016-02-29 21:01:57,358 [12760] DEBUG R54IN0.WPF.DataDirector - update Property: MakerID   -> 
2016-02-29 21:01:57,358 [12760] DEBUG R54IN0.WPF.DataDirector - update Property: MeasureID   -> 
2016-02-29 21:01:57,358 [12760] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:01:57,360 [12760] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:01:57,369 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 6a2cf1aa-ff0e-4cb8-82d5-03a94a34dc4b)
2016-02-29 21:01:57,372 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 25815de6-1118-4675-ab1f-4455ee80276b)
2016-02-29 21:01:57,372 [12760] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  1 -> 0
2016-02-29 21:01:57,372 [12760] DEBUG R54IN0.WPF.DataDirector - update Property: MakerID   -> 
2016-02-29 21:01:57,372 [12760] DEBUG R54IN0.WPF.DataDirector - update Property: MeasureID   -> 
2016-02-29 21:01:57,372 [12760] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:01:57,374 [12760] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:01:57,379 [12760] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:01:57,385 [12760] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:01:57,389 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: d8ed9a0e-8ec9-48f1-b0ae-b4c01c379320)
2016-02-29 21:01:57,393 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 865854f9-bd6a-473c-990d-21d8f7606777)
2016-02-29 21:01:57,393 [12760] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  -19 -> -18
2016-02-29 21:01:57,393 [12760] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:01:57,398 [12760] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:01:57,404 [12760] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:01:57,408 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: ec308afe-de96-49a6-8696-fa01edd61f34)
2016-02-29 21:01:57,412 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: c5a1bc92-a404-4527-b4e7-58b15faa7c59)
2016-02-29 21:01:57,412 [12760] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  15 -> 14
2016-02-29 21:01:57,412 [12760] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:01:57,414 [12760] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:01:58,422 [12760] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 5002afb4-5044-4521-881e-c7b2f7a5db45)
2016-02-29 21:01:58,422 [12760] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  9 -> 3
2016-02-29 21:01:59,994 [5856] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:01:59,996 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: cdf858fb-9898-4dfd-9119-0f5bd99420a0)
2016-02-29 21:01:59,999 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 9708bf3c-ace6-4f5d-9fd2-4ac91b824f31)
2016-02-29 21:01:59,999 [5856] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  17 -> 18
2016-02-29 21:02:00,036 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 55245934-8608-485e-bdc8-e04a6891cf33)
2016-02-29 21:02:00,066 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: a71f2b70-df02-4819-8531-98b29cd48c70)
2016-02-29 21:02:00,066 [5856] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  -8 -> -102
2016-02-29 21:02:00,080 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: c4cc2465-a85b-4aa6-a494-16745eb9db9d)
2016-02-29 21:02:00,080 [5856] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  -8 -> -20
2016-02-29 21:02:00,082 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: c4cc2465-a85b-4aa6-a494-16745eb9db9d)
2016-02-29 21:02:00,085 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: c4cc2465-a85b-4aa6-a494-16745eb9db9d)
2016-02-29 21:02:00,120 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: d4e63bcf-0717-4f91-afdb-c34f6629ad9f)
2016-02-29 21:02:00,122 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: b6d72d7a-690c-46f8-bae3-4c2ed9d44598)
2016-02-29 21:02:00,122 [5856] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  5 -> -4
2016-02-29 21:02:00,134 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 5ae685fc-4b79-4ebf-b20c-27d8b32c698f)
2016-02-29 21:02:00,138 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 6acd39af-c4d3-41e5-b315-d09d6e37c580)
2016-02-29 21:02:00,138 [5856] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  -24 -> -15
2016-02-29 21:02:00,151 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 19855bdf-227e-42aa-940b-17a2bbebd157)
2016-02-29 21:02:00,153 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: fa2d510d-8de0-4e71-8e8c-bff0b30487a5)
2016-02-29 21:02:00,153 [5856] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  0 -> -4
2016-02-29 21:02:00,165 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 6c11feeb-9be7-40bb-864b-d02a77001a06)
2016-02-29 21:02:00,167 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: fc33f6bf-24ba-4304-8bbc-fdb038c00951)
2016-02-29 21:02:00,167 [5856] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  -21 -> -25
2016-02-29 21:02:00,191 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 5fccdd58-c43f-4918-8b69-dbb62cba2129)
2016-02-29 21:02:00,191 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: c37a2f4c-a5f9-40e4-bd05-3b55fa837c71)
2016-02-29 21:02:00,192 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 8ce18847-c77c-4467-ad45-acb777d653c1)
2016-02-29 21:02:00,193 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 0991a6f6-0988-4a73-b142-647eeca04ef8)
2016-02-29 21:02:00,194 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 4d7537d6-685d-4797-9384-8b579c6042e5)
2016-02-29 21:02:00,195 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 93d60edd-34f0-438b-b53f-402587e2303a)
2016-02-29 21:02:00,195 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: d3ad1c24-fc77-433f-86d7-68393023b42a)
2016-02-29 21:02:00,196 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: e133139a-0c72-4dc1-9433-53ba516cf219)
2016-02-29 21:02:00,197 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 362c76b8-9951-49d3-83c6-a5023b709661)
2016-02-29 21:02:00,198 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: f510d7b0-7e25-486a-a7dc-831a7dcbd439)
2016-02-29 21:02:00,198 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 836ea098-5f61-46c8-b3d2-9a94f34fce9b)
2016-02-29 21:02:00,199 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: de9af497-ca66-49a7-a67f-ffc6b80e949a)
2016-02-29 21:02:00,200 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 5938d2af-dc0d-4fe4-9e52-977902c0e34c)
2016-02-29 21:02:00,201 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 10ddf592-47ea-4703-8282-42aad5fed032)
2016-02-29 21:02:00,202 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: e6e7fd73-d7a7-451a-99d9-441b9f6f368b)
2016-02-29 21:02:00,204 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 2b5215c1-ad67-428a-bf88-a5074137a2cd)
2016-02-29 21:02:00,205 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 816f3cf6-fb1a-47c9-b022-84426af1e4e9)
2016-02-29 21:02:00,205 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 2b81a295-4e34-45eb-be9f-23625212dd7d)
2016-02-29 21:02:00,206 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: cdb989f4-41df-42c3-bdcc-5249eccf029c)
2016-02-29 21:02:00,223 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 2b0c4755-6a24-46ea-bbd0-d1f8df51d96a)
2016-02-29 21:02:00,225 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: c4cc2465-a85b-4aa6-a494-16745eb9db9d)
2016-02-29 21:02:00,225 [5856] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  -8 -> 1
2016-02-29 21:02:00,238 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 872eb5bd-3df7-46c6-9e05-31f890cb7db7)
2016-02-29 21:02:00,240 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 16b4828d-53cd-443d-a5c8-bdf5bee1e42d)
2016-02-29 21:02:00,240 [5856] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  24 -> 29
2016-02-29 21:02:00,253 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: aab54d82-d282-4592-b077-a575fb8c39a8)
2016-02-29 21:02:00,255 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 6e751984-db56-400f-82ce-32685e864d39)
2016-02-29 21:02:00,255 [5856] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  25 -> 31
2016-02-29 21:02:00,269 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Project, id: 6b3957f0-9032-4a6b-98ec-5516598e150e)
2016-02-29 21:02:00,274 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: fa2d510d-8de0-4e71-8e8c-bff0b30487a5)
2016-02-29 21:02:00,277 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f466257f-5723-48ac-a7df-cf8889a98f41)
2016-02-29 21:02:00,279 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f3befe53-8325-4c04-9438-059f6dd6d1cd)
2016-02-29 21:02:00,281 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 6f04fedf-620b-42e1-847a-cd2a87569541)
2016-02-29 21:02:00,284 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 5fccdd58-c43f-4918-8b69-dbb62cba2129)
2016-02-29 21:02:00,286 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 55245934-8608-485e-bdc8-e04a6891cf33)
2016-02-29 21:02:00,288 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 9708bf3c-ace6-4f5d-9fd2-4ac91b824f31)
2016-02-29 21:02:00,291 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 6e751984-db56-400f-82ce-32685e864d39)
2016-02-29 21:02:00,293 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: b6d72d7a-690c-46f8-bae3-4c2ed9d44598)
2016-02-29 21:02:00,296 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 0f035261-56d7-4cc6-9727-2e413ba0b6c3)
2016-02-29 21:02:00,298 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 6f04fedf-620b-42e1-847a-cd2a87569541)
2016-02-29 21:02:00,300 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 16b4828d-53cd-443d-a5c8-bdf5bee1e42d)
2016-02-29 21:02:00,303 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 5fccdd58-c43f-4918-8b69-dbb62cba2129)
2016-02-29 21:02:00,305 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 276558ff-2647-4edc-aa2e-dd74f9aeffab)
2016-02-29 21:02:00,308 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: e671a64e-2f57-442d-aa3a-aca94f560c0a)
2016-02-29 21:02:00,310 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 90dbaebd-eb84-4eb2-a85f-cf6ddd77842f)
2016-02-29 21:02:00,313 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ba3de8ac-980d-46ec-987e-65ea1c62d994)
2016-02-29 21:02:00,315 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 78f3d3bc-c652-4152-82d3-fcc42faaf718)
2016-02-29 21:02:00,318 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 6e751984-db56-400f-82ce-32685e864d39)
2016-02-29 21:02:00,322 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: a71f2b70-df02-4819-8531-98b29cd48c70)
2016-02-29 21:02:00,325 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f466257f-5723-48ac-a7df-cf8889a98f41)
2016-02-29 21:02:00,328 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1f823673-d186-479e-911d-2ba095833545)
2016-02-29 21:02:00,330 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 78f3d3bc-c652-4152-82d3-fcc42faaf718)
2016-02-29 21:02:00,332 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: fa2d510d-8de0-4e71-8e8c-bff0b30487a5)
2016-02-29 21:02:00,335 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ba3de8ac-980d-46ec-987e-65ea1c62d994)
2016-02-29 21:02:00,338 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 9865f21d-d541-4bb2-871e-bdce075c319e)
2016-02-29 21:02:00,340 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: e671a64e-2f57-442d-aa3a-aca94f560c0a)
2016-02-29 21:02:00,343 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 16b4828d-53cd-443d-a5c8-bdf5bee1e42d)
2016-02-29 21:02:00,345 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 6f04fedf-620b-42e1-847a-cd2a87569541)
2016-02-29 21:02:00,347 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: fda5ca25-add6-4704-87cb-d54672c0a032)
2016-02-29 21:02:00,349 [5856] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 16b4828d-53cd-443d-a5c8-bdf5bee1e42d)
2016-02-29 21:02:01,689 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 9d31053f-edf0-4ef1-a74e-0a2825ed771e)
2016-02-29 21:02:01,706 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: c9db3cfe-961a-4c3b-b6e0-f8f271ab4703)
2016-02-29 21:02:01,715 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 413f6098-2259-4ac8-bf0b-3ad222174054)
2016-02-29 21:02:01,723 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 413f6098-2259-4ac8-bf0b-3ad222174054)
2016-02-29 21:02:01,744 [14028] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 2c58be45-75df-4c41-8516-73b7b9a85d40)
2016-02-29 21:02:01,787 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: f057035e-b7b7-4fb4-a669-35bafa82b22b)
2016-02-29 21:02:01,800 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: bdf6fd5f-b33f-4b68-8796-03d3def99841)
2016-02-29 21:02:01,807 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 52281340-e47c-41dc-b2d7-3d46a75affac)
2016-02-29 21:02:01,817 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Measure, id: 213fa580-54b9-42cf-8143-02686620f782)
2016-02-29 21:02:05,250 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 02d1b0b2-20e5-4a9b-9849-a6db6eb99133)
2016-02-29 21:02:05,253 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 42e7ebf8-3f2f-4035-9808-3c859cd4f74f)
2016-02-29 21:02:05,253 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  6 -> 7
2016-02-29 21:02:05,255 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 052d8d3e-ef79-4f58-8742-9c114c9c1985)
2016-02-29 21:02:05,258 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 4772d528-f676-4e26-b825-b7b88e42ae62)
2016-02-29 21:02:05,258 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  12 -> 14
2016-02-29 21:02:05,260 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 0669db5f-b4d7-4d28-bb44-e5e3609245f0)
2016-02-29 21:02:05,263 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 59d11d32-ad1a-4c03-b0fe-8fc8d2048118)
2016-02-29 21:02:05,263 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  -13 -> -10
2016-02-29 21:02:05,266 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 090e0668-f41e-4382-96b7-2b97d41727aa)
2016-02-29 21:02:05,269 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: bd2b3851-4e74-4077-b814-edc8c46c5dd8)
2016-02-29 21:02:05,269 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  -13 -> -9
2016-02-29 21:02:05,272 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 0b8a0643-5d48-404f-9e5e-f1bd51df9413)
2016-02-29 21:02:05,275 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 4c5c6441-1159-4287-b26f-24ab145030db)
2016-02-29 21:02:05,275 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  -1 -> 5
2016-02-29 21:02:05,277 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 0e1cf878-493b-470b-aee7-7bc6b1313c4d)
2016-02-29 21:02:05,280 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 0aeb4d46-ccd6-4d31-a831-d1fc9bdf341a)
2016-02-29 21:02:05,280 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  7 -> 14
2016-02-29 21:02:05,282 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 1495e4bf-ef8c-4143-bae9-e1f6f892606c)
2016-02-29 21:02:05,286 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: db0c72f4-0419-4713-bff3-93bade583384)
2016-02-29 21:02:05,286 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  1 -> 5
2016-02-29 21:02:05,288 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 17aa33ac-2a41-417e-b65b-e63aeaf74ea6)
2016-02-29 21:02:05,291 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ca09a3a3-1c80-45da-ac75-80fd0f0f9b8f)
2016-02-29 21:02:05,291 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  5 -> 13
2016-02-29 21:02:05,293 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 17ba842e-0738-4db6-b70f-b0330471d233)
2016-02-29 21:02:05,297 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: c1e2125a-fc25-47db-8989-5f8d95a18a42)
2016-02-29 21:02:05,297 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  17 -> 21
2016-02-29 21:02:05,300 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 1c3370fc-8b09-457a-a32e-7ac8a5f8e58f)
2016-02-29 21:02:05,303 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 42e7ebf8-3f2f-4035-9808-3c859cd4f74f)
2016-02-29 21:02:05,303 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  7 -> 12
2016-02-29 21:02:05,310 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 1d512db8-6bfd-4dcd-a04e-26476192fae2)
2016-02-29 21:02:05,313 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 25de612f-90cc-47c5-86c1-107d6b535e26)
2016-02-29 21:02:05,313 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  1 -> 3
2016-02-29 21:02:05,315 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 2052f158-9045-4bb5-a3b7-e6749dcb6121)
2016-02-29 21:02:05,319 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 5bea5cab-eb42-4745-809f-96db79be635c)
2016-02-29 21:02:05,319 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  10 -> 14
2016-02-29 21:02:05,321 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 2277c339-8d59-4a8b-994f-0c4edbcc2766)
2016-02-29 21:02:05,323 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: e489292d-cd13-4992-a72b-7bd89920ccf6)
2016-02-29 21:02:05,324 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  10 -> 16
2016-02-29 21:02:05,328 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 24c87d34-ecd7-406b-b2ba-7c629adc2566)
2016-02-29 21:02:05,331 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: bbfcae15-79b1-4c64-aca5-b019939e646f)
2016-02-29 21:02:05,331 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  19 -> 26
2016-02-29 21:02:05,334 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 27e4a72a-069f-4fb0-a577-ac8d2a6f7af5)
2016-02-29 21:02:05,338 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ca09a3a3-1c80-45da-ac75-80fd0f0f9b8f)
2016-02-29 21:02:05,338 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  13 -> 19
2016-02-29 21:02:05,340 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 28a83eaa-abbb-49ed-be60-a228eb4f9d31)
2016-02-29 21:02:05,343 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 4c5c6441-1159-4287-b26f-24ab145030db)
2016-02-29 21:02:05,344 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  5 -> 8
2016-02-29 21:02:05,346 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 29c1aa4e-6d85-4de8-8cb6-96daff394773)
2016-02-29 21:02:05,349 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f184c962-a2ab-4778-a661-8addc7c71e82)
2016-02-29 21:02:05,349 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  -8 -> -2
2016-02-29 21:02:05,352 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 29ecebf7-4804-4c76-9efc-ed01164514fb)
2016-02-29 21:02:05,355 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: bd2b3851-4e74-4077-b814-edc8c46c5dd8)
2016-02-29 21:02:05,355 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  -9 -> -4
2016-02-29 21:02:05,357 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 313f4150-706d-40f3-926c-45646cbfeccd)
2016-02-29 21:02:05,360 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: a6204790-4e62-49cd-92b3-93b9098a170a)
2016-02-29 21:02:05,360 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  4 -> 10
2016-02-29 21:02:05,362 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 36aecc1e-dde0-45b4-99fb-62967559de1c)
2016-02-29 21:02:05,365 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 0aeb4d46-ccd6-4d31-a831-d1fc9bdf341a)
2016-02-29 21:02:05,365 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  14 -> 21
2016-02-29 21:02:05,368 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 4e3814ef-59f4-4998-9b35-e03694b4ebda)
2016-02-29 21:02:05,372 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1ec6d045-0373-44ad-ba14-c63b3e4ff519)
2016-02-29 21:02:05,372 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  -4 -> 3
2016-02-29 21:02:05,374 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 58b3dbff-f6f0-4e00-953b-1aa458b6a27b)
2016-02-29 21:02:05,378 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1ec6d045-0373-44ad-ba14-c63b3e4ff519)
2016-02-29 21:02:05,378 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  3 -> 7
2016-02-29 21:02:05,380 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 5c515f8b-a9e0-46f1-9b81-2905b540dc3b)
2016-02-29 21:02:05,383 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: c1e2125a-fc25-47db-8989-5f8d95a18a42)
2016-02-29 21:02:05,383 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  21 -> 23
2016-02-29 21:02:05,385 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 60537011-bbad-482f-a573-14d3578a90e6)
2016-02-29 21:02:05,388 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 4c5c6441-1159-4287-b26f-24ab145030db)
2016-02-29 21:02:05,388 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  8 -> 16
2016-02-29 21:02:05,391 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 669f9e01-4aa7-4366-97a3-c70d4f71e389)
2016-02-29 21:02:05,394 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: db0c72f4-0419-4713-bff3-93bade583384)
2016-02-29 21:02:05,395 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  5 -> 11
2016-02-29 21:02:05,398 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 78a224a6-a948-4957-8c39-a07de7107a82)
2016-02-29 21:02:05,402 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f184c962-a2ab-4778-a661-8addc7c71e82)
2016-02-29 21:02:05,402 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  -2 -> 1
2016-02-29 21:02:05,405 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 7cf54ffd-4be9-4ecf-99f4-aba58f16125d)
2016-02-29 21:02:05,408 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 00c309a9-2b3a-4588-89a4-92e82fdc99b2)
2016-02-29 21:02:05,408 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  1 -> 6
2016-02-29 21:02:05,410 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 7efa6dc8-150e-463b-85f9-543c6621ba59)
2016-02-29 21:02:05,413 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 4772d528-f676-4e26-b825-b7b88e42ae62)
2016-02-29 21:02:05,413 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  14 -> 22
2016-02-29 21:02:05,416 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 827fdad5-4e94-4201-bd3c-d08265c17dc9)
2016-02-29 21:02:05,419 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f184c962-a2ab-4778-a661-8addc7c71e82)
2016-02-29 21:02:05,419 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  1 -> 6
2016-02-29 21:02:05,422 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 8781c3c3-cd07-4e77-9305-d206267f0058)
2016-02-29 21:02:05,424 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 5ce5af97-1086-4eb2-99dd-5e4a22ee320c)
2016-02-29 21:02:05,424 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  3 -> 10
2016-02-29 21:02:05,427 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 8f95f99f-2d5f-477d-b8c8-d88c4a533227)
2016-02-29 21:02:05,430 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 0aeb4d46-ccd6-4d31-a831-d1fc9bdf341a)
2016-02-29 21:02:05,430 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  21 -> 23
2016-02-29 21:02:05,432 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 8ffbf4b1-6196-4fc0-8e7d-deb4970584ab)
2016-02-29 21:02:05,435 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: b8310c14-5243-4c5d-bb4a-84f6dacc1bd2)
2016-02-29 21:02:05,435 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  -4 -> 5
2016-02-29 21:02:05,437 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 986307c4-c176-4277-beb2-4e91ebf0fe0f)
2016-02-29 21:02:05,439 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 25de612f-90cc-47c5-86c1-107d6b535e26)
2016-02-29 21:02:05,439 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  3 -> 10
2016-02-29 21:02:05,441 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 99cad960-e8ec-43c7-b179-ae0ae0305e26)
2016-02-29 21:02:05,444 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: d3e2636b-c789-4fd8-8677-8e6e9a43c7fe)
2016-02-29 21:02:05,444 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  0 -> 6
2016-02-29 21:02:05,446 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: aa9ce01a-54dc-49af-b8cb-372cbe764ed0)
2016-02-29 21:02:05,450 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ca09a3a3-1c80-45da-ac75-80fd0f0f9b8f)
2016-02-29 21:02:05,450 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  19 -> 21
2016-02-29 21:02:05,452 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: b77b5ca3-8b0c-4fc5-901f-b18407b17200)
2016-02-29 21:02:05,455 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: b679d4dc-2e26-4f6e-ab65-ca5af2d196bd)
2016-02-29 21:02:05,455 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  3 -> 6
2016-02-29 21:02:05,458 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: d0bf2449-718d-4b99-8de5-ce4b5372f867)
2016-02-29 21:02:05,460 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: a6204790-4e62-49cd-92b3-93b9098a170a)
2016-02-29 21:02:05,460 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  10 -> 15
2016-02-29 21:02:05,463 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: d50285d3-81f9-4e50-9a96-5cf36610fdb6)
2016-02-29 21:02:05,465 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: a6204790-4e62-49cd-92b3-93b9098a170a)
2016-02-29 21:02:05,465 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  15 -> 17
2016-02-29 21:02:05,467 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: f06f219a-fd2c-4190-a71d-92e41317d5e2)
2016-02-29 21:02:05,469 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 06080d74-a40c-4633-8fd8-f1b6f36c1cc4)
2016-02-29 21:02:05,469 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  2 -> 11
2016-02-29 21:02:05,471 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: f452688e-94c2-4aeb-b3fe-3769d2344f80)
2016-02-29 21:02:05,475 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 4c5c6441-1159-4287-b26f-24ab145030db)
2016-02-29 21:02:05,475 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  16 -> 23
2016-02-29 21:02:05,478 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: f4ffe3ef-ca79-4cbb-b714-cd42fe5cb1c5)
2016-02-29 21:02:05,480 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 4f61a15e-eeb7-4bc9-9dac-fb666ebf9c2d)
2016-02-29 21:02:05,480 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  4 -> 11
2016-02-29 21:02:05,482 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: f826c055-15a4-462f-afbd-08206c3180d1)
2016-02-29 21:02:05,486 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1ec6d045-0373-44ad-ba14-c63b3e4ff519)
2016-02-29 21:02:05,486 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity  7 -> 11
2016-02-29 21:02:05,489 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Project, id: 899b9cdd-a3dd-4e4e-a006-48ff3f16cfed)
2016-02-29 21:02:07,300 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Product, id: d68b3014-dca3-4fea-884d-69d63f2b8f2f)
2016-02-29 21:02:07,300 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 5c3d6b7d-c125-459f-a7b3-d40b39dd0ea2)
2016-02-29 21:02:07,300 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 7e58dd5e-b88f-4e7f-b016-365818aa11de)
2016-02-29 21:02:07,302 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: a93d9f8d-a182-4bad-a26f-ce67ac9fc66e)
2016-02-29 21:02:07,303 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: d5c8f8e6-6294-4d1e-a600-e1ea177f2776)
2016-02-29 21:02:07,304 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 8ca9cfbb-8b8a-45b7-9f93-5d6fb7fa2e49)
2016-02-29 21:02:07,305 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 7d7a391a-db40-41c4-ae01-77893c7a7afe)
2016-02-29 21:02:07,306 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 95f67a96-2eb8-428e-903d-fb12fbc53a5b)
2016-02-29 21:02:07,307 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 9a27c582-54f8-439f-a320-632c0bd41e06)
2016-02-29 21:02:07,308 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 33e7fc0b-171e-4f97-8df0-ce3a266e2d12)
2016-02-29 21:02:07,309 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: a2329dcc-025f-4135-9902-7b3403d30fa6)
2016-02-29 21:02:07,310 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 5822e9c6-bd0a-4559-bb91-afdce1e6a5f7)
2016-02-29 21:02:07,311 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 29180680-cb29-45d2-b831-068437be9f00)
2016-02-29 21:02:07,312 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 8216b8f0-7d8a-45ca-bf33-874389fe2847)
2016-02-29 21:02:07,339 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Product, id: 0cf18c66-9ec0-496a-9665-ef9a23778c81)
2016-02-29 21:02:07,339 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 12e9ecfe-e333-40ac-bf39-e90b504de9d5)
2016-02-29 21:02:07,339 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 19b54683-c8c7-4d5b-b836-bd0f2f9d9d28)
2016-02-29 21:02:07,339 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 63635cc1-aaab-435f-9db9-3eb054b330ad)
2016-02-29 21:02:07,339 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 7775302e-defe-478d-900f-314f70d32dce)
2016-02-29 21:02:07,340 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 812beee8-d1da-4056-9f95-7a96d0104116)
2016-02-29 21:02:07,340 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 8c6b4d97-42fa-4212-82dc-8b36ac63e1f0)
2016-02-29 21:02:07,340 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: a913f967-a579-4dd1-8e92-107662dabb66)
2016-02-29 21:02:07,340 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: a9a4b380-dda6-4aff-94d3-ce3b74c34060)
2016-02-29 21:02:07,340 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: c1ce2121-87b0-4d13-a2c9-29ad7a8f6bd2)
2016-02-29 21:02:07,340 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: c648d40a-70c7-414b-abf2-23e9c9eebeb3)
2016-02-29 21:02:07,340 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: d4d07940-f720-412f-9c66-7c0b29a0e37f)
2016-02-29 21:02:07,340 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: d6c530eb-31c8-466e-b38c-48a6e2e28f78)
2016-02-29 21:02:07,365 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Product, id: ef624765-3740-4943-9bff-bbe02da9252d)
2016-02-29 21:02:07,365 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 3c9e4df9-b4af-4d76-ac29-61ef052ce7b1)
2016-02-29 21:02:07,365 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 4fdd539d-9996-4870-86c6-a3d5b109ab9f)
2016-02-29 21:02:07,365 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: dd1d999b-cce2-4069-ac81-71d86a79677a)
2016-02-29 21:02:07,381 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Product, id: 41fec9d2-dc9a-400e-bc3f-eda8d567bbf3)
2016-02-29 21:02:07,381 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 5eb841ba-8fb1-4415-bb5a-e6b596bf5eee)
2016-02-29 21:02:07,381 [10328] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 637ab678-3575-4993-9271-2773dc4ae78b)
2016-02-29 21:06:44,622 [12100] DEBUG ReadOnlyServer-50179053 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:06:44,632 [12100] DEBUG ReadOnlyServer-50179053 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:06:44,632 [12100] DEBUG ReadOnlyServer-50179053 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:06:44,632 [12100] DEBUG ReadOnlyServer-50179053 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:06:44,632 [12100] DEBUG ReadOnlyServer-50179053 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:06:44,697 [12100] DEBUG WriteOnlyServer-55114041 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:06:44,697 [12100] DEBUG WriteOnlyServer-55114041 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:06:44,697 [12100] DEBUG WriteOnlyServer-55114041 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:06:44,717 [12100] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:06:44,719 [12100] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:06:44,766 [13336] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:06:44,772 [16816] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:06:44,837 [16436] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:06:44,856 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:06:44,863 [12248] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:06:44,863 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:06:44,866 [6976] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:06:44,867 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:06:44,869 [13140] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:06:44,870 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:06:44,872 [16436] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:06:44,873 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:06:44,876 [12248] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:06:44,878 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:06:44,880 [6976] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:06:44,881 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:06:44,883 [13140] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:06:44,884 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:06:44,897 [16436] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6876)
2016-02-29 21:06:44,899 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:06:44,903 [5908] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:06:44,936 [12100] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:06:44,937 [12100] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:06:44,951 [12100] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:06:44,951 [12100] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:06:44,954 [5908] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:06:44,954 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:06:44,956 [12248] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:06:44,958 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:06:44,960 [16436] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:06:44,961 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:06:44,961 [6976] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:06:44,962 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:06:44,963 [13140] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:06:44,963 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:06:44,964 [12248] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:06:44,964 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:06:44,964 [16436] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:06:44,966 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:06:44,966 [6976] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:06:44,967 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:06:44,968 [13140] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:06:44,968 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:06:44,969 [12248] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6876)
2016-02-29 21:06:44,975 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:06:44,976 [5908] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:06:44,997 [12100] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:06:45,004 [16436] DEBUG WriteOnlyServer-55114041 - insert into Maker (ID, Name) values ('4111bac8-18e7-4e9b-aef2-d1ebd7367797', 'soime');
2016-02-29 21:06:45,022 [16436] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 184)
2016-02-29 21:06:45,107 [3588] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:06:45,110 [3588] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 4111bac8-18e7-4e9b-aef2-d1ebd7367797)
2016-02-29 21:06:45,136 [12100] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:06:45,136 [12100] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:06:45,137 [12100] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:06:45,137 [12100] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:06:45,148 [5908] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:06:45,149 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:06:45,149 [12248] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:06:45,151 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:06:45,152 [6976] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:06:45,153 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:06:45,153 [13140] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1214)
2016-02-29 21:06:45,154 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:06:45,155 [16436] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:06:45,155 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:06:45,156 [12248] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:06:45,156 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:06:45,157 [6976] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:06:45,157 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:06:45,158 [13140] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:06:45,159 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:06:45,160 [16436] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:06:45,161 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:06:45,162 [12248] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6876)
2016-02-29 21:06:45,163 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:06:45,164 [16816] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:06:45,166 [12100] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 21:06:45,167 [6976] DEBUG WriteOnlyServer-55114041 - delete from Maker where ID = '3a976318-735b-40a8-b74c-f3f48bceda86';
2016-02-29 21:06:45,175 [6976] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 21:06:45,175 [6976] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 21:06:45,175 [6976] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = '3a976318-735b-40a8-b74c-f3f48bceda86';
2016-02-29 21:06:45,178 [6976] DEBUG WriteOnlyServer-55114041 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 21:06:45,178 [5908] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: DELT, TYPE: Maker)
2016-02-29 21:06:45,181 [5908] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 3a976318-735b-40a8-b74c-f3f48bceda86)
2016-02-29 21:06:45,183 [5908] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:06:45,183 [5908] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:06:45,186 [13140] DEBUG WriteOnlyServer-55114041 - update InventoryFormat set MakerID = '' where ID = 'b33aec4d-20d3-4942-9d01-3eaf4977982f';
2016-02-29 21:06:45,187 [13140] DEBUG WriteOnlyServer-55114041 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 349)
2016-02-29 21:06:45,188 [13140] DEBUG WriteOnlyServer-55114041 - update InventoryFormat set MakerID = '' where ID = 'de34d05b-f7cc-4022-affd-b853877026f1';
2016-02-29 21:06:45,189 [13140] DEBUG WriteOnlyServer-55114041 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 348)
2016-02-29 21:06:45,283 [12100] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:06:45,283 [12100] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:06:45,285 [12100] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:06:45,285 [12100] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:06:45,287 [3588] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:06:45,287 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:06:45,288 [12248] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:06:45,291 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:06:45,292 [6976] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:06:45,293 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:06:45,294 [12248] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1154)
2016-02-29 21:06:45,295 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:06:45,296 [16436] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:06:45,296 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:06:45,297 [13140] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:06:45,297 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:06:45,298 [6976] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:06:45,303 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:06:45,305 [12248] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:06:45,308 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:06:45,308 [16436] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:06:45,315 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:06:45,316 [13140] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6804)
2016-02-29 21:06:45,317 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:06:45,317 [5908] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:06:45,469 [12100] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 21:06:45,469 [12248] DEBUG WriteOnlyServer-55114041 - insert into Product (ID, Name) values ('844659de-3cfb-4f55-b8cd-1726fc534489', '새로운 제품');
2016-02-29 21:06:45,472 [12248] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 197)
2016-02-29 21:06:45,472 [5908] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Product)
2016-02-29 21:06:45,472 [5908] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Product, ID: 844659de-3cfb-4f55-b8cd-1726fc534489)
2016-02-29 21:06:45,575 [12100] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:06:45,575 [12100] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:06:45,580 [12100] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:06:45,580 [12100] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:06:45,583 [16816] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:06:45,584 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:06:45,585 [16436] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:06:45,587 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:06:45,588 [13140] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:06:45,590 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:06:45,590 [6976] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1154)
2016-02-29 21:06:45,591 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:06:45,592 [12248] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:06:45,592 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:06:45,593 [16436] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:06:45,594 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:06:45,595 [13140] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:06:45,595 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:06:45,596 [6976] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:06:45,597 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:06:45,597 [12248] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:06:45,598 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:06:45,599 [16436] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6804)
2016-02-29 21:06:45,600 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:06:45,600 [3588] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:06:45,603 [12100] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:06:45,603 [13140] DEBUG WriteOnlyServer-55114041 - insert into Maker (ID, Name) values ('49d469a7-d173-4eb9-bd58-d721695dbcaf', 'some maker');
2016-02-29 21:06:45,603 [12100] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Measure)
2016-02-29 21:06:45,604 [12100] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:InventoryFormat)
2016-02-29 21:06:45,615 [13140] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 189)
2016-02-29 21:06:45,615 [3588] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:06:45,615 [13140] DEBUG WriteOnlyServer-55114041 - insert into Measure (ID, Name) values ('80639a49-e70d-433c-a62e-f83e588da5da', 'some measure');
2016-02-29 21:06:45,615 [3588] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 49d469a7-d173-4eb9-bd58-d721695dbcaf)
2016-02-29 21:06:45,619 [13140] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Measure, SIZE: 193)
2016-02-29 21:06:45,620 [3588] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Measure)
2016-02-29 21:06:45,620 [13140] DEBUG WriteOnlyServer-55114041 - insert into InventoryFormat (ID, Specification, Quantity, Memo, ProductID, MakerID, MeasureID) values ('109290a5-d74e-429d-9df2-42153a533e82', 'some specification', '0', 'spec', '25165bd5-508d-4128-9cbf-2f5ebb689c94', '49d469a7-d173-4eb9-bd58-d721695dbcaf', '80639a49-e70d-433c-a62e-f83e588da5da');
2016-02-29 21:06:45,620 [3588] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: 80639a49-e70d-433c-a62e-f83e588da5da)
2016-02-29 21:06:45,621 [13140] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 394)
2016-02-29 21:06:45,621 [3588] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: InventoryFormat)
2016-02-29 21:06:45,621 [3588] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 109290a5-d74e-429d-9df2-42153a533e82)
2016-02-29 21:06:45,724 [12100] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:06:45,724 [12100] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:06:45,726 [12100] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:06:45,726 [12100] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:06:45,729 [16816] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:06:45,729 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:06:45,730 [16436] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:06:45,732 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:06:45,733 [6976] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:06:45,733 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:06:45,734 [13140] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1220)
2016-02-29 21:06:45,734 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:06:45,734 [12248] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:06:45,736 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:06:45,736 [16436] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:06:45,737 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:06:45,738 [6976] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:06:45,738 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:06:45,739 [13140] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:06:45,739 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:06:45,740 [12248] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:06:45,741 [5908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:06:45,743 [16436] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 7065)
2016-02-29 21:06:45,745 [16816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:06:45,745 [16816] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:06:45,769 [12100] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:06:45,872 [13140] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:06:45,873 [16436] DEBUG WriteOnlyServer-55114041 - insert into Supplier (ID, Name) values ('d69ccd85-22b9-4024-810d-0a2c4e073721', 'new');
2016-02-29 21:06:45,873 [13140] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:06:45,873 [13140] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:06:45,874 [13140] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:06:45,875 [16436] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:06:45,876 [16816] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:06:45,876 [16436] DEBUG WriteOnlyServer-55114041 - insert into Warehouse (ID, Name) values ('eeee7145-c63f-4e62-9770-d70e60a1ff48', 'new');
2016-02-29 21:06:45,876 [16816] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: d69ccd85-22b9-4024-810d-0a2c4e073721)
2016-02-29 21:06:45,879 [16436] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:06:45,879 [16816] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Warehouse)
2016-02-29 21:06:45,879 [16436] DEBUG WriteOnlyServer-55114041 - insert into Employee (ID, Name) values ('9cad6fb3-1cc1-4adf-b969-aeac9f1f5e7f', 'new');
2016-02-29 21:06:45,879 [16816] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Warehouse, ID: eeee7145-c63f-4e62-9770-d70e60a1ff48)
2016-02-29 21:06:45,892 [16436] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:06:45,892 [16816] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Employee)
2016-02-29 21:06:45,892 [16816] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: 9cad6fb3-1cc1-4adf-b969-aeac9f1f5e7f)
2016-02-29 21:06:45,899 [16436] DEBUG WriteOnlyServer-55114041 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('e2b6b888-e8e8-49f3-a178-d40e2f0d6897', '1', '2016-02-29 21:06:45.749', '0', '1', '', '109290a5-d74e-429d-9df2-42153a533e82', '', '', '', '', '');
2016-02-29 21:06:45,909 [16436] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 417)
2016-02-29 21:06:45,910 [16816] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: IOStockFormat)
2016-02-29 21:06:45,910 [16816] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: e2b6b888-e8e8-49f3-a178-d40e2f0d6897)
2016-02-29 21:06:45,915 [16436] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = 'e2b6b888-e8e8-49f3-a178-d40e2f0d6897'
2016-02-29 21:06:46,005 [12100] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:06:46,005 [12100] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:07:00,885 [3924] DEBUG ReadOnlyServer-50179053 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:07:00,894 [3924] DEBUG ReadOnlyServer-50179053 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:07:00,894 [3924] DEBUG ReadOnlyServer-50179053 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:07:00,894 [3924] DEBUG ReadOnlyServer-50179053 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:07:00,894 [3924] DEBUG ReadOnlyServer-50179053 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:07:00,955 [3924] DEBUG WriteOnlyServer-55114041 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:07:00,955 [3924] DEBUG WriteOnlyServer-55114041 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:07:00,955 [3924] DEBUG WriteOnlyServer-55114041 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:07:00,974 [3924] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:07:00,976 [3924] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:07:01,021 [8672] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:07:01,026 [8448] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:07:01,082 [7460] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:07:01,099 [8448] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:07:01,106 [4776] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:07:01,106 [8120] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:07:01,108 [7460] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:07:01,109 [8672] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:07:01,112 [4240] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:07:01,113 [8672] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:07:01,116 [5208] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:07:01,116 [8672] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:07:01,118 [4776] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:07:01,119 [8072] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:07:01,121 [7460] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:07:01,122 [8672] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:07:01,124 [4240] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:07:01,124 [8672] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:07:01,134 [5208] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6873)
2016-02-29 21:07:01,136 [8672] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:07:01,140 [8672] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:07:01,155 [3924] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:07:01,162 [4776] DEBUG WriteOnlyServer-55114041 - insert into Maker (ID, Name) values ('f0d0e457-5545-4998-b875-1ab7c4746e5b', 'soime');
2016-02-29 21:07:01,166 [4776] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 184)
2016-02-29 21:07:01,247 [8072] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:07:01,248 [8072] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: f0d0e457-5545-4998-b875-1ab7c4746e5b)
2016-02-29 21:07:01,279 [3924] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:07:01,279 [3924] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:07:14,088 [15744] DEBUG ReadOnlyServer-50179053 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:07:14,097 [15744] DEBUG ReadOnlyServer-50179053 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:07:14,097 [15744] DEBUG ReadOnlyServer-50179053 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:07:14,098 [15744] DEBUG ReadOnlyServer-50179053 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:07:14,098 [15744] DEBUG ReadOnlyServer-50179053 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:07:14,161 [15744] DEBUG WriteOnlyServer-55114041 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:07:14,161 [15744] DEBUG WriteOnlyServer-55114041 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:07:14,161 [15744] DEBUG WriteOnlyServer-55114041 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:07:14,180 [15744] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:07:14,181 [15744] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:07:14,228 [13956] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:07:14,233 [12216] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:07:14,294 [11008] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:07:14,314 [12216] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:07:14,320 [10060] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:07:14,321 [10524] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:07:14,323 [14684] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:07:14,324 [12216] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:07:14,327 [7024] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:07:14,328 [10524] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:07:14,330 [11008] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:07:14,331 [12216] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:07:14,333 [10060] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:07:14,333 [10524] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:07:14,336 [14684] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:07:14,336 [12216] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:07:14,338 [7024] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:07:14,339 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:07:14,350 [11008] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6875)
2016-02-29 21:07:14,352 [10524] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:07:14,356 [10524] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:07:14,387 [15744] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:07:14,388 [15744] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:07:14,402 [15744] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:07:14,403 [15744] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:07:14,404 [10524] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:07:14,405 [10524] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:07:14,406 [14684] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:07:14,407 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:07:14,408 [11008] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:07:14,409 [12216] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:07:14,410 [7024] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:07:14,411 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:07:14,412 [10060] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:07:14,413 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:07:14,414 [14684] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:07:14,414 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:07:14,415 [11008] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:07:14,416 [12216] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:07:14,417 [7024] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:07:14,417 [10524] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:07:14,418 [10060] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:07:14,419 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:07:14,420 [14684] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6875)
2016-02-29 21:07:14,421 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:07:14,421 [7612] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:07:14,436 [15744] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:07:14,448 [11008] DEBUG WriteOnlyServer-55114041 - insert into Maker (ID, Name) values ('e58cfc99-bae3-4a32-993f-17e79cd03162', 'soime');
2016-02-29 21:07:14,458 [11008] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 184)
2016-02-29 21:07:14,547 [12216] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:07:14,549 [12216] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: e58cfc99-bae3-4a32-993f-17e79cd03162)
2016-02-29 21:07:14,646 [15744] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:07:14,646 [15744] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:07:14,647 [15744] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:07:14,647 [15744] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:07:14,659 [12216] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:07:14,659 [12216] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:07:14,660 [14684] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:07:14,661 [10524] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:07:14,662 [7024] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:07:14,663 [10524] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:07:14,664 [11008] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1214)
2016-02-29 21:07:14,664 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:07:14,665 [10060] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:07:14,665 [10524] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:07:14,666 [14684] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:07:14,666 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:07:14,667 [7024] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:07:14,668 [10524] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:07:14,668 [11008] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:07:14,669 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:07:14,669 [10060] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:07:14,670 [12216] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:07:14,671 [14684] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6875)
2016-02-29 21:07:14,672 [10524] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:07:14,672 [10524] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:07:14,674 [15744] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 21:07:14,675 [7024] DEBUG WriteOnlyServer-55114041 - delete from Maker where ID = 'bf2fffa2-f866-4794-9b75-ad069c6715ec';
2016-02-29 21:07:14,684 [7024] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 21:07:14,684 [7024] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 21:07:14,685 [7024] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = 'bf2fffa2-f866-4794-9b75-ad069c6715ec';
2016-02-29 21:07:14,688 [7024] DEBUG WriteOnlyServer-55114041 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 21:07:14,688 [12216] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: DELT, TYPE: Maker)
2016-02-29 21:07:14,691 [12216] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: bf2fffa2-f866-4794-9b75-ad069c6715ec)
2016-02-29 21:07:14,692 [12216] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:07:14,692 [12216] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:07:14,692 [12216] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:07:14,693 [12216] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:07:14,694 [11008] DEBUG WriteOnlyServer-55114041 - update InventoryFormat set MakerID = '' where ID = '3befc34e-a758-454f-a88a-e32c17e8c942';
2016-02-29 21:07:14,697 [11008] DEBUG WriteOnlyServer-55114041 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 345)
2016-02-29 21:07:14,698 [11008] DEBUG WriteOnlyServer-55114041 - update InventoryFormat set MakerID = '' where ID = '68848cc6-6155-469a-978e-2dabb258ecfa';
2016-02-29 21:07:14,700 [11008] DEBUG WriteOnlyServer-55114041 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 352)
2016-02-29 21:07:14,701 [11008] DEBUG WriteOnlyServer-55114041 - update InventoryFormat set MakerID = '' where ID = '91e00a04-943e-4597-9bb2-9f784d67786d';
2016-02-29 21:07:14,703 [11008] DEBUG WriteOnlyServer-55114041 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 348)
2016-02-29 21:07:14,703 [11008] DEBUG WriteOnlyServer-55114041 - update InventoryFormat set MakerID = '' where ID = 'bdba12da-665c-41f9-9f40-d88b722df783';
2016-02-29 21:07:14,705 [11008] DEBUG WriteOnlyServer-55114041 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 351)
2016-02-29 21:07:14,780 [15744] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:07:14,780 [15744] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:07:14,784 [15744] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:07:14,789 [15744] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:07:14,792 [12216] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:07:14,792 [12216] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:07:14,793 [10060] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:07:14,794 [10524] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:07:14,796 [11008] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:07:14,796 [12216] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:07:14,797 [7024] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1152)
2016-02-29 21:07:14,798 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:07:14,798 [14684] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:07:14,799 [10524] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:07:14,799 [10060] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:07:14,800 [10524] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:07:14,800 [11008] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:07:14,801 [10524] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:07:14,802 [7024] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:07:14,802 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:07:14,803 [14684] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:07:14,803 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:07:14,804 [10060] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6731)
2016-02-29 21:07:14,805 [12216] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:07:14,806 [12216] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:07:14,974 [15744] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 21:07:14,975 [11008] DEBUG WriteOnlyServer-55114041 - insert into Product (ID, Name) values ('bb9d169c-80c0-4f12-8d14-8e793b65340c', '새로운 제품');
2016-02-29 21:07:14,984 [11008] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 197)
2016-02-29 21:07:14,984 [12216] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Product)
2016-02-29 21:07:14,984 [12216] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Product, ID: bb9d169c-80c0-4f12-8d14-8e793b65340c)
2016-02-29 21:07:15,082 [15744] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:07:15,082 [15744] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:07:15,086 [15744] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:07:15,086 [15744] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:07:15,089 [12216] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:07:15,089 [12216] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:07:15,090 [10060] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:07:15,093 [12216] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:07:15,094 [11008] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:07:15,095 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:07:15,096 [14684] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1152)
2016-02-29 21:07:15,097 [10524] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:07:15,098 [7024] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:07:15,098 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:07:15,099 [10060] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:07:15,100 [10524] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:07:15,100 [11008] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:07:15,101 [12216] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:07:15,102 [14684] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:07:15,102 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:07:15,103 [7024] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:07:15,104 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:07:15,109 [10060] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6731)
2016-02-29 21:07:15,111 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:07:15,112 [7612] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:07:15,114 [15744] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:07:15,115 [11008] DEBUG WriteOnlyServer-55114041 - insert into Maker (ID, Name) values ('656ec63c-9aca-46b4-8153-7410eb46049a', 'some maker');
2016-02-29 21:07:15,115 [15744] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Measure)
2016-02-29 21:07:15,116 [15744] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:InventoryFormat)
2016-02-29 21:07:15,123 [11008] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 189)
2016-02-29 21:07:15,123 [7612] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:07:15,123 [7612] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 656ec63c-9aca-46b4-8153-7410eb46049a)
2016-02-29 21:07:15,123 [11008] DEBUG WriteOnlyServer-55114041 - insert into Measure (ID, Name) values ('c1c36505-91f2-4987-9b19-762ecde0fabd', 'some measure');
2016-02-29 21:07:15,131 [11008] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Measure, SIZE: 193)
2016-02-29 21:07:15,131 [7612] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Measure)
2016-02-29 21:07:15,131 [11008] DEBUG WriteOnlyServer-55114041 - insert into InventoryFormat (ID, Specification, Quantity, Memo, ProductID, MakerID, MeasureID) values ('53c40f76-0742-4df9-a9ba-84c91ba61846', 'some specification', '0', 'spec', 'e725a3a4-9529-4ef4-aab6-b9af3d22cf72', '656ec63c-9aca-46b4-8153-7410eb46049a', 'c1c36505-91f2-4987-9b19-762ecde0fabd');
2016-02-29 21:07:15,131 [7612] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: c1c36505-91f2-4987-9b19-762ecde0fabd)
2016-02-29 21:07:15,133 [11008] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 394)
2016-02-29 21:07:15,134 [7612] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: InventoryFormat)
2016-02-29 21:07:15,134 [7612] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 53c40f76-0742-4df9-a9ba-84c91ba61846)
2016-02-29 21:07:15,220 [15744] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:07:15,220 [15744] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:07:15,221 [15744] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:07:15,221 [15744] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:07:15,224 [7612] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:07:15,224 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:07:15,224 [7024] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:07:15,227 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:07:15,228 [10060] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:07:15,229 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:07:15,230 [11008] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1218)
2016-02-29 21:07:15,231 [12216] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:07:15,231 [14684] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:07:15,232 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:07:15,233 [7024] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:07:15,233 [12216] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:07:15,234 [10060] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:07:15,234 [12216] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:07:15,234 [11008] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:07:15,236 [7612] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:07:15,236 [14684] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:07:15,237 [10524] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:07:15,238 [7024] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6992)
2016-02-29 21:07:15,239 [10524] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:07:15,240 [10524] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:07:15,265 [15744] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:07:15,369 [11008] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:07:15,370 [7024] DEBUG WriteOnlyServer-55114041 - insert into Supplier (ID, Name) values ('e3bc99f9-6904-430d-b651-2cc1a87749fe', 'new');
2016-02-29 21:07:15,370 [11008] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:07:15,370 [11008] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:07:15,371 [11008] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:07:15,378 [7024] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:07:15,379 [7612] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:07:15,379 [7612] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: e3bc99f9-6904-430d-b651-2cc1a87749fe)
2016-02-29 21:07:15,379 [7024] DEBUG WriteOnlyServer-55114041 - insert into Warehouse (ID, Name) values ('a72056b8-0a35-4c65-a93f-032ad6384014', 'new');
2016-02-29 21:07:15,382 [7024] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:07:15,382 [7612] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Warehouse)
2016-02-29 21:07:15,382 [7024] DEBUG WriteOnlyServer-55114041 - insert into Employee (ID, Name) values ('253d53c2-c03c-4d83-a24c-9d6454a58b50', 'new');
2016-02-29 21:07:15,382 [7612] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Warehouse, ID: a72056b8-0a35-4c65-a93f-032ad6384014)
2016-02-29 21:07:15,390 [7024] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:07:15,390 [7612] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Employee)
2016-02-29 21:07:15,390 [7612] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: 253d53c2-c03c-4d83-a24c-9d6454a58b50)
2016-02-29 21:07:15,397 [7024] DEBUG WriteOnlyServer-55114041 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('c7fa9f61-1667-4d19-992f-86bb74b1047a', '1', '2016-02-29 21:07:15.243', '0', '1', '', 'dfb80cfd-a932-47b3-b016-baa92f4952c8', '', '', '', '', '');
2016-02-29 21:07:15,400 [7024] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 418)
2016-02-29 21:07:15,401 [7612] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: IOStockFormat)
2016-02-29 21:07:15,401 [7612] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: c7fa9f61-1667-4d19-992f-86bb74b1047a)
2016-02-29 21:07:15,405 [7024] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = 'c7fa9f61-1667-4d19-992f-86bb74b1047a'
2016-02-29 21:07:15,523 [15744] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:07:15,524 [15744] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:10:09,399 [16888] DEBUG ReadOnlyServer-50179053 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:10:09,410 [16888] DEBUG ReadOnlyServer-50179053 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:10:09,410 [16888] DEBUG ReadOnlyServer-50179053 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:10:09,410 [16888] DEBUG ReadOnlyServer-50179053 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:10:09,411 [16888] DEBUG ReadOnlyServer-50179053 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:10:09,476 [16888] DEBUG WriteOnlyServer-55114041 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:10:09,476 [16888] DEBUG WriteOnlyServer-55114041 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:10:09,476 [16888] DEBUG WriteOnlyServer-55114041 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:10:09,497 [16888] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:10:09,499 [16888] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:10:09,567 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:10:09,571 [11140] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:10:09,656 [14672] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:10:09,676 [13804] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:10:09,682 [14672] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:10:09,683 [13636] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:10:09,686 [12760] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:10:09,687 [4644] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:10:09,690 [14672] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:10:09,690 [13636] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:10:09,692 [12760] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:10:09,693 [13636] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:10:09,695 [14672] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:10:09,696 [13636] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:10:09,699 [12760] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:10:09,700 [13804] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:10:09,703 [14672] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:10:09,703 [13804] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:10:09,715 [12760] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6876)
2016-02-29 21:10:09,717 [13636] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:10:09,721 [13636] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:10:09,795 [16888] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:10:09,907 [12760] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:10:09,911 [12760] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:10:09,912 [12760] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:10:09,913 [12760] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:10:09,915 [14672] DEBUG WriteOnlyServer-55114041 - insert into Supplier (ID, Name) values ('50ad0cb5-789e-4601-8d69-d44435543fc9', 'new');
2016-02-29 21:10:09,923 [14672] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:10:09,929 [14672] DEBUG WriteOnlyServer-55114041 - insert into Warehouse (ID, Name) values ('27e9c333-04dd-487e-8c46-d661f79c66df', 'new');
2016-02-29 21:10:09,932 [14672] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:10:09,932 [14672] DEBUG WriteOnlyServer-55114041 - insert into Employee (ID, Name) values ('995fb3f8-1797-4e05-b798-f6fce564b234', 'new');
2016-02-29 21:10:09,935 [14672] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:10:09,944 [14672] DEBUG WriteOnlyServer-55114041 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('955a5381-b710-412c-a738-57290ee1c164', '1', '2016-02-29 21:10:09.768', '0', '1', '', '9c1e2fc2-a131-4dac-b22c-35ef5e60aa78', '', '50ad0cb5-789e-4601-8d69-d44435543fc9', '', '27e9c333-04dd-487e-8c46-d661f79c66df', '995fb3f8-1797-4e05-b798-f6fce564b234');
2016-02-29 21:10:09,948 [14672] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 519)
2016-02-29 21:10:09,956 [14672] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '955a5381-b710-412c-a738-57290ee1c164'
2016-02-29 21:10:09,989 [13804] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:10:09,991 [13804] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: 50ad0cb5-789e-4601-8d69-d44435543fc9)
2016-02-29 21:10:09,991 [13636] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Warehouse)
2016-02-29 21:10:09,991 [13636] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Warehouse, ID: 27e9c333-04dd-487e-8c46-d661f79c66df)
2016-02-29 21:10:09,991 [13636] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Employee)
2016-02-29 21:10:09,991 [13636] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: 995fb3f8-1797-4e05-b798-f6fce564b234)
2016-02-29 21:10:09,991 [13636] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: IOStockFormat)
2016-02-29 21:10:09,992 [13636] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 955a5381-b710-412c-a738-57290ee1c164)
2016-02-29 21:10:10,082 [16888] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:10:10,083 [16888] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:10:27,899 [13372] DEBUG ReadOnlyServer-50179053 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:10:27,908 [13372] DEBUG ReadOnlyServer-50179053 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:10:27,908 [13372] DEBUG ReadOnlyServer-50179053 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:10:27,908 [13372] DEBUG ReadOnlyServer-50179053 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:10:27,908 [13372] DEBUG ReadOnlyServer-50179053 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:10:27,968 [13372] DEBUG WriteOnlyServer-55114041 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:10:27,968 [13372] DEBUG WriteOnlyServer-55114041 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:10:27,968 [13372] DEBUG WriteOnlyServer-55114041 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:10:27,987 [13372] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:10:27,988 [13372] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:10:28,032 [16416] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:10:28,037 [4304] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:10:28,103 [16844] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:10:28,122 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:10:28,128 [516] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:10:28,129 [8204] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:10:28,131 [16844] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:10:28,132 [8204] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:10:28,134 [13916] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:10:28,134 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:10:28,137 [16364] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:10:28,138 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:10:28,140 [516] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:10:28,141 [8204] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:10:28,143 [16844] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:10:28,143 [8204] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:10:28,145 [13916] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:10:28,146 [8204] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:10:28,156 [16364] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6871)
2016-02-29 21:10:28,158 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:10:28,163 [4304] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:10:28,193 [13372] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:10:28,193 [13372] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:10:28,207 [13372] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:10:28,207 [13372] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:10:28,209 [4304] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:10:28,210 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:10:28,210 [16844] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:10:28,213 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:10:28,213 [16364] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:10:28,214 [8204] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:10:28,215 [13916] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:10:28,216 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:10:28,217 [516] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:10:28,217 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:10:28,218 [16844] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:10:28,219 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:10:28,220 [16364] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:10:28,220 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:10:28,221 [13916] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:10:28,222 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:10:28,222 [516] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:10:28,223 [8204] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:10:28,224 [16844] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6871)
2016-02-29 21:10:28,225 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:10:28,226 [4304] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:10:28,241 [13372] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:10:28,249 [16364] DEBUG WriteOnlyServer-55114041 - insert into Maker (ID, Name) values ('b3da2785-a6e1-4fd1-9964-fca380854e6e', 'soime');
2016-02-29 21:10:28,270 [16364] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 184)
2016-02-29 21:10:28,363 [8204] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:10:28,364 [8204] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: b3da2785-a6e1-4fd1-9964-fca380854e6e)
2016-02-29 21:10:28,456 [13372] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:10:28,456 [13372] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:10:28,457 [13372] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:10:28,457 [13372] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:10:28,469 [8204] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:10:28,469 [8204] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:10:28,470 [13916] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:10:28,472 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:10:28,473 [516] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:10:28,473 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:10:28,473 [16364] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1214)
2016-02-29 21:10:28,475 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:10:28,475 [16844] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:10:28,476 [8204] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:10:28,476 [13916] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:10:28,477 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:10:28,478 [516] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:10:28,478 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:10:28,479 [16364] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:10:28,479 [8204] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:10:28,480 [16844] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:10:28,480 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:10:28,482 [13916] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6871)
2016-02-29 21:10:28,483 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:10:28,483 [4304] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:10:28,486 [13372] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 21:10:28,487 [516] DEBUG WriteOnlyServer-55114041 - delete from Maker where ID = '0bafaf1f-54f6-43aa-86a5-4e2e307263ee';
2016-02-29 21:10:28,495 [516] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 21:10:28,495 [516] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 21:10:28,495 [516] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = '0bafaf1f-54f6-43aa-86a5-4e2e307263ee';
2016-02-29 21:10:28,498 [516] DEBUG WriteOnlyServer-55114041 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 21:10:28,499 [4304] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: DELT, TYPE: Maker)
2016-02-29 21:10:28,501 [4304] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 0bafaf1f-54f6-43aa-86a5-4e2e307263ee)
2016-02-29 21:10:28,503 [4304] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:10:28,503 [4304] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:10:28,506 [16364] DEBUG WriteOnlyServer-55114041 - update InventoryFormat set MakerID = '' where ID = '8770abc2-e495-4a1e-a7c5-c9e4137e56a2';
2016-02-29 21:10:28,508 [16364] DEBUG WriteOnlyServer-55114041 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 349)
2016-02-29 21:10:28,509 [16364] DEBUG WriteOnlyServer-55114041 - update InventoryFormat set MakerID = '' where ID = 'c94428b7-9575-41f2-91dc-5d358223519a';
2016-02-29 21:10:28,510 [16364] DEBUG WriteOnlyServer-55114041 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 346)
2016-02-29 21:10:28,590 [13372] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:10:28,590 [13372] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:10:28,593 [13372] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:10:28,598 [13372] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:10:28,603 [952] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:10:28,603 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:10:28,603 [516] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:10:28,606 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:10:28,607 [16844] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:10:28,607 [8204] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:10:28,608 [13916] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1152)
2016-02-29 21:10:28,609 [8204] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:10:28,609 [16364] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:10:28,610 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:10:28,611 [516] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:10:28,611 [8204] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:10:28,612 [16844] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:10:28,612 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:10:28,613 [13916] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:10:28,613 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:10:28,614 [16364] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:10:28,615 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:10:28,616 [516] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6799)
2016-02-29 21:10:28,617 [8204] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:10:28,617 [8204] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:10:28,761 [13372] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 21:10:28,762 [16844] DEBUG WriteOnlyServer-55114041 - insert into Product (ID, Name) values ('51d139d2-70b6-4fae-8571-a82385cfddc3', '새로운 제품');
2016-02-29 21:10:28,770 [16844] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 197)
2016-02-29 21:10:28,771 [8204] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Product)
2016-02-29 21:10:28,771 [8204] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Product, ID: 51d139d2-70b6-4fae-8571-a82385cfddc3)
2016-02-29 21:10:28,874 [13372] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:10:28,874 [13372] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:10:28,877 [13372] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:10:28,877 [13372] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:10:28,880 [952] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:10:28,880 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:10:28,881 [13916] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:10:28,883 [8204] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:10:28,883 [16364] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:10:28,884 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:10:28,885 [516] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1152)
2016-02-29 21:10:28,886 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:10:28,887 [16844] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:10:28,888 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:10:28,889 [13916] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:10:28,889 [8204] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:10:28,890 [16364] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:10:28,891 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:10:28,891 [516] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:10:28,892 [8204] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:10:28,893 [16844] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:10:28,893 [8204] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:10:28,894 [13916] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6799)
2016-02-29 21:10:28,895 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:10:28,896 [4304] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:10:28,898 [13372] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:10:28,899 [16364] DEBUG WriteOnlyServer-55114041 - insert into Maker (ID, Name) values ('c5a09be0-eaca-4168-b3d1-b43cd3ad8d3a', 'some maker');
2016-02-29 21:10:28,899 [13372] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Measure)
2016-02-29 21:10:28,899 [13372] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:InventoryFormat)
2016-02-29 21:10:28,906 [16364] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 189)
2016-02-29 21:10:28,907 [8204] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:10:28,907 [8204] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: c5a09be0-eaca-4168-b3d1-b43cd3ad8d3a)
2016-02-29 21:10:28,907 [16364] DEBUG WriteOnlyServer-55114041 - insert into Measure (ID, Name) values ('796ae330-319a-4199-9c22-318bfce91693', 'some measure');
2016-02-29 21:10:28,912 [16364] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Measure, SIZE: 193)
2016-02-29 21:10:28,913 [8204] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Measure)
2016-02-29 21:10:28,913 [16364] DEBUG WriteOnlyServer-55114041 - insert into InventoryFormat (ID, Specification, Quantity, Memo, ProductID, MakerID, MeasureID) values ('b202ea61-c311-4df3-89ac-a86b7386ee6b', 'some specification', '0', 'spec', 'e3bf485b-a04f-4554-8a1b-e1846b299a82', 'c5a09be0-eaca-4168-b3d1-b43cd3ad8d3a', '796ae330-319a-4199-9c22-318bfce91693');
2016-02-29 21:10:28,913 [8204] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: 796ae330-319a-4199-9c22-318bfce91693)
2016-02-29 21:10:28,915 [16364] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 394)
2016-02-29 21:10:28,915 [8204] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: InventoryFormat)
2016-02-29 21:10:28,915 [8204] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: b202ea61-c311-4df3-89ac-a86b7386ee6b)
2016-02-29 21:10:29,014 [13372] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:10:29,014 [13372] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:10:29,016 [13372] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:10:29,016 [13372] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:10:29,018 [952] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:10:29,018 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:10:29,019 [16844] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:10:29,022 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:10:29,022 [16364] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:10:29,023 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:10:29,023 [516] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1218)
2016-02-29 21:10:29,024 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:10:29,025 [13916] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:10:29,026 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:10:29,026 [16844] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:10:29,027 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:10:29,027 [16364] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:10:29,028 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:10:29,029 [516] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:10:29,029 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:10:29,030 [13916] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:10:29,031 [4304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:10:29,032 [16844] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 7060)
2016-02-29 21:10:29,033 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:10:29,034 [952] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:10:29,067 [13372] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:10:29,067 [13372] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:10:45,617 [9884] DEBUG ReadOnlyServer-50179053 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:10:45,627 [9884] DEBUG ReadOnlyServer-50179053 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:10:45,627 [9884] DEBUG ReadOnlyServer-50179053 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:10:45,627 [9884] DEBUG ReadOnlyServer-50179053 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:10:45,627 [9884] DEBUG ReadOnlyServer-50179053 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:10:45,691 [9884] DEBUG WriteOnlyServer-55114041 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:10:45,691 [9884] DEBUG WriteOnlyServer-55114041 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:10:45,691 [9884] DEBUG WriteOnlyServer-55114041 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:10:45,712 [9884] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:10:45,714 [9884] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:10:45,785 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:10:45,792 [11428] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:10:45,875 [12164] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:10:45,895 [16704] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:10:45,903 [11980] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:10:45,904 [16704] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:10:45,907 [12164] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:10:45,908 [8368] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:10:45,910 [11400] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:10:45,911 [8368] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:10:45,914 [9088] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:10:45,915 [16704] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:10:45,917 [11400] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:10:45,918 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:10:45,921 [12164] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:10:45,922 [8368] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:10:45,925 [11400] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:10:45,925 [16704] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:10:45,938 [12164] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6870)
2016-02-29 21:10:45,941 [16704] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:10:45,946 [16704] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:10:46,073 [9884] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:10:46,186 [12164] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:10:46,192 [12164] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:10:46,192 [12164] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:10:46,194 [12164] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:10:46,194 [9088] DEBUG WriteOnlyServer-55114041 - insert into Supplier (ID, Name) values ('aadea04f-1a3e-4597-bab4-07dd6bcaf59b', 'new');
2016-02-29 21:10:46,197 [9088] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:10:46,201 [9088] DEBUG WriteOnlyServer-55114041 - insert into Warehouse (ID, Name) values ('0ca17c3f-66a3-4074-b66b-c56fd8c29da0', 'new');
2016-02-29 21:10:46,204 [9088] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:10:46,205 [9088] DEBUG WriteOnlyServer-55114041 - insert into Employee (ID, Name) values ('7a28342b-2ff6-4986-a402-ffe455d6e695', 'new');
2016-02-29 21:10:46,208 [9088] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:10:46,218 [9088] DEBUG WriteOnlyServer-55114041 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('00291f96-fb9b-4084-971c-4c6aa594ad05', '1', '2016-02-29 21:10:46.047', '0', '1', '', '3ab086fb-6c6b-4338-aa3a-5cb9555ed694', '', 'aadea04f-1a3e-4597-bab4-07dd6bcaf59b', '', '0ca17c3f-66a3-4074-b66b-c56fd8c29da0', '7a28342b-2ff6-4986-a402-ffe455d6e695');
2016-02-29 21:10:46,221 [9088] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:10:46,233 [9088] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '00291f96-fb9b-4084-971c-4c6aa594ad05'
2016-02-29 21:10:46,270 [14632] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:10:46,273 [14632] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: aadea04f-1a3e-4597-bab4-07dd6bcaf59b)
2016-02-29 21:10:46,274 [8368] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Warehouse)
2016-02-29 21:10:46,274 [8368] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Warehouse, ID: 0ca17c3f-66a3-4074-b66b-c56fd8c29da0)
2016-02-29 21:10:46,274 [8368] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Employee)
2016-02-29 21:10:46,274 [8368] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: 7a28342b-2ff6-4986-a402-ffe455d6e695)
2016-02-29 21:10:46,274 [8368] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: IOStockFormat)
2016-02-29 21:10:46,274 [8368] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 00291f96-fb9b-4084-971c-4c6aa594ad05)
2016-02-29 21:10:46,407 [9884] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:10:46,407 [9884] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:11:05,041 [14428] DEBUG ReadOnlyServer-50179053 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:11:05,051 [14428] DEBUG ReadOnlyServer-50179053 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:11:05,051 [14428] DEBUG ReadOnlyServer-50179053 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:11:05,051 [14428] DEBUG ReadOnlyServer-50179053 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:11:05,051 [14428] DEBUG ReadOnlyServer-50179053 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:11:05,114 [14428] DEBUG WriteOnlyServer-55114041 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:11:05,114 [14428] DEBUG WriteOnlyServer-55114041 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:11:05,114 [14428] DEBUG WriteOnlyServer-55114041 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:11:05,134 [14428] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:11:05,135 [14428] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:11:05,181 [17356] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:11:05,187 [5892] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:11:05,246 [7460] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:11:05,263 [7504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:11:05,270 [5528] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:11:05,271 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:11:05,273 [7460] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:11:05,273 [5892] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:11:05,276 [10768] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:11:05,276 [5892] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:11:05,278 [15796] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:11:05,279 [7504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:11:05,282 [5528] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:11:05,282 [7504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:11:05,284 [7460] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:11:05,285 [7504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:11:05,287 [10768] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:11:05,288 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:11:05,298 [15796] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6865)
2016-02-29 21:11:05,300 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:11:05,304 [12788] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:11:05,375 [14428] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:11:05,481 [7460] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:11:05,485 [7460] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:11:05,486 [7460] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:11:05,487 [7460] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:11:05,487 [15796] DEBUG WriteOnlyServer-55114041 - insert into Supplier (ID, Name) values ('1d9029e2-1f19-4b04-b8d2-50de8283e42b', 'new');
2016-02-29 21:11:05,498 [15796] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:11:05,507 [15796] DEBUG WriteOnlyServer-55114041 - insert into Warehouse (ID, Name) values ('80661270-de7a-4672-a6e3-2a8d1db3e45e', 'new');
2016-02-29 21:11:05,512 [15796] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:11:05,513 [15796] DEBUG WriteOnlyServer-55114041 - insert into Employee (ID, Name) values ('3946113c-bbf7-49aa-bf24-3f27c6c03234', 'new');
2016-02-29 21:11:05,520 [15796] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:11:05,532 [15796] DEBUG WriteOnlyServer-55114041 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('0faf05df-3bf5-44cd-ab35-a04b42c81570', '1', '2016-02-29 21:11:05.350', '0', '1', '', '63e09d1a-3324-488f-820c-32ae059f217b', '', '1d9029e2-1f19-4b04-b8d2-50de8283e42b', '', '80661270-de7a-4672-a6e3-2a8d1db3e45e', '3946113c-bbf7-49aa-bf24-3f27c6c03234');
2016-02-29 21:11:05,536 [15796] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:11:05,543 [15796] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '0faf05df-3bf5-44cd-ab35-a04b42c81570'
2016-02-29 21:11:05,572 [12788] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:11:05,575 [12788] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: 1d9029e2-1f19-4b04-b8d2-50de8283e42b)
2016-02-29 21:11:05,575 [5892] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Warehouse)
2016-02-29 21:11:05,575 [5892] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Warehouse, ID: 80661270-de7a-4672-a6e3-2a8d1db3e45e)
2016-02-29 21:11:05,575 [5892] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Employee)
2016-02-29 21:11:05,575 [5892] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: 3946113c-bbf7-49aa-bf24-3f27c6c03234)
2016-02-29 21:11:05,575 [5892] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: IOStockFormat)
2016-02-29 21:11:05,576 [5892] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 0faf05df-3bf5-44cd-ab35-a04b42c81570)
2016-02-29 21:11:05,795 [15796] DEBUG R54IN0.Server.WriteSessionCommandExtension - update InventoryFormat set Quantity =
                    ifnull((select sum(Quantity) from IOStockFormat where InventoryID = '63e09d1a-3324-488f-820c-32ae059f217b' and StockType = '1'), 0) -
                    ifnull((select sum(Quantity) from IOStockFormat where InventoryID = '63e09d1a-3324-488f-820c-32ae059f217b' and StockType = '2'), 0)
                    where ID = '63e09d1a-3324-488f-820c-32ae059f217b';
2016-02-29 21:11:05,807 [15796] DEBUG R54IN0.Server.WriteSessionCommandExtension - select Quantity from InventoryFormat where ID = '63e09d1a-3324-488f-820c-32ae059f217b';
2016-02-29 21:11:06,551 [14428] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:11:06,551 [14428] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:12:39,377 [7036] DEBUG ReadOnlyServer-50179053 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:12:39,387 [7036] DEBUG ReadOnlyServer-50179053 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:12:39,387 [7036] DEBUG ReadOnlyServer-50179053 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:12:39,387 [7036] DEBUG ReadOnlyServer-50179053 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:12:39,388 [7036] DEBUG ReadOnlyServer-50179053 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:12:39,452 [7036] DEBUG WriteOnlyServer-55114041 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:12:39,452 [7036] DEBUG WriteOnlyServer-55114041 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:12:39,452 [7036] DEBUG WriteOnlyServer-55114041 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:12:39,476 [7036] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was started
2016-02-29 21:12:39,478 [7036] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was started
2016-02-29 21:12:39,556 [8592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:12:39,562 [5180] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:12:39,648 [4880] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:12:39,672 [8592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:12:39,682 [11772] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:12:39,683 [15752] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:12:39,686 [4880] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:12:39,687 [8592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:12:39,690 [5908] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:12:39,691 [15752] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:12:39,693 [4880] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:12:39,694 [9560] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:12:39,696 [5908] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:12:39,697 [9560] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:12:39,699 [4880] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:12:39,700 [9560] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:12:39,702 [5908] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:12:39,703 [8592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:12:39,715 [4880] DEBUG ReadOnlyServer-50179053 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6867)
2016-02-29 21:12:39,718 [15752] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:12:39,727 [15752] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:12:39,850 [7036] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:12:39,969 [5908] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:12:39,974 [5908] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:12:39,975 [5908] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:12:39,976 [11772] DEBUG WriteOnlyServer-55114041 - insert into Supplier (ID, Name) values ('61faa472-cb24-4060-9a4c-1a059bffd36c', 'new');
2016-02-29 21:12:53,610 [11772] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:12:53,611 [5908] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:12:53,616 [11160] DEBUG WriteOnlyServer-55114041 - insert into Warehouse (ID, Name) values ('7ac21f67-7d10-4be9-ab9a-959a8613279f', 'new');
2016-02-29 21:12:53,619 [11160] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:12:53,620 [11160] DEBUG WriteOnlyServer-55114041 - insert into Employee (ID, Name) values ('650b9406-a739-4227-887c-a0dcfc90ebc7', 'new');
2016-02-29 21:12:53,622 [11160] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:12:53,634 [4880] DEBUG WriteOnlyServer-55114041 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('565757a5-108c-4ef4-8416-0c792e5414f7', '1', '2016-02-29 21:12:39.814', '0', '1', '', '21214f49-4f48-4288-9c73-05a2065e58db', '', '61faa472-cb24-4060-9a4c-1a059bffd36c', '', '7ac21f67-7d10-4be9-ab9a-959a8613279f', '650b9406-a739-4227-887c-a0dcfc90ebc7');
2016-02-29 21:12:53,638 [4880] DEBUG WriteOnlyServer-55114041 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:12:53,650 [4880] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '565757a5-108c-4ef4-8416-0c792e5414f7'
2016-02-29 21:12:53,678 [9560] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:12:53,680 [9560] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: 61faa472-cb24-4060-9a4c-1a059bffd36c)
2016-02-29 21:12:53,681 [15752] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Warehouse)
2016-02-29 21:12:53,681 [15752] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Warehouse, ID: 7ac21f67-7d10-4be9-ab9a-959a8613279f)
2016-02-29 21:12:53,681 [15752] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Employee)
2016-02-29 21:12:53,681 [15752] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: 650b9406-a739-4227-887c-a0dcfc90ebc7)
2016-02-29 21:12:53,681 [15752] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: IOStockFormat)
2016-02-29 21:12:53,681 [15752] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 565757a5-108c-4ef4-8416-0c792e5414f7)
2016-02-29 21:12:53,798 [7036] DEBUG ReadOnlyServer-50179053 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:12:53,798 [7036] DEBUG WriteOnlyServer-55114041 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:16:16,816 [17172] DEBUG ReadOnlyServer-34382671 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:16:16,825 [17172] DEBUG ReadOnlyServer-34382671 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:16:16,826 [17172] DEBUG ReadOnlyServer-34382671 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:16:16,826 [17172] DEBUG ReadOnlyServer-34382671 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:16:16,826 [17172] DEBUG ReadOnlyServer-34382671 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:16:16,889 [17172] DEBUG WriteOnlyServer-58648462 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:16:16,889 [17172] DEBUG WriteOnlyServer-58648462 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:16:16,889 [17172] DEBUG WriteOnlyServer-58648462 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:16:16,909 [17172] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:16:16,910 [17172] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:16:16,957 [8164] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:16:16,963 [848] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:16:17,028 [5096] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:16:17,049 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:16:17,057 [10848] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:16:17,057 [13928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:16:17,060 [6812] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:16:17,061 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:16:17,064 [3856] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:16:17,064 [13928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:16:17,067 [5096] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:16:17,068 [16500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:16:17,071 [10848] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:16:17,071 [16500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:16:17,074 [6812] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:16:17,074 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:16:17,077 [3856] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:16:17,078 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:16:17,088 [5096] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6876)
2016-02-29 21:16:17,090 [16500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:16:17,094 [16500] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:16:17,128 [17172] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:16:17,129 [17172] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:16:17,148 [17172] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:16:17,148 [17172] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:16:17,151 [16500] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:16:17,151 [16500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:16:17,152 [5096] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:16:17,154 [13928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:16:17,155 [10848] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:16:17,155 [16500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:16:17,156 [3856] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:16:17,157 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:16:17,157 [6812] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:16:17,158 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:16:17,159 [5096] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:16:17,159 [16500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:16:17,160 [10848] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:16:17,160 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:16:17,160 [3856] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:16:17,162 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:16:17,162 [6812] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:16:17,163 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:16:17,164 [5096] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6876)
2016-02-29 21:16:17,165 [13928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:16:17,165 [13928] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:16:17,181 [17172] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:16:17,189 [10848] DEBUG WriteOnlyServer-58648462 - insert into Maker (ID, Name) values ('0adfa8e1-b238-4e73-be1c-e8ba5ed06649', 'soime');
2016-02-29 21:16:17,206 [10848] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 184)
2016-02-29 21:16:17,293 [848] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:16:17,294 [848] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 0adfa8e1-b238-4e73-be1c-e8ba5ed06649)
2016-02-29 21:16:17,390 [17172] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:16:17,391 [17172] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:16:17,404 [17172] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:16:17,404 [17172] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:16:17,419 [13928] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:16:17,419 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:16:17,420 [10848] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:16:17,422 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:16:17,424 [5480] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:16:17,425 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:16:17,426 [6812] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1214)
2016-02-29 21:16:17,427 [16500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:16:17,429 [3856] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:16:17,429 [16500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:16:17,430 [10848] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:16:17,430 [16500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:16:17,432 [10416] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:16:17,432 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:16:17,433 [5096] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:16:17,434 [16500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:16:17,435 [5480] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:16:17,435 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:16:17,437 [6812] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6876)
2016-02-29 21:16:17,439 [16500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:16:17,439 [16500] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:16:17,442 [17172] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 21:16:17,443 [3856] DEBUG WriteOnlyServer-58648462 - delete from Maker where ID = '6f6d6587-c509-49c7-9c4c-77ea31ecd7d3';
2016-02-29 21:16:17,452 [3856] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 21:16:17,452 [3856] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 21:16:17,452 [3856] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = '6f6d6587-c509-49c7-9c4c-77ea31ecd7d3';
2016-02-29 21:16:17,455 [3856] DEBUG WriteOnlyServer-58648462 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 21:16:17,456 [13928] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: DELT, TYPE: Maker)
2016-02-29 21:16:17,459 [13928] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 6f6d6587-c509-49c7-9c4c-77ea31ecd7d3)
2016-02-29 21:16:17,461 [13928] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:16:17,461 [13928] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:16:17,463 [10848] DEBUG WriteOnlyServer-58648462 - update InventoryFormat set MakerID = '' where ID = '22c44ddd-4972-4c33-99a9-214eb6bb2f41';
2016-02-29 21:16:17,466 [10848] DEBUG WriteOnlyServer-58648462 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 347)
2016-02-29 21:16:17,466 [10848] DEBUG WriteOnlyServer-58648462 - update InventoryFormat set MakerID = '' where ID = '8ed0d73c-53a6-4534-9e94-436cd04c077c';
2016-02-29 21:16:17,468 [10848] DEBUG WriteOnlyServer-58648462 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 350)
2016-02-29 21:16:17,548 [17172] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:16:17,548 [17172] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:16:17,553 [17172] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:16:17,559 [17172] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:16:17,562 [13928] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:16:17,562 [13928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:16:17,563 [6812] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:16:17,565 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:16:17,565 [5480] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:16:17,566 [16500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:16:17,567 [3856] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1152)
2016-02-29 21:16:17,568 [13928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:16:17,568 [10848] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:16:17,569 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:16:17,569 [5096] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:16:17,570 [13928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:16:17,571 [10416] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:16:17,571 [16500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:16:17,572 [10848] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:16:17,573 [13928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:16:17,574 [5096] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:16:17,574 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:16:17,575 [6812] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6804)
2016-02-29 21:16:17,577 [13928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:16:17,578 [13928] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:16:17,735 [17172] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 21:16:17,736 [5096] DEBUG WriteOnlyServer-58648462 - insert into Product (ID, Name) values ('7d2e1f4c-c6b6-43fc-a2c5-ed690ffe58be', '새로운 제품');
2016-02-29 21:16:17,745 [5096] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 197)
2016-02-29 21:16:17,746 [13928] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Product)
2016-02-29 21:16:17,746 [13928] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Product, ID: 7d2e1f4c-c6b6-43fc-a2c5-ed690ffe58be)
2016-02-29 21:16:17,842 [17172] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:16:17,843 [17172] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:16:17,847 [17172] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:16:17,847 [17172] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:16:17,850 [13928] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:16:17,850 [13928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:16:17,851 [6812] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:16:17,853 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:16:17,854 [3856] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:16:17,854 [13928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:16:17,855 [10848] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1152)
2016-02-29 21:16:17,856 [13928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:16:17,857 [10416] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:16:17,857 [13928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:16:17,858 [5480] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:16:17,859 [13928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:16:17,860 [5096] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:16:17,860 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:16:17,862 [6812] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:16:17,863 [16500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:16:17,863 [3856] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:16:17,864 [16500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:16:17,869 [10848] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6804)
2016-02-29 21:16:17,871 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:16:17,871 [848] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:16:17,874 [17172] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:16:17,875 [10416] DEBUG WriteOnlyServer-58648462 - insert into Maker (ID, Name) values ('544aa5a9-f8da-451c-a2fb-ecb9020d34c0', 'some maker');
2016-02-29 21:16:17,875 [17172] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Measure)
2016-02-29 21:16:17,875 [17172] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:InventoryFormat)
2016-02-29 21:16:17,883 [10416] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 189)
2016-02-29 21:16:17,883 [16500] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:16:17,883 [10416] DEBUG WriteOnlyServer-58648462 - insert into Measure (ID, Name) values ('85dec01c-fe18-444b-b3b0-0b61897bf2dd', 'some measure');
2016-02-29 21:16:17,883 [16500] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 544aa5a9-f8da-451c-a2fb-ecb9020d34c0)
2016-02-29 21:16:17,888 [10416] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Measure, SIZE: 193)
2016-02-29 21:16:17,889 [16500] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Measure)
2016-02-29 21:16:17,889 [16500] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: 85dec01c-fe18-444b-b3b0-0b61897bf2dd)
2016-02-29 21:16:17,889 [10416] DEBUG WriteOnlyServer-58648462 - insert into InventoryFormat (ID, Specification, Quantity, Memo, ProductID, MakerID, MeasureID) values ('6b76c1e3-3252-4f72-acd7-2c26897fe094', 'some specification', '0', 'spec', '71fe8c97-9500-476f-9ef0-b2aa9f671447', '544aa5a9-f8da-451c-a2fb-ecb9020d34c0', '85dec01c-fe18-444b-b3b0-0b61897bf2dd');
2016-02-29 21:16:17,891 [10416] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 394)
2016-02-29 21:16:17,891 [16500] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: InventoryFormat)
2016-02-29 21:16:17,891 [16500] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 6b76c1e3-3252-4f72-acd7-2c26897fe094)
2016-02-29 21:16:17,986 [17172] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:16:17,986 [17172] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:16:17,987 [17172] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:16:17,988 [17172] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:16:17,990 [16500] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:16:17,990 [16500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:16:17,991 [6812] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:16:17,993 [16500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:16:17,994 [5096] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:16:17,995 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:16:17,996 [10416] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1218)
2016-02-29 21:16:17,997 [13928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:16:17,997 [3856] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:16:17,998 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:16:17,999 [10848] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:16:17,999 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:16:18,000 [5480] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:16:18,000 [13928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:16:18,000 [6812] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:16:18,002 [16500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:16:18,002 [5096] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:16:18,003 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:16:18,004 [10416] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 7065)
2016-02-29 21:16:18,005 [848] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:16:18,006 [848] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:16:18,033 [17172] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:16:18,139 [10848] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:16:18,140 [5096] DEBUG WriteOnlyServer-58648462 - insert into Supplier (ID, Name) values ('3a30d5bd-acde-4aa0-92c6-cc060ecd1bb5', 'new');
2016-02-29 21:16:18,140 [10848] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:16:18,140 [10848] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:16:18,144 [10848] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:16:18,151 [5096] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:16:18,152 [16500] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:16:18,152 [5096] DEBUG WriteOnlyServer-58648462 - insert into Warehouse (ID, Name) values ('7c1acdbe-3045-4d39-a17d-7d1fe0b9d5f4', 'new');
2016-02-29 21:16:18,152 [16500] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: 3a30d5bd-acde-4aa0-92c6-cc060ecd1bb5)
2016-02-29 21:16:18,156 [5096] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:16:18,156 [16500] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Warehouse)
2016-02-29 21:16:18,156 [5096] DEBUG WriteOnlyServer-58648462 - insert into Employee (ID, Name) values ('18d5f20c-3a0c-42fd-bea1-2f939a65d136', 'new');
2016-02-29 21:16:18,156 [16500] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Warehouse, ID: 7c1acdbe-3045-4d39-a17d-7d1fe0b9d5f4)
2016-02-29 21:16:18,160 [5096] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:16:18,160 [16500] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Employee)
2016-02-29 21:16:18,160 [16500] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: 18d5f20c-3a0c-42fd-bea1-2f939a65d136)
2016-02-29 21:16:18,162 [13928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 21:16:18,162 [5480] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:16:18,173 [5096] DEBUG WriteOnlyServer-58648462 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('bee43a62-7e39-4a4d-9f09-83b5a3a709c2', '1', '2016-02-29 21:16:18.009', '0', '1', '', '30e2ddf5-7d78-4db3-accd-b29eb9a53b6b', '', '3a30d5bd-acde-4aa0-92c6-cc060ecd1bb5', '', '7c1acdbe-3045-4d39-a17d-7d1fe0b9d5f4', '18d5f20c-3a0c-42fd-bea1-2f939a65d136');
2016-02-29 21:16:18,177 [5096] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:16:18,178 [13928] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: IOStockFormat)
2016-02-29 21:16:18,178 [13928] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: bee43a62-7e39-4a4d-9f09-83b5a3a709c2)
2016-02-29 21:16:18,187 [5096] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = 'bee43a62-7e39-4a4d-9f09-83b5a3a709c2'
2016-02-29 21:16:18,205 [17172] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:16:18,205 [17172] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:17:36,910 [14924] DEBUG ReadOnlyServer-34382671 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:17:36,921 [14924] DEBUG ReadOnlyServer-34382671 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:17:36,921 [14924] DEBUG ReadOnlyServer-34382671 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:17:36,921 [14924] DEBUG ReadOnlyServer-34382671 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:17:36,921 [14924] DEBUG ReadOnlyServer-34382671 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:17:36,987 [14924] DEBUG WriteOnlyServer-58648462 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:17:36,987 [14924] DEBUG WriteOnlyServer-58648462 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:17:36,988 [14924] DEBUG WriteOnlyServer-58648462 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:17:37,008 [14924] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:17:37,009 [14924] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:17:37,087 [13640] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:17:37,092 [10340] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:17:37,183 [5256] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:17:37,203 [10340] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:17:37,209 [16468] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:17:37,210 [13640] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:17:37,215 [9144] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:17:37,216 [10340] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:17:37,219 [16468] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:17:37,219 [10340] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:17:37,222 [9144] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:17:37,223 [10340] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:17:37,225 [16468] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:17:37,226 [10528] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:17:37,229 [9144] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:17:37,229 [10340] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:17:37,232 [16468] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:17:37,233 [10340] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:17:37,244 [9144] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6873)
2016-02-29 21:17:37,246 [13640] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:17:37,251 [13640] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:17:37,376 [14924] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:17:37,482 [16468] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:17:37,489 [16468] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:17:37,490 [16468] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:17:37,491 [13776] DEBUG WriteOnlyServer-58648462 - insert into Supplier (ID, Name) values ('5459e8aa-8999-4399-8dcb-4f3ecffc46be', 'new');
2016-02-29 21:17:37,492 [16468] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:17:37,496 [13776] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:17:37,500 [13776] DEBUG WriteOnlyServer-58648462 - insert into Warehouse (ID, Name) values ('9e870e4d-1b46-4f4d-8e18-048982c5676b', 'new');
2016-02-29 21:17:37,503 [13776] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:17:37,503 [13776] DEBUG WriteOnlyServer-58648462 - insert into Employee (ID, Name) values ('663dd8a9-2b94-43b4-95e7-ea9e8b57d372', 'new');
2016-02-29 21:17:37,505 [16468] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 21:17:37,506 [9144] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:17:37,507 [13776] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:17:37,548 [9144] DEBUG WriteOnlyServer-58648462 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('877c154d-b6a9-4081-a1ae-b7cd5126c7e0', '1', '2016-02-29 21:17:37.348', '0', '1', '', '141cdae6-de82-463c-8a9d-46ce49b64068', '', '5459e8aa-8999-4399-8dcb-4f3ecffc46be', '', '9e870e4d-1b46-4f4d-8e18-048982c5676b', '663dd8a9-2b94-43b4-95e7-ea9e8b57d372');
2016-02-29 21:17:37,557 [9144] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:17:37,570 [9144] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '877c154d-b6a9-4081-a1ae-b7cd5126c7e0'
2016-02-29 21:17:37,599 [13640] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:17:37,602 [13640] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: 5459e8aa-8999-4399-8dcb-4f3ecffc46be)
2016-02-29 21:17:37,630 [14924] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:17:37,630 [14924] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:18:25,248 [6084] DEBUG ReadOnlyServer-34382671 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:18:25,257 [6084] DEBUG ReadOnlyServer-34382671 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:18:25,257 [6084] DEBUG ReadOnlyServer-34382671 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:18:25,257 [6084] DEBUG ReadOnlyServer-34382671 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:18:25,257 [6084] DEBUG ReadOnlyServer-34382671 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:18:25,316 [6084] DEBUG WriteOnlyServer-58648462 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:18:25,316 [6084] DEBUG WriteOnlyServer-58648462 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:18:25,317 [6084] DEBUG WriteOnlyServer-58648462 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:18:25,336 [6084] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:18:25,338 [6084] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:18:25,381 [13960] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:18:25,387 [17112] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:18:25,447 [8136] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:18:25,463 [17112] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:18:25,469 [6468] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:18:25,470 [17112] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:18:25,473 [8136] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:18:25,474 [16108] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:18:25,476 [14656] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:18:25,477 [16108] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:18:25,479 [6688] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:18:25,479 [17112] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:18:25,481 [6468] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:18:25,482 [13736] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:18:25,484 [8136] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:18:25,485 [13736] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:18:25,487 [14656] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:18:25,487 [13736] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:18:25,497 [6688] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6867)
2016-02-29 21:18:25,499 [13736] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:18:25,503 [13736] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:18:25,573 [6084] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:18:25,687 [8136] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:18:25,698 [8136] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:18:25,699 [8136] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:18:25,702 [8136] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:18:25,704 [6688] DEBUG WriteOnlyServer-58648462 - insert into Supplier (ID, Name) values ('cf0dfe82-885d-4165-a3ff-d51c33ee49fd', 'new');
2016-02-29 21:18:25,709 [6688] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:18:25,717 [6688] DEBUG WriteOnlyServer-58648462 - insert into Warehouse (ID, Name) values ('ec448b9c-2502-466b-9390-959679e84e86', 'new');
2016-02-29 21:18:25,718 [8136] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 21:18:25,718 [14656] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:18:25,720 [6688] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:18:25,720 [6688] DEBUG WriteOnlyServer-58648462 - insert into Employee (ID, Name) values ('187b2261-7c5d-4b19-9493-85857a5408cf', 'new');
2016-02-29 21:18:25,723 [6688] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:18:25,731 [6688] DEBUG WriteOnlyServer-58648462 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('f998188a-1788-4317-ad2d-3cf39ff8466d', '1', '2016-02-29 21:18:25.549', '0', '1', '', 'd3454dff-5118-405e-ac69-ceeee383ad4c', '', 'cf0dfe82-885d-4165-a3ff-d51c33ee49fd', '', 'ec448b9c-2502-466b-9390-959679e84e86', '187b2261-7c5d-4b19-9493-85857a5408cf');
2016-02-29 21:18:25,735 [6688] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:18:25,740 [6688] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = 'f998188a-1788-4317-ad2d-3cf39ff8466d'
2016-02-29 21:18:25,771 [6084] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:18:25,771 [6084] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:18:25,776 [17112] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:18:25,779 [17112] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: cf0dfe82-885d-4165-a3ff-d51c33ee49fd)
2016-02-29 21:20:56,896 [10376] DEBUG ReadOnlyServer-34382671 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:20:56,905 [10376] DEBUG ReadOnlyServer-34382671 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:20:56,905 [10376] DEBUG ReadOnlyServer-34382671 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:20:56,905 [10376] DEBUG ReadOnlyServer-34382671 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:20:56,905 [10376] DEBUG ReadOnlyServer-34382671 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:20:56,963 [10376] DEBUG WriteOnlyServer-58648462 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:20:56,963 [10376] DEBUG WriteOnlyServer-58648462 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:20:56,963 [10376] DEBUG WriteOnlyServer-58648462 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:20:56,981 [10376] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:20:56,983 [10376] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:20:57,025 [8352] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:20:57,030 [4556] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:20:57,093 [14672] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:20:57,109 [4556] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:20:57,115 [7212] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:20:57,116 [3440] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:20:57,118 [13640] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:20:57,119 [4556] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:20:57,121 [17300] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:20:57,122 [9556] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:20:57,124 [14672] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:20:57,124 [3440] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:20:57,126 [7212] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:20:57,127 [3440] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:20:57,128 [13640] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:20:57,128 [3440] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:20:57,131 [17300] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:20:57,132 [3440] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:20:57,142 [14672] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6869)
2016-02-29 21:20:57,143 [4556] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:20:57,148 [4556] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:20:57,216 [10376] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:20:57,327 [13640] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:20:57,332 [13640] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:20:57,332 [13640] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:20:57,335 [14672] DEBUG WriteOnlyServer-58648462 - insert into Supplier (ID, Name) values ('3cd3413a-32dc-4f1a-b10b-1f8e89cce8fb', 'new');
2016-02-29 21:20:57,335 [13640] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:20:57,347 [14672] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:20:57,359 [14672] DEBUG WriteOnlyServer-58648462 - insert into Warehouse (ID, Name) values ('69bb5f3c-7c22-4bce-9e15-0c4b3128680b', 'new');
2016-02-29 21:20:57,361 [4556] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 21:20:57,361 [7212] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:20:57,364 [14672] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:20:57,364 [14672] DEBUG WriteOnlyServer-58648462 - insert into Employee (ID, Name) values ('469a93b5-90d3-4a73-b168-ed6830d5a990', 'new');
2016-02-29 21:20:57,367 [14672] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:20:57,375 [14672] DEBUG WriteOnlyServer-58648462 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('956d2490-6d9a-4801-b647-dc1224614894', '1', '2016-02-29 21:20:57.192', '0', '1', '', '47fa5ee6-1a52-4b34-b725-663f8b3d804f', '', '3cd3413a-32dc-4f1a-b10b-1f8e89cce8fb', '', '69bb5f3c-7c22-4bce-9e15-0c4b3128680b', '469a93b5-90d3-4a73-b168-ed6830d5a990');
2016-02-29 21:20:57,378 [14672] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:20:57,383 [14672] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '956d2490-6d9a-4801-b647-dc1224614894'
2016-02-29 21:20:57,413 [3440] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:20:57,415 [3440] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: 3cd3413a-32dc-4f1a-b10b-1f8e89cce8fb)
2016-02-29 21:20:57,418 [10376] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:20:57,418 [10376] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:21:24,641 [15816] DEBUG ReadOnlyServer-34382671 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:21:24,651 [15816] DEBUG ReadOnlyServer-34382671 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:21:24,651 [15816] DEBUG ReadOnlyServer-34382671 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:21:24,651 [15816] DEBUG ReadOnlyServer-34382671 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:21:24,651 [15816] DEBUG ReadOnlyServer-34382671 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:21:24,711 [15816] DEBUG WriteOnlyServer-58648462 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:21:24,711 [15816] DEBUG WriteOnlyServer-58648462 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:21:24,711 [15816] DEBUG WriteOnlyServer-58648462 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:21:24,730 [15816] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:21:24,732 [15816] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:21:24,776 [14944] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:21:24,780 [9980] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:21:24,839 [9008] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:21:24,856 [9980] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:21:24,863 [14244] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:21:24,864 [8880] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:21:24,866 [13304] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:21:24,868 [9980] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:21:24,869 [14324] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:21:24,870 [10768] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:21:24,872 [9008] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:21:24,872 [10768] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:21:24,874 [14244] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:21:24,875 [10768] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:21:24,877 [13304] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:21:24,878 [10768] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:21:24,880 [14324] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:21:24,881 [10768] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:21:24,891 [9008] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6868)
2016-02-29 21:21:24,893 [10768] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:21:24,898 [10768] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:21:24,967 [15816] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:21:25,078 [13304] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:21:25,083 [13304] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:21:25,084 [13304] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:21:25,086 [13304] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:21:25,086 [9008] DEBUG WriteOnlyServer-58648462 - insert into Supplier (ID, Name) values ('5d56ea5a-fdab-4ff1-8f05-9f74194b708c', 'new');
2016-02-29 21:21:25,095 [9008] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:21:25,096 [10768] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 21:21:25,096 [14244] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:21:25,100 [9008] DEBUG WriteOnlyServer-58648462 - insert into Warehouse (ID, Name) values ('7b8f6173-5297-41e0-8e46-283497cdd239', 'new');
2016-02-29 21:21:25,103 [9008] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:21:25,103 [9008] DEBUG WriteOnlyServer-58648462 - insert into Employee (ID, Name) values ('0f127086-7c49-479b-a3d3-66d451439f00', 'new');
2016-02-29 21:21:25,106 [9008] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:21:25,117 [9008] DEBUG WriteOnlyServer-58648462 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('f9a09efa-392b-4768-968d-8a29119a5e38', '1', '2016-02-29 21:21:24.942', '0', '1', '', 'a13d2d4e-7eb1-4ad2-a6e1-088cfdc16eb1', '', '5d56ea5a-fdab-4ff1-8f05-9f74194b708c', '', '7b8f6173-5297-41e0-8e46-283497cdd239', '0f127086-7c49-479b-a3d3-66d451439f00');
2016-02-29 21:21:25,120 [9008] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:21:25,126 [9008] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = 'f9a09efa-392b-4768-968d-8a29119a5e38'
2016-02-29 21:21:25,150 [15816] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:21:25,150 [15816] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:21:25,165 [10768] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:21:25,168 [10768] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: 5d56ea5a-fdab-4ff1-8f05-9f74194b708c)
2016-02-29 21:22:27,401 [14752] DEBUG ReadOnlyServer-34382671 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:22:27,411 [14752] DEBUG ReadOnlyServer-34382671 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:22:27,411 [14752] DEBUG ReadOnlyServer-34382671 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:22:27,411 [14752] DEBUG ReadOnlyServer-34382671 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:22:27,411 [14752] DEBUG ReadOnlyServer-34382671 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:22:27,474 [14752] DEBUG WriteOnlyServer-58648462 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:22:27,474 [14752] DEBUG WriteOnlyServer-58648462 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:22:27,474 [14752] DEBUG WriteOnlyServer-58648462 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:22:27,495 [14752] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:22:27,496 [14752] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:22:27,576 [8696] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:22:27,583 [11136] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:22:27,685 [3060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:22:27,710 [2576] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:22:27,717 [320] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:22:27,718 [2576] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:22:27,723 [10568] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:22:27,724 [2576] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:22:27,727 [7636] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:22:27,728 [2576] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:22:27,730 [10568] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:22:27,731 [4696] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:22:27,734 [3060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:22:27,735 [8696] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:22:27,737 [7636] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:22:27,738 [2576] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:22:27,741 [10568] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:22:27,741 [4696] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:22:27,753 [3060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6871)
2016-02-29 21:22:27,755 [8696] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:22:27,760 [8696] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:22:27,884 [14752] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:22:28,016 [10568] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:22:28,021 [10568] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:22:28,021 [10568] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:22:28,023 [10568] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:22:28,023 [3060] DEBUG WriteOnlyServer-58648462 - insert into Supplier (ID, Name) values ('d30443e7-a9b8-4a5b-8c9e-98f3634f3499', 'new');
2016-02-29 21:22:28,032 [3060] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:22:28,033 [2576] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 21:22:28,033 [7684] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:25:15,630 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:25:15,640 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:25:15,640 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:25:15,640 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:25:15,640 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:25:15,704 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:25:15,704 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:25:15,705 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:25:15,735 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - Listener (0.0.0.0:4000) was started
2016-02-29 21:25:15,737 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - Listener (0.0.0.0:4001) was started
2016-02-29 21:25:15,810 [10896] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:25:15,815 [12432] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:25:15,908 [12356] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:25:15,929 [7304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:25:15,936 [1888] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:25:15,937 [4748] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:25:15,940 [12356] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:25:15,941 [7304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:25:15,945 [1888] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:25:15,946 [10896] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:25:15,949 [12356] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:25:15,950 [7304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:25:15,953 [1888] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:25:15,954 [10896] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:25:15,957 [12356] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:25:15,957 [7304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:25:15,961 [9112] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:25:15,961 [4748] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:25:15,973 [12356] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6872)
2016-02-29 21:25:15,975 [7304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:25:15,980 [7304] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:25:16,109 [TestRunnerThread] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:25:16,216 [1888] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:25:16,222 [1888] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:25:16,222 [1888] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:25:16,224 [1888] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:25:16,224 [9112] DEBUG WriteOnlyServer-59408853 - insert into Supplier (ID, Name) values ('c38b6828-9534-463d-97d6-b5b01a4ca4f2', 'new');
2016-02-29 21:25:16,233 [9112] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:25:16,235 [12356] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:25:16,236 [7304] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:IOStockFormat)
2016-02-29 21:25:16,238 [9112] DEBUG WriteOnlyServer-59408853 - insert into Warehouse (ID, Name) values ('4bb752e9-d62d-4e71-b003-adc096f6ef46', 'new');
2016-02-29 21:25:16,241 [9112] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:25:16,242 [9112] DEBUG WriteOnlyServer-59408853 - insert into Employee (ID, Name) values ('ead88a61-6c91-46fc-a752-3df43e9596f9', 'new');
2016-02-29 21:25:16,245 [9112] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:25:16,299 [9112] DEBUG WriteOnlyServer-59408853 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('5d38e1aa-7865-4d66-aaf2-a9cf7b51bb4c', '1', '2016-02-29 21:25:16.082', '0', '1', '', '21483435-3b01-4189-810d-9f12eb4b393c', '', 'c38b6828-9534-463d-97d6-b5b01a4ca4f2', '', '4bb752e9-d62d-4e71-b003-adc096f6ef46', 'ead88a61-6c91-46fc-a752-3df43e9596f9');
2016-02-29 21:25:16,303 [9112] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 519)
2016-02-29 21:25:16,315 [9112] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '5d38e1aa-7865-4d66-aaf2-a9cf7b51bb4c'
2016-02-29 21:25:16,324 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:25:16,325 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:25:16,354 [4748] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:25:16,356 [4748] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: c38b6828-9534-463d-97d6-b5b01a4ca4f2)
2016-02-29 21:25:44,609 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:25:44,618 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:25:44,618 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:25:44,618 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:25:44,618 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:25:44,676 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:25:44,676 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:25:44,676 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:25:44,703 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:25:44,705 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:25:44,749 [7432] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:25:44,756 [16580] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:25:44,813 [16472] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:25:44,837 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:25:44,846 [4564] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:25:44,847 [13088] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:25:44,850 [7248] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:25:44,850 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:25:44,853 [15816] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:25:44,854 [13088] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:25:44,856 [16472] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:25:44,857 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:25:44,859 [4564] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:25:44,860 [9980] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:25:44,862 [7248] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:25:44,863 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:25:44,865 [15816] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:25:44,866 [9980] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:25:44,876 [16472] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6874)
2016-02-29 21:25:44,879 [9980] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:25:44,883 [9980] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:25:44,929 [TestRunnerThread] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:25:44,934 [TestRunnerThread] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Measure)
2016-02-29 21:25:44,934 [TestRunnerThread] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:InventoryFormat)
2016-02-29 21:25:44,936 [4564] DEBUG WriteOnlyServer-63291458 - insert into Maker (ID, Name) values ('c10e91d5-02e2-484c-a1ed-710eb95fb93e', 'some maker');
2016-02-29 21:25:44,944 [4564] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 189)
2016-02-29 21:25:44,948 [4564] DEBUG WriteOnlyServer-63291458 - insert into Measure (ID, Name) values ('a3fd4ed9-5705-4d14-9e5c-a9bf852c30de', 'some measure');
2016-02-29 21:25:44,951 [4564] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Measure, SIZE: 193)
2016-02-29 21:25:44,951 [4564] DEBUG WriteOnlyServer-63291458 - insert into InventoryFormat (ID, Specification, Quantity, Memo, ProductID, MakerID, MeasureID) values ('ca483418-8290-40a7-be67-52807fe840b5', 'some specification', '0', 'spec', '3c077487-5474-45d9-8916-2f2e76a7b9ae', 'c10e91d5-02e2-484c-a1ed-710eb95fb93e', 'a3fd4ed9-5705-4d14-9e5c-a9bf852c30de');
2016-02-29 21:25:44,954 [4564] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 394)
2016-02-29 21:25:44,998 [9980] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:25:45,000 [9980] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: c10e91d5-02e2-484c-a1ed-710eb95fb93e)
2016-02-29 21:25:45,001 [16580] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Measure)
2016-02-29 21:25:45,001 [16580] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: a3fd4ed9-5705-4d14-9e5c-a9bf852c30de)
2016-02-29 21:25:45,001 [16580] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: InventoryFormat)
2016-02-29 21:25:45,001 [16580] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: ca483418-8290-40a7-be67-52807fe840b5)
2016-02-29 21:25:45,064 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:25:45,065 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:25:45,075 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:25:45,081 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:25:45,084 [16580] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:25:45,084 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:25:45,085 [15816] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:25:45,087 [13088] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:25:45,088 [4564] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:25:45,088 [9980] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:25:45,089 [7248] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1219)
2016-02-29 21:25:45,090 [9980] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:25:45,090 [16472] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:25:45,091 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:25:45,092 [15816] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:25:45,093 [9980] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:25:45,093 [4564] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:25:45,094 [9980] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:25:45,095 [7248] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:25:45,095 [9980] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:25:45,096 [16472] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:25:45,096 [13088] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:25:45,098 [15816] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 7135)
2016-02-29 21:25:45,099 [13088] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:25:45,099 [13088] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:25:45,244 [TestRunnerThread] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 21:25:45,245 [4564] DEBUG WriteOnlyServer-63291458 - insert into Product (ID, Name) values ('dfa3fddc-ebab-4588-ab76-aa0efeda26c1', '새로운 제품');
2016-02-29 21:25:45,256 [4564] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 197)
2016-02-29 21:25:45,256 [16580] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Product)
2016-02-29 21:25:45,256 [16580] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Product, ID: dfa3fddc-ebab-4588-ab76-aa0efeda26c1)
2016-02-29 21:25:45,356 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:25:45,356 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:25:45,359 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:25:45,359 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:25:45,375 [13088] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:25:45,375 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:25:45,376 [4564] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:25:45,378 [13088] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:25:45,379 [7248] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:25:45,380 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:25:45,381 [15816] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1219)
2016-02-29 21:25:45,382 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:25:45,383 [16472] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:25:45,383 [13088] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:25:45,385 [4564] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:25:45,385 [9980] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:25:45,386 [7248] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:25:45,387 [13088] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:25:45,388 [15816] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:25:45,389 [9980] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:25:45,390 [16472] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:25:45,391 [13088] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:25:45,393 [4564] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 7135)
2016-02-29 21:25:45,394 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:25:45,395 [16580] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:25:45,421 [TestRunnerThread] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:25:45,525 [15816] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:25:45,525 [4564] DEBUG WriteOnlyServer-63291458 - insert into Supplier (ID, Name) values ('f0548f8f-d4b2-451b-ad7b-0719abb5f60a', 'new');
2016-02-29 21:25:45,525 [15816] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:25:45,526 [15816] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:25:45,528 [15816] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:25:45,534 [4564] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:25:45,534 [16580] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:25:45,534 [4564] DEBUG WriteOnlyServer-63291458 - insert into Warehouse (ID, Name) values ('3a71ad25-18ec-4872-b084-e11f319986e2', 'new');
2016-02-29 21:25:45,534 [16580] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: f0548f8f-d4b2-451b-ad7b-0719abb5f60a)
2016-02-29 21:25:45,536 [4564] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:25:45,537 [16580] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Warehouse)
2016-02-29 21:25:45,537 [4564] DEBUG WriteOnlyServer-63291458 - insert into Employee (ID, Name) values ('cbfcd4d3-0d00-454a-9af5-38d24607f140', 'new');
2016-02-29 21:25:45,537 [16580] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Warehouse, ID: 3a71ad25-18ec-4872-b084-e11f319986e2)
2016-02-29 21:25:45,539 [4564] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:25:45,539 [16580] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Employee)
2016-02-29 21:25:45,540 [16580] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: cbfcd4d3-0d00-454a-9af5-38d24607f140)
2016-02-29 21:25:45,540 [15816] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 21:25:45,540 [7248] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:25:45,550 [4564] DEBUG WriteOnlyServer-63291458 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('7319453e-d02d-439b-a46b-60bc11235fcf', '1', '2016-02-29 21:25:45.400', '0', '1', '', '1c441f30-5e18-480a-a0e6-52ea107f27b8', '', 'f0548f8f-d4b2-451b-ad7b-0719abb5f60a', '', '3a71ad25-18ec-4872-b084-e11f319986e2', 'cbfcd4d3-0d00-454a-9af5-38d24607f140');
2016-02-29 21:25:45,552 [4564] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:25:45,556 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:25:45,556 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:25:45,558 [4564] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '7319453e-d02d-439b-a46b-60bc11235fcf'
2016-02-29 21:25:45,561 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:25:45,562 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:25:45,567 [13088] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:25:45,568 [13088] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:25:45,569 [15816] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:25:45,571 [13088] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:25:45,572 [7248] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 735)
2016-02-29 21:25:45,573 [13088] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:25:45,574 [16472] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1219)
2016-02-29 21:25:45,575 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:25:45,576 [7248] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:25:45,577 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:25:45,578 [16472] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:25:45,579 [13088] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:25:45,580 [7248] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:25:45,580 [13088] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:25:45,582 [16472] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 1047)
2016-02-29 21:25:45,583 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:25:45,584 [7248] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 687)
2016-02-29 21:25:45,585 [9980] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:25:45,587 [16472] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 7135)
2016-02-29 21:25:45,588 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:25:45,589 [16580] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:25:45,592 [TestRunnerThread] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:25:45,592 [15816] DEBUG WriteOnlyServer-63291458 - insert into Maker (ID, Name) values ('418ec9fd-f6e4-43bd-b184-a579e8600d13', 'soime');
2016-02-29 21:25:45,758 [4564] DEBUG R54IN0.Server.WriteSessionCommandExtension - update InventoryFormat set Quantity =
                    ifnull((select sum(Quantity) from IOStockFormat where InventoryID = '1c441f30-5e18-480a-a0e6-52ea107f27b8' and StockType = '1'), 0) -
                    ifnull((select sum(Quantity) from IOStockFormat where InventoryID = '1c441f30-5e18-480a-a0e6-52ea107f27b8' and StockType = '2'), 0)
                    where ID = '1c441f30-5e18-480a-a0e6-52ea107f27b8';
2016-02-29 21:25:45,762 [4564] DEBUG R54IN0.Server.WriteSessionCommandExtension - select Quantity from InventoryFormat where ID = '1c441f30-5e18-480a-a0e6-52ea107f27b8';
2016-02-29 21:25:45,799 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:25:45,799 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:25:45,806 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:25:45,807 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:25:45,809 [9980] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:25:45,809 [9980] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:25:45,810 [4564] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:25:45,812 [13088] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:25:45,813 [7248] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 735)
2016-02-29 21:25:45,813 [9980] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:25:45,814 [16472] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1219)
2016-02-29 21:25:45,815 [9980] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:25:45,815 [15816] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:25:45,816 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:25:45,817 [4564] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:25:45,817 [13088] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:25:45,818 [7248] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:25:45,819 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:25:45,819 [16472] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 1047)
2016-02-29 21:25:45,820 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:25:45,821 [15816] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 687)
2016-02-29 21:25:45,822 [9980] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:25:45,823 [4564] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 7135)
2016-02-29 21:25:45,824 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:25:45,824 [16580] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:25:45,826 [TestRunnerThread] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 21:25:45,827 [7248] DEBUG WriteOnlyServer-63291458 - delete from Maker where ID = 'd0ee6d59-f22d-40d6-8400-e1698e84b13d';
2016-02-29 21:25:45,829 [7248] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 21:25:45,830 [7248] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 21:25:45,830 [7248] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = 'd0ee6d59-f22d-40d6-8400-e1698e84b13d';
2016-02-29 21:25:45,832 [7248] DEBUG WriteOnlyServer-63291458 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 21:25:45,832 [16580] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: DELT, TYPE: Maker)
2016-02-29 21:25:45,834 [16580] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: d0ee6d59-f22d-40d6-8400-e1698e84b13d)
2016-02-29 21:25:45,836 [16580] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:25:45,839 [16472] DEBUG WriteOnlyServer-63291458 - update InventoryFormat set MakerID = '' where ID = 'f293e14a-dd76-491b-b6ef-042d8f73d06d';
2016-02-29 21:25:45,840 [16472] DEBUG WriteOnlyServer-63291458 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 350)
2016-02-29 21:25:45,938 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:25:45,938 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:25:45,940 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:25:45,940 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:25:45,942 [13088] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:25:45,942 [13088] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:25:45,943 [4564] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:25:45,945 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:25:45,946 [16472] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 735)
2016-02-29 21:25:45,947 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:25:45,948 [7248] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1155)
2016-02-29 21:25:45,948 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:25:45,949 [15816] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:25:45,949 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:25:45,950 [4564] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:25:45,951 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:25:45,952 [16472] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:25:45,952 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:25:45,953 [7248] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 1047)
2016-02-29 21:25:45,954 [13088] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:25:45,955 [15816] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 687)
2016-02-29 21:25:45,956 [16580] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:25:45,957 [4564] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 7099)
2016-02-29 21:25:45,958 [13088] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:25:45,959 [13088] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:25:45,973 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:25:45,974 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:28:12,512 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:28:12,521 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:28:12,521 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:28:12,521 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:28:12,521 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:28:12,581 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:28:12,581 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:28:12,581 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:28:12,608 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:28:12,610 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:28:12,654 [13780] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:28:12,660 [12788] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:28:12,727 [9260] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:28:12,744 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:28:12,751 [15400] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:28:12,752 [11992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:28:12,755 [11280] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:28:12,755 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:28:12,758 [11872] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:28:12,759 [11992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:28:12,762 [9260] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:28:12,762 [11992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:28:12,765 [15400] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:28:12,766 [11992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:28:12,768 [11280] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:28:12,769 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:28:12,771 [11872] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:28:12,772 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:28:12,784 [9260] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6878)
2016-02-29 21:28:12,786 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:28:12,791 [12788] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:28:12,840 [TestRunnerThread] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:28:12,846 [TestRunnerThread] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Measure)
2016-02-29 21:28:12,846 [TestRunnerThread] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:InventoryFormat)
2016-02-29 21:28:12,849 [15400] DEBUG WriteOnlyServer-63291458 - insert into Maker (ID, Name) values ('2c06bc57-805e-461f-b3e6-41b5454fcdba', 'some maker');
2016-02-29 21:28:12,852 [15400] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 189)
2016-02-29 21:28:12,856 [15400] DEBUG WriteOnlyServer-63291458 - insert into Measure (ID, Name) values ('aa3dfaee-39e9-47f6-993b-e431a9e11820', 'some measure');
2016-02-29 21:28:12,859 [15400] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Measure, SIZE: 193)
2016-02-29 21:28:12,859 [15400] DEBUG WriteOnlyServer-63291458 - insert into InventoryFormat (ID, Specification, Quantity, Memo, ProductID, MakerID, MeasureID) values ('b1c03c2d-1c67-439b-80ae-909397b79af6', 'some specification', '0', 'spec', '10829ab0-e3e9-4c3d-b93f-b87b18ae9762', '2c06bc57-805e-461f-b3e6-41b5454fcdba', 'aa3dfaee-39e9-47f6-993b-e431a9e11820');
2016-02-29 21:28:12,862 [15400] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 394)
2016-02-29 21:28:12,907 [12788] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:28:12,910 [12788] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 2c06bc57-805e-461f-b3e6-41b5454fcdba)
2016-02-29 21:28:12,911 [11992] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Measure)
2016-02-29 21:28:12,911 [11992] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: aa3dfaee-39e9-47f6-993b-e431a9e11820)
2016-02-29 21:28:12,911 [11992] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: InventoryFormat)
2016-02-29 21:28:12,911 [11992] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: b1c03c2d-1c67-439b-80ae-909397b79af6)
2016-02-29 21:28:12,970 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:28:12,971 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:28:12,981 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:28:12,987 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:28:12,990 [11992] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:28:12,990 [11992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:28:12,991 [9260] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:28:12,993 [12552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:28:12,994 [15400] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:28:12,995 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:28:12,995 [11280] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1219)
2016-02-29 21:28:12,996 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:28:12,997 [11872] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:28:12,997 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:28:12,998 [9260] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:28:12,999 [12552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:28:12,999 [15400] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:28:13,000 [11992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:28:13,001 [11280] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:28:13,001 [12552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:28:13,002 [11872] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:28:13,002 [12552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:28:13,004 [9260] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 7139)
2016-02-29 21:28:13,005 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:28:13,006 [12788] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:28:13,152 [TestRunnerThread] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 21:28:13,153 [15400] DEBUG WriteOnlyServer-63291458 - insert into Product (ID, Name) values ('b97fc0d7-26e2-41fe-be0e-7496ed9d43bc', '새로운 제품');
2016-02-29 21:28:13,162 [15400] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 197)
2016-02-29 21:28:13,162 [12788] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Product)
2016-02-29 21:28:13,162 [12788] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Product, ID: b97fc0d7-26e2-41fe-be0e-7496ed9d43bc)
2016-02-29 21:28:13,265 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:28:13,266 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:28:13,267 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:28:13,267 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:28:13,274 [12788] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:28:13,274 [12552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:28:13,275 [11280] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:28:13,278 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:28:13,279 [15400] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:28:13,279 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:28:13,280 [11872] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1219)
2016-02-29 21:28:13,281 [12552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:28:13,281 [9260] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:28:13,282 [11992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:28:13,283 [11280] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:28:13,283 [12552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:28:13,284 [15400] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:28:13,285 [11992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:28:13,286 [11872] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:28:13,286 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:28:13,287 [9260] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:28:13,288 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:28:13,289 [11280] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 7139)
2016-02-29 21:28:13,290 [12552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:28:13,290 [12552] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:28:13,317 [TestRunnerThread] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:28:13,421 [11872] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:28:13,421 [11280] DEBUG WriteOnlyServer-63291458 - insert into Supplier (ID, Name) values ('1d1f98f9-718f-43d9-a746-3aef847d346a', 'new');
2016-02-29 21:28:13,421 [11872] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:28:13,422 [11872] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:28:13,423 [11872] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:28:13,430 [11280] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:28:13,430 [12552] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:28:13,430 [12552] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: 1d1f98f9-718f-43d9-a746-3aef847d346a)
2016-02-29 21:28:13,430 [11280] DEBUG WriteOnlyServer-63291458 - insert into Warehouse (ID, Name) values ('1eccbc95-7cdf-4cd7-b4ae-a8d859032df9', 'new');
2016-02-29 21:28:13,434 [11280] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:28:13,434 [12552] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Warehouse)
2016-02-29 21:28:13,434 [11280] DEBUG WriteOnlyServer-63291458 - insert into Employee (ID, Name) values ('dd647497-72a2-4375-a802-344a2ca87d13', 'new');
2016-02-29 21:28:13,434 [12552] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Warehouse, ID: 1eccbc95-7cdf-4cd7-b4ae-a8d859032df9)
2016-02-29 21:28:13,435 [11992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 21:28:13,436 [15400] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:28:13,437 [11280] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:28:13,437 [11992] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Employee)
2016-02-29 21:28:13,437 [11992] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: dd647497-72a2-4375-a802-344a2ca87d13)
2016-02-29 21:28:13,446 [11280] DEBUG WriteOnlyServer-63291458 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('80988822-a049-4bac-bec7-9b92c2408252', '1', '2016-02-29 21:28:13.296', '0', '1', '', '18617398-e539-4c01-94be-04904b04a18c', '', '1d1f98f9-718f-43d9-a746-3aef847d346a', '', '1eccbc95-7cdf-4cd7-b4ae-a8d859032df9', 'dd647497-72a2-4375-a802-344a2ca87d13');
2016-02-29 21:28:13,449 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:28:13,449 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:28:13,449 [11280] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:28:13,453 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:28:13,454 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:28:13,456 [11280] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '80988822-a049-4bac-bec7-9b92c2408252'
2016-02-29 21:28:13,456 [11992] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:28:13,456 [11992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:28:13,458 [15400] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:28:13,460 [12552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:28:13,462 [11872] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 735)
2016-02-29 21:28:13,462 [11992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:28:13,464 [9260] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1219)
2016-02-29 21:28:13,465 [11992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:28:13,466 [15400] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:28:13,466 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:28:13,467 [9260] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:28:13,468 [12552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:28:13,469 [15400] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:28:13,470 [12552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:28:13,471 [9260] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 1047)
2016-02-29 21:28:13,471 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:28:13,472 [15400] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 687)
2016-02-29 21:28:13,473 [12552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:28:13,474 [9260] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 7139)
2016-02-29 21:28:13,476 [12552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:28:13,477 [12552] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:28:13,479 [TestRunnerThread] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:28:13,479 [15400] DEBUG WriteOnlyServer-63291458 - insert into Maker (ID, Name) values ('4554ec88-e6d0-4358-a3e3-52a3be73bd8f', 'soime');
2016-02-29 21:28:13,668 [11280] DEBUG R54IN0.Server.WriteSessionCommandExtension - update InventoryFormat set Quantity =
                    ifnull((select sum(Quantity) from IOStockFormat where InventoryID = '18617398-e539-4c01-94be-04904b04a18c' and StockType = '1'), 0) -
                    ifnull((select sum(Quantity) from IOStockFormat where InventoryID = '18617398-e539-4c01-94be-04904b04a18c' and StockType = '2'), 0)
                    where ID = '18617398-e539-4c01-94be-04904b04a18c';
2016-02-29 21:28:13,679 [11280] DEBUG R54IN0.Server.WriteSessionCommandExtension - select Quantity from InventoryFormat where ID = '18617398-e539-4c01-94be-04904b04a18c';
2016-02-29 21:28:14,000 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:28:14,000 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:28:14,002 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:28:14,009 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:28:14,011 [11992] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:28:14,012 [11992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:28:14,013 [9260] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:28:14,015 [11992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:28:14,016 [11280] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 735)
2016-02-29 21:28:14,017 [12552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:28:14,018 [15400] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1219)
2016-02-29 21:28:14,018 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:28:14,019 [11872] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:28:14,019 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:28:14,020 [9260] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:28:14,021 [11992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:28:14,022 [11280] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:28:14,022 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:28:14,023 [15400] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 1047)
2016-02-29 21:28:14,024 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:28:14,024 [11872] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 687)
2016-02-29 21:28:14,025 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:28:14,026 [9260] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 7139)
2016-02-29 21:28:14,027 [11992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:28:14,028 [11992] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:28:14,030 [TestRunnerThread] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 21:28:14,031 [11280] DEBUG WriteOnlyServer-63291458 - delete from Maker where ID = '088a7c79-e014-4120-8cf9-158a015d816a';
2016-02-29 21:28:14,040 [11280] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 21:28:14,040 [11280] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 21:28:14,040 [11280] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = '088a7c79-e014-4120-8cf9-158a015d816a';
2016-02-29 21:28:14,042 [11280] DEBUG WriteOnlyServer-63291458 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 21:28:14,043 [12788] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: DELT, TYPE: Maker)
2016-02-29 21:28:14,045 [12788] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 088a7c79-e014-4120-8cf9-158a015d816a)
2016-02-29 21:28:14,047 [12788] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:28:14,047 [12788] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:28:14,047 [12788] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:28:14,050 [15400] DEBUG WriteOnlyServer-63291458 - update InventoryFormat set MakerID = '' where ID = '057360ef-9744-4bd1-9ea6-d41dac941879';
2016-02-29 21:28:14,052 [15400] DEBUG WriteOnlyServer-63291458 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 351)
2016-02-29 21:28:14,053 [15400] DEBUG WriteOnlyServer-63291458 - update InventoryFormat set MakerID = '' where ID = '18617398-e539-4c01-94be-04904b04a18c';
2016-02-29 21:28:14,055 [15400] DEBUG WriteOnlyServer-63291458 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 350)
2016-02-29 21:28:14,055 [15400] DEBUG WriteOnlyServer-63291458 - update InventoryFormat set MakerID = '' where ID = '488d7be2-5130-40df-a1fe-bb0227af3b7f';
2016-02-29 21:28:14,056 [15400] DEBUG WriteOnlyServer-63291458 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 347)
2016-02-29 21:28:14,142 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:28:14,142 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:28:14,164 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:28:14,165 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:28:14,168 [12788] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:28:14,171 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:28:14,174 [9260] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:28:14,176 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:28:14,177 [11872] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 735)
2016-02-29 21:28:14,179 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:28:14,180 [11280] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1157)
2016-02-29 21:28:14,181 [11992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:28:14,182 [15400] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:28:14,183 [12788] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:28:14,184 [9260] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:28:14,185 [12552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:28:14,186 [11872] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:28:14,187 [12552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:28:14,188 [11280] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 1047)
2016-02-29 21:28:14,189 [11992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:28:14,190 [15400] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 687)
2016-02-29 21:28:14,191 [11992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:28:14,192 [9260] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 7031)
2016-02-29 21:28:14,194 [11992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:28:14,195 [11992] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:28:14,221 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:28:14,221 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:32:49,067 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:32:49,076 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:32:49,076 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:32:49,076 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:32:49,076 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:32:49,149 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:32:49,149 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:32:49,150 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:32:49,176 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:32:49,178 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:32:49,230 [15640] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:32:49,236 [15884] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:32:49,308 [7092] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:32:49,328 [11616] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:32:49,336 [1356] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:32:49,337 [11616] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:32:49,340 [7092] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:32:49,341 [15884] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:32:49,344 [15540] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:32:49,344 [15884] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:32:49,349 [16428] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:32:49,350 [15884] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:32:49,354 [1356] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:32:49,355 [8196] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:32:49,358 [7092] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:32:49,359 [8196] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:32:49,362 [15540] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:32:49,363 [15884] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:32:49,375 [16428] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6873)
2016-02-29 21:32:49,378 [15884] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:32:49,385 [15884] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:32:49,402 [TestRunnerThread] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:32:49,409 [1356] DEBUG WriteOnlyServer-63291458 - insert into Maker (ID, Name) values ('5bc35f8e-c3c7-42d4-b1e5-9209fd6ca844', 'soime');
2016-02-29 21:32:49,420 [1356] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 184)
2016-02-29 21:32:49,507 [11616] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:32:49,508 [11616] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 5bc35f8e-c3c7-42d4-b1e5-9209fd6ca844)
2016-02-29 21:32:49,927 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:32:49,927 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:32:59,943 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:32:59,952 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:32:59,952 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:32:59,952 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:32:59,952 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:33:00,010 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:33:00,010 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:33:00,010 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:33:00,038 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:33:00,039 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:33:00,086 [6912] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:33:00,092 [8132] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:33:00,155 [11792] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:33:00,174 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:33:00,182 [9456] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:33:00,183 [15872] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:33:00,187 [11792] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:33:00,188 [15872] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:33:00,192 [9520] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:33:00,194 [15872] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:33:00,196 [7528] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:33:00,197 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:33:00,200 [9456] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:33:00,201 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:33:00,203 [11792] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:33:00,204 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:33:00,206 [9520] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:33:00,208 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:33:00,219 [7528] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6874)
2016-02-29 21:33:00,223 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:33:00,232 [14632] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:33:00,278 [TestRunnerThread] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:33:00,283 [TestRunnerThread] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Measure)
2016-02-29 21:33:00,284 [TestRunnerThread] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:InventoryFormat)
2016-02-29 21:33:00,286 [9456] DEBUG WriteOnlyServer-63291458 - insert into Maker (ID, Name) values ('38062ea0-445b-40db-a68b-69b678e08ffb', 'some maker');
2016-02-29 21:33:00,295 [9456] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 189)
2016-02-29 21:33:00,299 [9456] DEBUG WriteOnlyServer-63291458 - insert into Measure (ID, Name) values ('c27a6d34-e03b-4945-9184-74ca7539634b', 'some measure');
2016-02-29 21:33:00,303 [9456] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Measure, SIZE: 193)
2016-02-29 21:33:00,303 [9456] DEBUG WriteOnlyServer-63291458 - insert into InventoryFormat (ID, Specification, Quantity, Memo, ProductID, MakerID, MeasureID) values ('f6ca6df1-c129-49af-92e4-2add20556ce4', 'some specification', '0', 'spec', '8765f9d3-c6b8-439a-8492-a322fe80ad7c', '38062ea0-445b-40db-a68b-69b678e08ffb', 'c27a6d34-e03b-4945-9184-74ca7539634b');
2016-02-29 21:33:00,306 [9456] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 394)
2016-02-29 21:33:00,372 [14632] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:33:00,374 [14632] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 38062ea0-445b-40db-a68b-69b678e08ffb)
2016-02-29 21:33:00,375 [15872] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Measure)
2016-02-29 21:33:00,375 [15872] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: c27a6d34-e03b-4945-9184-74ca7539634b)
2016-02-29 21:33:00,375 [15872] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: InventoryFormat)
2016-02-29 21:33:00,375 [15872] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: f6ca6df1-c129-49af-92e4-2add20556ce4)
2016-02-29 21:33:00,406 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:33:00,406 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:33:00,417 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:33:00,417 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:33:00,424 [15872] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:33:00,424 [15872] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:33:00,426 [9456] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:33:00,429 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:33:00,429 [11792] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:33:00,430 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:33:00,431 [9520] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1219)
2016-02-29 21:33:00,431 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:33:00,432 [7528] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:33:00,433 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:33:00,433 [9456] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:33:00,434 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:33:00,434 [11792] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:33:00,435 [15872] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:33:00,436 [9520] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:33:00,437 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:33:00,438 [7528] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:33:00,438 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:33:00,439 [9456] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 7135)
2016-02-29 21:33:00,440 [15872] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:33:00,441 [15872] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:33:00,594 [TestRunnerThread] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 21:33:00,595 [11792] DEBUG WriteOnlyServer-63291458 - insert into Product (ID, Name) values ('c2157360-51ff-473c-b829-2b494cfe2869', '새로운 제품');
2016-02-29 21:33:00,604 [11792] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 197)
2016-02-29 21:33:00,604 [8132] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Product)
2016-02-29 21:33:00,604 [8132] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Product, ID: c2157360-51ff-473c-b829-2b494cfe2869)
2016-02-29 21:33:00,701 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:33:00,701 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:33:00,703 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:33:00,703 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:33:00,706 [8132] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:33:00,706 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:33:00,707 [7528] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:33:00,710 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:33:00,712 [11792] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:33:00,713 [15872] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:33:00,714 [9456] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1219)
2016-02-29 21:33:00,714 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:33:00,715 [9520] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:33:00,716 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:33:00,717 [7528] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:33:00,718 [15872] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:33:00,719 [11792] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:33:00,720 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:33:00,720 [9456] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:33:00,721 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:33:00,722 [9520] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:33:00,723 [15872] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:33:00,726 [7528] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 7135)
2016-02-29 21:33:00,728 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:33:00,729 [14632] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:33:00,762 [TestRunnerThread] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:33:00,874 [9456] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:33:00,875 [7528] DEBUG WriteOnlyServer-63291458 - insert into Supplier (ID, Name) values ('ad3dc7ec-f300-4bb5-bc1b-3136e599a176', 'new');
2016-02-29 21:33:00,875 [9456] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:33:00,875 [9456] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:33:00,877 [9456] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:33:00,879 [7528] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:33:00,879 [8132] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:33:00,879 [8132] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: ad3dc7ec-f300-4bb5-bc1b-3136e599a176)
2016-02-29 21:33:00,879 [7528] DEBUG WriteOnlyServer-63291458 - insert into Warehouse (ID, Name) values ('c3f9b4e6-ac79-4d2b-b82f-21bdf35c14ce', 'new');
2016-02-29 21:33:00,882 [7528] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:33:00,882 [8132] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Warehouse)
2016-02-29 21:33:00,882 [7528] DEBUG WriteOnlyServer-63291458 - insert into Employee (ID, Name) values ('08816e24-90fa-4f09-923a-0ab58a2f820c', 'new');
2016-02-29 21:33:00,882 [8132] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Warehouse, ID: c3f9b4e6-ac79-4d2b-b82f-21bdf35c14ce)
2016-02-29 21:33:00,885 [7528] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:33:00,886 [14632] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Employee)
2016-02-29 21:33:00,886 [14632] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: 08816e24-90fa-4f09-923a-0ab58a2f820c)
2016-02-29 21:33:00,886 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 21:33:00,886 [11792] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:33:00,895 [7528] DEBUG WriteOnlyServer-63291458 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('2336750e-3b5e-4f2e-8684-548d6506d0f2', '1', '2016-02-29 21:33:00.736', '0', '1', '', '3f747355-a14a-4b9d-ad43-90c42e22f8e6', '', 'ad3dc7ec-f300-4bb5-bc1b-3136e599a176', '', 'c3f9b4e6-ac79-4d2b-b82f-21bdf35c14ce', '08816e24-90fa-4f09-923a-0ab58a2f820c');
2016-02-29 21:33:00,898 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:33:00,898 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:33:00,899 [7528] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:33:00,902 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:33:00,903 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:33:00,904 [7528] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '2336750e-3b5e-4f2e-8684-548d6506d0f2'
2016-02-29 21:33:00,912 [8132] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:33:00,912 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:33:00,913 [9456] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:33:00,915 [15872] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:33:00,916 [11792] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 735)
2016-02-29 21:33:00,917 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:33:00,918 [10744] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1219)
2016-02-29 21:33:00,918 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:33:00,919 [9520] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:33:00,920 [15872] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:33:00,920 [9456] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:33:00,921 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:33:00,922 [9520] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:33:00,923 [15872] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:33:00,923 [9456] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 1047)
2016-02-29 21:33:00,924 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:33:00,925 [9520] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 687)
2016-02-29 21:33:00,926 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:33:00,927 [9456] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 7135)
2016-02-29 21:33:00,929 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:33:00,929 [14632] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:33:00,933 [TestRunnerThread] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:33:00,934 [9520] DEBUG WriteOnlyServer-63291458 - insert into Maker (ID, Name) values ('aac15bee-2b99-4d0d-9981-4c274a2bd17c', 'soime');
2016-02-29 21:33:01,112 [7528] DEBUG R54IN0.Server.WriteSessionCommandExtension - update InventoryFormat set Quantity =
                    ifnull((select sum(Quantity) from IOStockFormat where InventoryID = '3f747355-a14a-4b9d-ad43-90c42e22f8e6' and StockType = '1'), 0) -
                    ifnull((select sum(Quantity) from IOStockFormat where InventoryID = '3f747355-a14a-4b9d-ad43-90c42e22f8e6' and StockType = '2'), 0)
                    where ID = '3f747355-a14a-4b9d-ad43-90c42e22f8e6';
2016-02-29 21:33:01,123 [7528] DEBUG R54IN0.Server.WriteSessionCommandExtension - select Quantity from InventoryFormat where ID = '3f747355-a14a-4b9d-ad43-90c42e22f8e6';
2016-02-29 21:33:01,440 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:33:01,441 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:33:01,443 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:33:01,443 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:33:01,450 [15872] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:33:01,450 [15872] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:33:01,451 [10744] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:33:01,453 [15872] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:33:01,454 [9456] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 735)
2016-02-29 21:33:01,454 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:33:01,455 [7528] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1219)
2016-02-29 21:33:01,456 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:33:01,457 [10744] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:33:01,457 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:33:01,458 [9456] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:33:01,458 [15872] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:33:01,459 [7528] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:33:01,460 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:33:01,461 [10744] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 1047)
2016-02-29 21:33:01,462 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:33:01,463 [9456] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 687)
2016-02-29 21:33:01,464 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:33:01,466 [7528] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 7135)
2016-02-29 21:33:01,468 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:33:01,468 [14632] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:33:01,470 [TestRunnerThread] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 21:33:01,472 [10744] DEBUG WriteOnlyServer-63291458 - delete from Maker where ID = 'cd219c4d-ae67-480a-b826-41eaf8a44148';
2016-02-29 21:33:01,480 [10744] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 21:33:01,480 [10744] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 21:33:01,481 [10744] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = 'cd219c4d-ae67-480a-b826-41eaf8a44148';
2016-02-29 21:33:01,483 [10744] DEBUG WriteOnlyServer-63291458 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 21:33:01,483 [8132] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: DELT, TYPE: Maker)
2016-02-29 21:33:01,486 [8132] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: cd219c4d-ae67-480a-b826-41eaf8a44148)
2016-02-29 21:33:01,487 [8132] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:33:01,487 [8132] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:33:01,490 [9456] DEBUG WriteOnlyServer-63291458 - update InventoryFormat set MakerID = '' where ID = '8ba67249-2d36-4303-9221-63e6c2708367';
2016-02-29 21:33:01,492 [9456] DEBUG WriteOnlyServer-63291458 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 350)
2016-02-29 21:33:01,492 [9456] DEBUG WriteOnlyServer-63291458 - update InventoryFormat set MakerID = '' where ID = '8ca63293-ad5e-4009-99f5-f40e6c007d8d';
2016-02-29 21:33:01,494 [9456] DEBUG WriteOnlyServer-63291458 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 348)
2016-02-29 21:33:01,576 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:33:01,576 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:33:01,596 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:33:01,597 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:33:01,600 [8132] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:33:01,600 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:33:01,601 [7528] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:33:01,607 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:33:01,609 [10744] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 735)
2016-02-29 21:33:01,610 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:33:01,612 [11792] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1156)
2016-02-29 21:33:01,613 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:33:01,614 [7528] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:33:01,615 [15872] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:33:01,616 [10744] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:33:01,617 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:33:01,618 [11792] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:33:01,619 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:33:01,620 [7528] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 1047)
2016-02-29 21:33:01,621 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:33:01,622 [10744] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 687)
2016-02-29 21:33:01,623 [8132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:33:01,624 [11792] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 7063)
2016-02-29 21:33:01,625 [14632] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:33:01,626 [14632] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:33:01,641 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:33:01,641 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:33:17,526 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:33:17,535 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:33:17,535 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:33:17,535 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:33:17,535 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:33:17,592 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:33:17,592 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:33:17,592 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:33:17,619 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:33:17,621 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:33:17,664 [11416] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:33:17,668 [15320] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:33:17,735 [11812] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:33:17,753 [15196] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:33:17,760 [13384] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:33:17,761 [15196] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:33:17,764 [11812] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:33:17,766 [15320] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:33:17,768 [10388] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:33:17,769 [15196] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:33:17,772 [8444] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:33:17,772 [8488] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:33:17,775 [13384] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:33:17,775 [8488] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:33:17,778 [11812] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:33:17,779 [8488] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:33:17,781 [10388] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:33:17,782 [8488] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:33:17,796 [8444] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6867)
2016-02-29 21:33:17,799 [8488] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:33:17,806 [8488] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:33:17,881 [TestRunnerThread] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:33:17,994 [11812] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:33:18,001 [11812] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:33:18,001 [11812] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:33:18,003 [11812] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:33:18,003 [8444] DEBUG WriteOnlyServer-63291458 - insert into Supplier (ID, Name) values ('3fa77819-075a-4122-b41f-b38c1a7f2035', 'new');
2016-02-29 21:33:18,012 [8444] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:33:18,013 [13384] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:33:18,014 [15320] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:IOStockFormat)
2016-02-29 21:33:18,017 [8444] DEBUG WriteOnlyServer-63291458 - insert into Warehouse (ID, Name) values ('538a24a8-96bf-4c9b-828f-32022d9de0e8', 'new');
2016-02-29 21:33:18,027 [8444] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:33:18,027 [8444] DEBUG WriteOnlyServer-63291458 - insert into Employee (ID, Name) values ('23d12eb7-411a-40aa-a89b-a64e348d106c', 'new');
2016-02-29 21:33:18,031 [8444] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:33:18,045 [8444] DEBUG WriteOnlyServer-63291458 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('3e876816-e52f-489f-9afc-098801a4c610', '1', '2016-02-29 21:33:17.856', '0', '1', '', '61ee3ee5-5fe1-41c7-91c9-4c9765696272', '', '3fa77819-075a-4122-b41f-b38c1a7f2035', '', '538a24a8-96bf-4c9b-828f-32022d9de0e8', '23d12eb7-411a-40aa-a89b-a64e348d106c');
2016-02-29 21:33:18,049 [8444] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:33:18,050 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:33:18,050 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:33:18,062 [8444] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '3e876816-e52f-489f-9afc-098801a4c610'
2016-02-29 21:33:18,084 [15320] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:33:18,085 [15320] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: 3fa77819-075a-4122-b41f-b38c1a7f2035)
2016-02-29 21:33:33,876 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:33:33,884 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:33:33,884 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:33:33,884 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:33:33,885 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:33:33,941 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:33:33,942 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:33:33,942 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:33:33,968 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:33:33,970 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:33:34,014 [10908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:33:34,020 [8356] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:33:34,078 [10656] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:33:34,096 [8356] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:33:34,103 [15824] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:33:34,104 [10476] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:33:34,107 [11348] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:33:34,108 [7548] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:33:34,110 [7744] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:33:34,111 [10476] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:33:34,113 [10656] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:33:34,114 [10476] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:33:34,117 [15824] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:33:34,118 [7548] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:33:34,121 [11348] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:33:34,122 [8356] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:33:34,125 [7744] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:33:34,126 [8356] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:33:34,137 [10656] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6876)
2016-02-29 21:33:34,139 [10476] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:33:34,146 [10476] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:33:34,219 [TestRunnerThread] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:33:34,324 [11348] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:33:34,329 [11348] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:33:34,329 [11348] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:33:34,330 [11348] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:33:34,332 [10656] DEBUG WriteOnlyServer-63291458 - insert into Supplier (ID, Name) values ('2fd701c0-2e72-4b94-ae0b-d6fbeafc090a', 'new');
2016-02-29 21:33:34,341 [8356] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 21:33:34,341 [15824] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:33:34,342 [10656] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:33:34,347 [10656] DEBUG WriteOnlyServer-63291458 - insert into Warehouse (ID, Name) values ('351bbdb0-616c-497c-af07-23cb44c51727', 'new');
2016-02-29 21:33:34,351 [10656] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:33:34,351 [10656] DEBUG WriteOnlyServer-63291458 - insert into Employee (ID, Name) values ('d36feb80-d7db-41c4-92f9-df0f64510978', 'new');
2016-02-29 21:33:34,354 [10656] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:33:34,364 [10656] DEBUG WriteOnlyServer-63291458 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('fb9f3842-afc9-433a-8269-46304314e42b', '1', '2016-02-29 21:33:34.194', '0', '1', '', 'c24d7581-18f7-408e-ac03-2c6af553419d', '', '2fd701c0-2e72-4b94-ae0b-d6fbeafc090a', '', '351bbdb0-616c-497c-af07-23cb44c51727', 'd36feb80-d7db-41c4-92f9-df0f64510978');
2016-02-29 21:33:34,368 [10656] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:33:34,381 [10656] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = 'fb9f3842-afc9-433a-8269-46304314e42b'
2016-02-29 21:33:34,382 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:33:34,383 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:33:34,413 [8356] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:33:52,334 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:33:52,344 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:33:52,344 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:33:52,344 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:33:52,344 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:33:52,402 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:33:52,402 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:33:52,402 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:33:52,430 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - Listener (0.0.0.0:4000) was started
2016-02-29 21:33:52,432 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - Listener (0.0.0.0:4001) was started
2016-02-29 21:33:52,508 [15964] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:33:52,513 [9400] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:33:52,603 [1940] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:33:52,622 [15964] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:33:52,629 [15204] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:33:52,630 [13500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:33:52,633 [1940] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:33:52,634 [13500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:33:52,637 [9928] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:33:52,638 [12700] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:33:52,641 [1940] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:33:52,642 [15964] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:33:52,644 [9928] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:33:52,645 [15964] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:33:52,648 [1940] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:33:52,649 [12700] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:33:52,652 [9928] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:33:52,653 [15964] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:33:52,665 [1940] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6874)
2016-02-29 21:33:52,667 [15964] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:33:52,672 [15964] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:33:52,804 [TestRunnerThread] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:33:52,918 [9928] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:33:52,923 [9928] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:33:52,924 [9928] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:33:52,925 [9928] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:33:52,927 [15204] DEBUG WriteOnlyServer-59408853 - insert into Supplier (ID, Name) values ('9e473653-d25d-437c-99e5-783efc32d38e', 'new');
2016-02-29 21:33:52,930 [15204] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:33:52,936 [15204] DEBUG WriteOnlyServer-59408853 - insert into Warehouse (ID, Name) values ('65f507fc-221e-46c0-a44e-013dce3d4ac2', 'new');
2016-02-29 21:33:52,939 [15204] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:33:52,939 [15204] DEBUG WriteOnlyServer-59408853 - insert into Employee (ID, Name) values ('310f0f35-ba40-4f65-9d00-19af4a562c36', 'new');
2016-02-29 21:33:52,942 [1940] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:33:52,943 [13500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:IOStockFormat)
2016-02-29 21:33:52,943 [15204] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:33:53,004 [15204] DEBUG WriteOnlyServer-59408853 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('aca685fb-d875-4890-900a-da68f98b1bd3', '1', '2016-02-29 21:33:52.778', '0', '1', '', 'eba5af7f-4099-4dfc-b6b2-11586c8bc70b', '', '9e473653-d25d-437c-99e5-783efc32d38e', '', '65f507fc-221e-46c0-a44e-013dce3d4ac2', '310f0f35-ba40-4f65-9d00-19af4a562c36');
2016-02-29 21:33:53,008 [15204] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:33:53,021 [15204] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = 'aca685fb-d875-4890-900a-da68f98b1bd3'
2016-02-29 21:33:53,044 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:33:53,045 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:33:53,071 [12700] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:33:53,074 [12700] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: 9e473653-d25d-437c-99e5-783efc32d38e)
2016-02-29 21:34:44,306 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:34:44,316 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:34:44,316 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:34:44,316 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:34:44,316 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:34:44,375 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:34:44,375 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:34:44,375 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:34:44,405 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - Listener (0.0.0.0:4000) was started
2016-02-29 21:34:44,406 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - Listener (0.0.0.0:4001) was started
2016-02-29 21:34:44,477 [11792] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:34:44,483 [6912] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:34:44,573 [11960] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:34:44,592 [11792] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:34:44,599 [15464] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:34:44,600 [8448] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:34:44,604 [11960] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:34:44,606 [11792] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:34:44,609 [15464] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:34:44,610 [11792] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:34:44,614 [11960] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:34:44,615 [5092] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:34:44,618 [8492] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:34:44,619 [5092] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:34:44,623 [11960] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:34:44,624 [8448] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:34:44,628 [8492] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:34:44,629 [8448] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:34:44,643 [11960] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6875)
2016-02-29 21:34:44,645 [5092] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:34:44,651 [5092] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:34:51,122 [TestRunnerThread] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:34:51,235 [8492] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:34:51,240 [8492] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:34:51,240 [8492] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:34:51,242 [8492] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:34:51,242 [15464] DEBUG WriteOnlyServer-59408853 - insert into Supplier (ID, Name) values ('70fb381a-6c64-4e1e-8d8f-aa9a48bc30f2', 'new');
2016-02-29 21:34:51,252 [15464] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:34:51,256 [11960] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:34:51,257 [11792] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:IOStockFormat)
2016-02-29 21:34:51,258 [15464] DEBUG WriteOnlyServer-59408853 - insert into Warehouse (ID, Name) values ('f3d44dd0-99d8-4071-b4fe-09fe5f29dfb7', 'new');
2016-02-29 21:34:51,262 [15464] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:34:51,262 [15464] DEBUG WriteOnlyServer-59408853 - insert into Employee (ID, Name) values ('25f8700a-bb46-4cd1-bfda-f27b9d83510f', 'new');
2016-02-29 21:34:51,267 [15464] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:34:51,304 [15464] DEBUG WriteOnlyServer-59408853 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('1a073c83-efeb-488f-ae2f-52ab8fe6773c', '1', '2016-02-29 21:34:51.095', '0', '1', '', '68bc5718-10fe-4ac5-ae1e-5a4263ce9962', '', '70fb381a-6c64-4e1e-8d8f-aa9a48bc30f2', '', 'f3d44dd0-99d8-4071-b4fe-09fe5f29dfb7', '25f8700a-bb46-4cd1-bfda-f27b9d83510f');
2016-02-29 21:34:51,307 [15464] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:34:51,324 [15464] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '1a073c83-efeb-488f-ae2f-52ab8fe6773c'
2016-02-29 21:34:51,336 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:34:51,337 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:34:51,358 [5092] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:34:51,361 [5092] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: 70fb381a-6c64-4e1e-8d8f-aa9a48bc30f2)
2016-02-29 21:35:46,398 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:35:46,408 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:35:46,408 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:35:46,408 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:35:46,408 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:35:46,470 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:35:46,470 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:35:46,470 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:35:46,500 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - Listener (0.0.0.0:4000) was started
2016-02-29 21:35:46,501 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - Listener (0.0.0.0:4001) was started
2016-02-29 21:35:51,966 [15016] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:35:51,973 [8156] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:35:52,072 [10432] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:35:52,092 [15016] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:35:52,101 [10488] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:35:52,101 [12156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:35:52,105 [10432] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:35:52,105 [12156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:35:52,108 [10432] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:35:52,109 [15016] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:35:52,112 [9172] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:35:52,113 [15016] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:35:52,115 [10432] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:35:52,116 [5480] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:35:52,119 [10488] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:35:52,119 [12156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:35:52,122 [10432] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:35:52,123 [5480] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:35:52,135 [9172] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6864)
2016-02-29 21:35:52,137 [5480] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:35:55,667 [5480] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:35:57,572 [TestRunnerThread] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:35:57,684 [9172] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:35:57,689 [9172] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:35:57,690 [9172] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:35:57,691 [9172] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:35:57,691 [10488] DEBUG WriteOnlyServer-59408853 - insert into Supplier (ID, Name) values ('aee9eb4b-6a7f-485c-bb8c-f18042c0f8a7', 'new');
2016-02-29 21:35:57,700 [10488] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:35:57,710 [10488] DEBUG WriteOnlyServer-59408853 - insert into Warehouse (ID, Name) values ('e39dd926-d67f-4bbf-831b-13c0b911431d', 'new');
2016-02-29 21:35:57,714 [10432] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:35:57,714 [10488] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:35:57,715 [10488] DEBUG WriteOnlyServer-59408853 - insert into Employee (ID, Name) values ('5c3a4bf5-080b-4ca5-8a75-39dd7eb8c43a', 'new');
2016-02-29 21:35:57,716 [12156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:IOStockFormat)
2016-02-29 21:35:57,720 [10488] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:35:57,750 [10488] DEBUG WriteOnlyServer-59408853 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('13efcf10-0936-42da-a142-8d5d961f7392', '1', '2016-02-29 21:35:57.546', '0', '1', '', 'dec9ec89-4589-4468-a747-3f410acb644e', '', 'aee9eb4b-6a7f-485c-bb8c-f18042c0f8a7', '', 'e39dd926-d67f-4bbf-831b-13c0b911431d', '5c3a4bf5-080b-4ca5-8a75-39dd7eb8c43a');
2016-02-29 21:35:57,753 [10488] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:35:57,765 [10488] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '13efcf10-0936-42da-a142-8d5d961f7392'
2016-02-29 21:35:57,786 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:35:57,787 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:35:57,804 [15016] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:35:57,806 [15016] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: aee9eb4b-6a7f-485c-bb8c-f18042c0f8a7)
2016-02-29 21:36:40,179 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:36:40,189 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:36:40,189 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:36:40,189 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:36:40,189 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:36:40,246 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:36:40,246 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:36:40,246 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:36:40,276 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - Listener (0.0.0.0:4000) was started
2016-02-29 21:36:40,278 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - Listener (0.0.0.0:4001) was started
2016-02-29 21:36:42,436 [17060] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:36:43,068 [9880] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:36:43,169 [12520] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:36:43,190 [16932] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:36:43,197 [14544] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:36:43,199 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:36:43,202 [12520] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:36:43,204 [16932] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:36:43,208 [6748] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:36:43,209 [17060] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:36:43,212 [12520] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:36:43,213 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:36:43,216 [6748] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:36:43,217 [16932] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:36:43,220 [12520] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:36:43,221 [16932] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:36:43,224 [6748] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:36:43,224 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:36:43,237 [12520] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6872)
2016-02-29 21:36:43,240 [16932] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:36:44,307 [16932] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:36:44,435 [TestRunnerThread] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:36:44,541 [6748] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:36:44,549 [6748] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:36:44,549 [6748] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:36:44,552 [6748] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:36:44,552 [14544] DEBUG WriteOnlyServer-59408853 - insert into Supplier (ID, Name) values ('ae5c102e-c5e9-4d55-9d6d-616f8c3523e7', 'new');
2016-02-29 21:36:44,561 [14544] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:36:44,565 [12520] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:36:44,566 [17060] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:IOStockFormat)
2016-02-29 21:36:44,568 [14544] DEBUG WriteOnlyServer-59408853 - insert into Warehouse (ID, Name) values ('1273c4be-8980-4f49-9c85-d0657978550a', 'new');
2016-02-29 21:36:44,572 [14544] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:36:44,572 [14544] DEBUG WriteOnlyServer-59408853 - insert into Employee (ID, Name) values ('1d35bbb6-78cc-4044-90bc-71d4784e8835', 'new');
2016-02-29 21:36:44,576 [14544] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:36:44,605 [14544] DEBUG WriteOnlyServer-59408853 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('8640a2fb-0a58-4501-bd80-49fa5e50d7be', '1', '2016-02-29 21:36:44.404', '0', '1', '', 'daef6a8e-411c-4942-ba71-a910286d22bc', '', 'ae5c102e-c5e9-4d55-9d6d-616f8c3523e7', '', '1273c4be-8980-4f49-9c85-d0657978550a', '1d35bbb6-78cc-4044-90bc-71d4784e8835');
2016-02-29 21:36:44,608 [14544] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:36:54,133 [14544] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '8640a2fb-0a58-4501-bd80-49fa5e50d7be'
2016-02-29 21:36:54,156 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:36:54,156 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:36:54,172 [952] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:36:54,174 [952] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: ae5c102e-c5e9-4d55-9d6d-616f8c3523e7)
2016-02-29 21:38:08,354 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:38:08,363 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:38:08,363 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:38:08,363 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:38:08,363 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:38:08,419 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:38:08,419 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:38:08,419 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:38:08,446 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:38:08,447 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:38:08,491 [7164] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:38:08,495 [8408] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:38:08,559 [13688] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:38:08,576 [8408] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:38:08,583 [11300] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:38:08,584 [8408] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:38:08,586 [13688] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:38:08,587 [7408] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:38:08,590 [13940] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:38:08,591 [8408] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:38:08,593 [14260] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:38:08,594 [16876] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:38:08,597 [11300] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:38:08,598 [16876] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:38:08,600 [13688] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:38:08,601 [16876] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:38:08,604 [13940] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:38:08,604 [8408] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:38:08,615 [14260] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6875)
2016-02-29 21:38:08,616 [16876] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:38:08,621 [16876] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:38:08,691 [TestRunnerThread] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:38:08,795 [13688] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:38:08,800 [13688] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:38:08,800 [13688] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:38:08,802 [13688] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:38:08,803 [14260] DEBUG WriteOnlyServer-63291458 - insert into Supplier (ID, Name) values ('c07e111b-bd6d-4af6-8d35-f60e4527de05', 'new');
2016-02-29 21:38:08,811 [8408] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 21:38:08,811 [11300] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:38:08,815 [14260] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:38:08,821 [13688] DEBUG WriteOnlyServer-63291458 - insert into Warehouse (ID, Name) values ('926dd482-0eca-4b4d-84ce-9c6209508c0e', 'new');
2016-02-29 21:38:08,824 [13688] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:38:08,824 [13688] DEBUG WriteOnlyServer-63291458 - insert into Employee (ID, Name) values ('9b643191-fd6f-4dc2-99ee-78283e6cabfb', 'new');
2016-02-29 21:38:08,827 [13688] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:38:08,842 [13688] DEBUG WriteOnlyServer-63291458 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('1f0c1aad-aec8-406a-8d4d-e15f7466d182', '1', '2016-02-29 21:38:08.666', '0', '1', '', 'df2f13ed-9966-4b1a-a34f-6b649cae62ef', '', 'c07e111b-bd6d-4af6-8d35-f60e4527de05', '', '926dd482-0eca-4b4d-84ce-9c6209508c0e', '9b643191-fd6f-4dc2-99ee-78283e6cabfb');
2016-02-29 21:38:08,845 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:38:08,846 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:38:08,851 [13688] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:38:08,855 [13688] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '1f0c1aad-aec8-406a-8d4d-e15f7466d182'
2016-02-29 21:38:25,274 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:38:25,283 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:38:25,284 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:38:25,284 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:38:25,284 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:38:25,343 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:38:25,343 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:38:25,343 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:38:25,373 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - Listener (0.0.0.0:4000) was started
2016-02-29 21:38:25,375 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - Listener (0.0.0.0:4001) was started
2016-02-29 21:38:31,825 [9760] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:38:31,830 [17156] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:38:31,916 [17180] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:38:31,935 [9760] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:38:31,943 [12276] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:38:31,944 [6452] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:38:31,947 [17180] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:38:31,948 [6452] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:38:31,951 [9520] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:38:31,952 [6452] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:38:31,955 [17180] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:38:31,955 [9760] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:38:31,958 [9520] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:38:31,959 [16824] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:38:31,962 [12276] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:38:31,963 [6452] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:38:31,965 [17180] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:38:31,966 [6452] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:38:31,978 [9520] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6871)
2016-02-29 21:38:31,980 [9760] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:38:31,985 [9760] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:38:32,112 [TestRunnerThread] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:38:32,222 [9520] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:38:32,235 [9520] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:38:32,236 [9520] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:38:32,240 [12276] DEBUG WriteOnlyServer-59408853 - insert into Supplier (ID, Name) values ('c1427eb7-d6b0-4b6e-b0bd-20d9ca8dba02', 'new');
2016-02-29 21:38:32,240 [9520] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:38:32,252 [12276] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:38:32,257 [12276] DEBUG WriteOnlyServer-59408853 - insert into Warehouse (ID, Name) values ('136e740f-4ffc-46cb-b480-1e850539da5a', 'new');
2016-02-29 21:38:32,260 [17180] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:38:32,260 [12276] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:38:32,261 [12276] DEBUG WriteOnlyServer-59408853 - insert into Employee (ID, Name) values ('c634dcd7-6338-4fdd-80a9-7a9b73ae5953', 'new');
2016-02-29 21:38:32,262 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:IOStockFormat)
2016-02-29 21:38:32,264 [12276] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:38:32,305 [12276] DEBUG WriteOnlyServer-59408853 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('03b2ac25-254a-4f9e-9cde-5c0bcbfc36e6', '1', '2016-02-29 21:38:32.086', '0', '1', '', '8a15f9f2-35d5-483a-be6b-86feaf1c407c', '', 'c1427eb7-d6b0-4b6e-b0bd-20d9ca8dba02', '', '136e740f-4ffc-46cb-b480-1e850539da5a', 'c634dcd7-6338-4fdd-80a9-7a9b73ae5953');
2016-02-29 21:38:32,314 [12276] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:38:34,688 [12276] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '03b2ac25-254a-4f9e-9cde-5c0bcbfc36e6'
2016-02-29 21:38:34,704 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:38:34,704 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:38:34,724 [6452] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:38:34,725 [6452] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: c1427eb7-d6b0-4b6e-b0bd-20d9ca8dba02)
2016-02-29 21:38:59,153 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:38:59,167 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:38:59,167 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:38:59,167 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:38:59,167 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:38:59,230 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:38:59,230 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:38:59,230 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:38:59,258 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - Listener (0.0.0.0:4000) was started
2016-02-29 21:38:59,259 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - Listener (0.0.0.0:4001) was started
2016-02-29 21:38:59,331 [14188] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:38:59,335 [1040] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:38:59,425 [8432] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:38:59,445 [14188] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:38:59,454 [8880] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:38:59,455 [12660] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:38:59,458 [6764] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:38:59,459 [14188] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:38:59,462 [8432] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:38:59,463 [12660] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:38:59,466 [6764] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:38:59,467 [12660] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:38:59,470 [8432] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:38:59,471 [14188] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:38:59,474 [6764] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:38:59,475 [14188] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:38:59,478 [8432] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:38:59,479 [14188] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:38:59,491 [6764] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6878)
2016-02-29 21:38:59,493 [14188] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:38:59,498 [14188] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:38:59,633 [TestRunnerThread] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:38:59,746 [6764] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:38:59,752 [6764] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:38:59,752 [6764] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:38:59,754 [6764] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:38:59,755 [8880] DEBUG WriteOnlyServer-59408853 - insert into Supplier (ID, Name) values ('84127d7f-d9d6-4032-b223-7cea146a226c', 'new');
2016-02-29 21:38:59,764 [8880] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:38:59,765 [8432] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:38:59,765 [14188] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:IOStockFormat)
2016-02-29 21:38:59,769 [8880] DEBUG WriteOnlyServer-59408853 - insert into Warehouse (ID, Name) values ('6c7b3a73-cea4-4a18-8ceb-6a9e187ad4bf', 'new');
2016-02-29 21:38:59,772 [8880] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:38:59,773 [8880] DEBUG WriteOnlyServer-59408853 - insert into Employee (ID, Name) values ('005e2533-a53a-44d5-9350-42df551ef1b3', 'new');
2016-02-29 21:38:59,793 [8880] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:38:59,850 [8880] DEBUG WriteOnlyServer-59408853 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('1162b563-b62e-4ca1-8811-8f633f28acb1', '1', '2016-02-29 21:38:59.598', '0', '1', '', 'a1251e30-604b-41dc-a7fa-8efa308a904d', '', '84127d7f-d9d6-4032-b223-7cea146a226c', '', '6c7b3a73-cea4-4a18-8ceb-6a9e187ad4bf', '005e2533-a53a-44d5-9350-42df551ef1b3');
2016-02-29 21:38:59,854 [8880] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:38:59,871 [8880] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '1162b563-b62e-4ca1-8811-8f633f28acb1'
2016-02-29 21:38:59,875 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:38:59,875 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:38:59,904 [7992] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:38:59,906 [7992] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: 84127d7f-d9d6-4032-b223-7cea146a226c)
2016-02-29 21:39:43,233 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:39:43,242 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:39:43,242 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:39:43,242 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:39:43,242 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:39:43,300 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:39:43,300 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:39:43,300 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:39:43,331 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was started
2016-02-29 21:39:43,333 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was started
2016-02-29 21:39:43,379 [7148] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:39:43,385 [13956] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:39:43,444 [8144] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:39:43,469 [13956] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:39:43,478 [4904] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:39:43,479 [6312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:39:43,482 [8144] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:39:43,483 [15424] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:39:43,486 [10136] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:39:43,487 [13956] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:39:43,489 [9416] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:39:43,490 [6312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:39:43,492 [4904] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:39:43,493 [6312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:39:43,496 [8144] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:39:43,497 [13956] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:39:43,500 [10136] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:39:43,501 [6312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:39:43,512 [9416] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6873)
2016-02-29 21:39:43,515 [15424] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:39:43,522 [15424] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:39:43,593 [TestRunnerThread] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:39:43,698 [8144] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:39:43,703 [8144] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:39:43,704 [8144] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:39:43,705 [8144] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:39:43,707 [9416] DEBUG WriteOnlyServer-63291458 - insert into Supplier (ID, Name) values ('dedfb1dd-523d-483a-890a-fa5bdb5f2250', 'new');
2016-02-29 21:39:43,714 [6312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 21:39:43,715 [4904] DEBUG ReadOnlyServer-22779505 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:39:43,716 [9416] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:39:43,720 [9416] DEBUG WriteOnlyServer-63291458 - insert into Warehouse (ID, Name) values ('468773eb-16f2-4583-8c22-e198d5cbc12e', 'new');
2016-02-29 21:39:43,722 [9416] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:39:43,722 [9416] DEBUG WriteOnlyServer-63291458 - insert into Employee (ID, Name) values ('d9e34e01-be06-4d1f-8e6a-84c7812327c9', 'new');
2016-02-29 21:39:43,725 [9416] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:39:43,736 [9416] DEBUG WriteOnlyServer-63291458 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('04ccf1d4-b381-4ee2-81e8-2895437aa53b', '1', '2016-02-29 21:39:43.568', '0', '1', '', '133f4426-2c69-4515-b91e-c954528a1e78', '', 'dedfb1dd-523d-483a-890a-fa5bdb5f2250', '', '468773eb-16f2-4583-8c22-e198d5cbc12e', 'd9e34e01-be06-4d1f-8e6a-84c7812327c9');
2016-02-29 21:39:43,750 [9416] DEBUG WriteOnlyServer-63291458 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:39:43,756 [TestRunnerThread] DEBUG ReadOnlyServer-22779505 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:39:43,756 [TestRunnerThread] DEBUG WriteOnlyServer-63291458 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:39:43,756 [9416] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '04ccf1d4-b381-4ee2-81e8-2895437aa53b'
2016-02-29 21:40:05,628 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:40:05,638 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:40:05,638 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:40:05,638 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:40:05,639 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:40:05,698 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:40:05,698 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:40:05,698 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:40:05,727 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - Listener (0.0.0.0:4000) was started
2016-02-29 21:40:05,729 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - Listener (0.0.0.0:4001) was started
2016-02-29 21:40:05,799 [7992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:40:05,804 [3168] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:40:05,914 [10592] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:40:05,937 [12660] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:40:05,948 [7528] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:40:05,949 [7992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:40:05,954 [5804] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:40:05,954 [7992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:40:05,959 [10592] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:40:05,960 [7992] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:40:05,963 [5804] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:40:05,965 [12660] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:40:05,968 [10592] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:40:05,970 [12660] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:40:05,973 [5804] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:40:05,975 [17196] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:40:05,978 [10592] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:40:05,980 [12660] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:40:05,993 [5804] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6871)
2016-02-29 21:40:05,997 [17196] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:40:06,006 [17196] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:40:06,122 [TestRunnerThread] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:40:06,234 [5804] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:40:06,239 [5804] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:40:06,240 [5804] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:40:06,241 [5804] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:40:06,243 [7528] DEBUG WriteOnlyServer-59408853 - insert into Supplier (ID, Name) values ('4d3cd173-efe4-4f11-a819-110beee55742', 'new');
2016-02-29 21:40:06,252 [7528] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:40:06,252 [10592] DEBUG ReadOnlyServer-34921712 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:40:06,253 [12660] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:IOStockFormat)
2016-02-29 21:40:06,256 [7528] DEBUG WriteOnlyServer-59408853 - insert into Warehouse (ID, Name) values ('d51f90cc-db1d-4f6c-8c6d-57e27b4d4882', 'new');
2016-02-29 21:40:06,260 [7528] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:40:06,260 [7528] DEBUG WriteOnlyServer-59408853 - insert into Employee (ID, Name) values ('c5c6a13c-fd77-448b-ae98-646817c6647d', 'new');
2016-02-29 21:40:06,264 [7528] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:40:06,327 [7528] DEBUG WriteOnlyServer-59408853 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('ab3811c6-3da6-4253-a3e0-92a9b816a9d4', '1', '2016-02-29 21:40:06.094', '0', '1', '', '0d8e9930-5994-4fd9-a710-fd26998af5eb', '', '4d3cd173-efe4-4f11-a819-110beee55742', '', 'd51f90cc-db1d-4f6c-8c6d-57e27b4d4882', 'c5c6a13c-fd77-448b-ae98-646817c6647d');
2016-02-29 21:40:06,337 [7528] DEBUG WriteOnlyServer-59408853 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:40:06,353 [7528] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = 'ab3811c6-3da6-4253-a3e0-92a9b816a9d4'
2016-02-29 21:40:06,358 [TestRunnerThread] DEBUG ReadOnlyServer-34921712 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:40:06,358 [TestRunnerThread] DEBUG WriteOnlyServer-59408853 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:40:06,379 [17196] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:40:06,382 [17196] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: 4d3cd173-efe4-4f11-a819-110beee55742)
2016-02-29 21:43:08,810 [4320] DEBUG ReadOnlyServer-34382671 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:43:08,819 [4320] DEBUG ReadOnlyServer-34382671 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:43:08,819 [4320] DEBUG ReadOnlyServer-34382671 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:43:08,819 [4320] DEBUG ReadOnlyServer-34382671 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:43:08,819 [4320] DEBUG ReadOnlyServer-34382671 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:43:08,887 [4320] DEBUG WriteOnlyServer-58648462 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:43:08,887 [4320] DEBUG WriteOnlyServer-58648462 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:43:08,887 [4320] DEBUG WriteOnlyServer-58648462 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:43:08,908 [4320] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:43:08,909 [4320] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:43:08,970 [17248] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:43:08,976 [14372] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:43:09,045 [10864] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:43:09,068 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:43:09,075 [14320] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:43:09,076 [17140] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:43:09,079 [14440] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:43:09,080 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:43:09,082 [5176] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:43:09,083 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:43:09,086 [10864] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:43:09,086 [17140] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:43:09,089 [14320] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:43:09,090 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:43:09,093 [14440] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:43:09,093 [17140] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:43:09,097 [5176] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:43:09,099 [17140] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:43:09,114 [10864] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6868)
2016-02-29 21:43:09,117 [17140] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:43:09,124 [17140] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:43:09,166 [4320] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:43:09,167 [4320] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:43:09,187 [4320] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:43:09,187 [4320] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:43:09,190 [17140] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:43:09,190 [17140] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:43:09,191 [14440] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:43:09,194 [17140] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:43:09,195 [5176] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:43:09,196 [17176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:43:09,197 [10864] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:43:09,198 [17176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:43:09,199 [14320] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:43:09,200 [17176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:43:09,201 [14440] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:43:09,203 [17176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:43:09,203 [5176] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:43:09,204 [17176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:43:09,205 [10864] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:43:09,206 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:43:09,207 [14320] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:43:09,208 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:43:09,210 [14440] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6868)
2016-02-29 21:43:09,212 [17140] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:43:09,213 [17140] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:43:09,232 [4320] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:43:09,242 [5176] DEBUG WriteOnlyServer-58648462 - insert into Maker (ID, Name) values ('4bf1d865-c241-40a9-95c3-1a8b6d9c301a', 'soime');
2016-02-29 21:43:09,251 [5176] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 184)
2016-02-29 21:43:09,366 [14372] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:43:09,369 [14372] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 4bf1d865-c241-40a9-95c3-1a8b6d9c301a)
2016-02-29 21:43:09,744 [4320] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:43:09,744 [4320] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:43:09,745 [4320] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:43:09,746 [4320] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:43:09,759 [14372] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:43:09,759 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:43:09,760 [5176] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:43:09,762 [17176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:43:09,762 [14440] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:43:09,763 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:43:09,764 [10864] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1214)
2016-02-29 21:43:09,765 [17176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:43:09,765 [14320] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:43:09,766 [17140] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:43:09,767 [5176] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:43:09,767 [17140] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:43:09,768 [14440] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:43:09,769 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:43:09,770 [10864] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:43:09,770 [17140] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:43:09,771 [14320] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:43:09,772 [17176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:43:09,773 [5176] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6868)
2016-02-29 21:43:09,775 [17140] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:43:09,775 [17140] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:43:09,777 [4320] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 21:43:09,779 [14440] DEBUG WriteOnlyServer-58648462 - delete from Maker where ID = '4bf1d865-c241-40a9-95c3-1a8b6d9c301a';
2016-02-29 21:43:09,789 [14440] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 21:43:09,790 [14440] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 21:43:09,790 [14440] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = '4bf1d865-c241-40a9-95c3-1a8b6d9c301a';
2016-02-29 21:43:09,792 [14440] DEBUG WriteOnlyServer-58648462 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 21:43:09,792 [17176] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: DELT, TYPE: Maker)
2016-02-29 21:43:09,796 [17176] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 4bf1d865-c241-40a9-95c3-1a8b6d9c301a)
2016-02-29 21:43:09,890 [4320] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:43:09,891 [4320] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:43:09,895 [4320] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:43:09,900 [4320] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:43:09,904 [17176] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:43:09,905 [17140] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:43:09,906 [5176] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:43:09,907 [17140] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:43:09,908 [10864] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:43:09,909 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:43:09,910 [14440] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:43:09,911 [17176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:43:09,912 [14320] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:43:09,912 [17140] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:43:09,913 [5176] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:43:09,913 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:43:09,915 [10864] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:43:09,915 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:43:09,916 [5176] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:43:09,917 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:43:09,918 [10864] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:43:09,919 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:43:09,921 [14320] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6868)
2016-02-29 21:43:09,923 [17176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:43:09,923 [17176] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:43:10,128 [4320] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 21:43:10,128 [14440] DEBUG WriteOnlyServer-58648462 - insert into Product (ID, Name) values ('fb89a856-b817-43fe-9c9c-fea055dfd609', '새로운 제품');
2016-02-29 21:43:10,137 [14440] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 197)
2016-02-29 21:43:10,137 [14372] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Product)
2016-02-29 21:43:10,137 [14372] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Product, ID: fb89a856-b817-43fe-9c9c-fea055dfd609)
2016-02-29 21:43:10,236 [4320] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:43:10,236 [4320] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:43:10,241 [4320] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:43:10,241 [4320] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:43:10,245 [14372] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:43:10,245 [17176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:43:10,246 [10864] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:43:10,248 [17176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:43:10,249 [5176] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:43:10,250 [17176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:43:10,253 [5176] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:43:10,254 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:43:10,255 [5176] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:43:10,256 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:43:10,258 [14320] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:43:10,259 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:43:10,260 [14440] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:43:10,260 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:43:10,261 [10864] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:43:10,262 [17176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:43:10,263 [5176] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:43:10,265 [17176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:43:10,266 [14320] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6868)
2016-02-29 21:43:10,267 [17176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:43:10,267 [17176] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:43:10,270 [4320] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:43:10,271 [14440] DEBUG WriteOnlyServer-58648462 - insert into Maker (ID, Name) values ('d59766ef-0d71-475b-a8be-ce4cbacf3e9e', 'some maker');
2016-02-29 21:43:10,271 [4320] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Measure)
2016-02-29 21:43:10,272 [4320] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:InventoryFormat)
2016-02-29 21:43:10,272 [14440] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 189)
2016-02-29 21:43:10,277 [14372] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:43:10,277 [14372] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: d59766ef-0d71-475b-a8be-ce4cbacf3e9e)
2016-02-29 21:43:10,277 [14440] DEBUG WriteOnlyServer-58648462 - insert into Measure (ID, Name) values ('f8ce3bce-6543-4838-b899-ede10cf91349', 'some measure');
2016-02-29 21:43:10,279 [14440] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Measure, SIZE: 193)
2016-02-29 21:43:10,280 [14372] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Measure)
2016-02-29 21:43:10,280 [14372] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: f8ce3bce-6543-4838-b899-ede10cf91349)
2016-02-29 21:43:10,280 [14440] DEBUG WriteOnlyServer-58648462 - insert into InventoryFormat (ID, Specification, Quantity, Memo, ProductID, MakerID, MeasureID) values ('8f8184d3-9316-4bc5-b3be-3024da58430a', 'some specification', '0', 'spec', '069ea0c4-9844-4308-b6e3-494447b720a1', 'd59766ef-0d71-475b-a8be-ce4cbacf3e9e', 'f8ce3bce-6543-4838-b899-ede10cf91349');
2016-02-29 21:43:10,281 [14440] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 394)
2016-02-29 21:43:10,281 [14372] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: InventoryFormat)
2016-02-29 21:43:10,281 [14372] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 8f8184d3-9316-4bc5-b3be-3024da58430a)
2016-02-29 21:43:10,377 [4320] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:43:10,377 [4320] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:43:10,378 [4320] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:43:10,378 [4320] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:43:10,381 [14372] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:43:10,381 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:43:10,382 [14440] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:43:10,383 [17176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:43:10,384 [14320] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:43:10,384 [17140] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:43:10,385 [5176] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1219)
2016-02-29 21:43:10,386 [17140] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:43:10,387 [10864] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:43:10,388 [17140] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:43:10,388 [14440] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:43:10,389 [17176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:43:10,389 [14320] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:43:10,390 [17140] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:43:10,390 [5176] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:43:10,391 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:43:10,392 [10864] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:43:10,393 [17176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:43:10,395 [14440] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 7129)
2016-02-29 21:43:10,397 [14372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:43:10,398 [14372] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:43:10,425 [4320] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:43:10,530 [5176] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:43:10,530 [14440] DEBUG WriteOnlyServer-58648462 - insert into Supplier (ID, Name) values ('523bba27-41e3-4fbb-8faa-405cfc1cbe7e', 'new');
2016-02-29 21:43:10,531 [5176] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:43:10,531 [5176] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:43:10,533 [5176] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:43:10,539 [14440] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:43:10,539 [14372] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:43:10,539 [14372] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: 523bba27-41e3-4fbb-8faa-405cfc1cbe7e)
2016-02-29 21:43:10,539 [14440] DEBUG WriteOnlyServer-58648462 - insert into Warehouse (ID, Name) values ('1c8222e3-73a6-4263-ae40-bf9c1fa443f4', 'new');
2016-02-29 21:43:10,542 [14440] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:43:10,542 [14372] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Warehouse)
2016-02-29 21:43:10,542 [14372] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Warehouse, ID: 1c8222e3-73a6-4263-ae40-bf9c1fa443f4)
2016-02-29 21:43:10,542 [14440] DEBUG WriteOnlyServer-58648462 - insert into Employee (ID, Name) values ('0d5a0c98-8622-430e-a146-4422527d4f3a', 'new');
2016-02-29 21:43:10,544 [17176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 21:43:10,544 [10864] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:43:10,544 [14440] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:43:10,545 [14372] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Employee)
2016-02-29 21:43:10,545 [14372] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: 0d5a0c98-8622-430e-a146-4422527d4f3a)
2016-02-29 21:43:10,555 [14440] DEBUG WriteOnlyServer-58648462 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('e6420999-1568-4421-88db-9046732b0bf4', '1', '2016-02-29 21:43:10.401', '0', '1', '', '3bd3bd4a-7f8f-4f3b-aaca-48e154d54fd2', '', '523bba27-41e3-4fbb-8faa-405cfc1cbe7e', '', '1c8222e3-73a6-4263-ae40-bf9c1fa443f4', '0d5a0c98-8622-430e-a146-4422527d4f3a');
2016-02-29 21:43:10,558 [14440] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:43:10,559 [14372] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: IOStockFormat)
2016-02-29 21:43:10,559 [14372] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: e6420999-1568-4421-88db-9046732b0bf4)
2016-02-29 21:43:10,564 [14440] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = 'e6420999-1568-4421-88db-9046732b0bf4'
2016-02-29 21:43:10,589 [4320] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:43:10,590 [4320] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:45:22,251 [12140] DEBUG ReadOnlyServer-34382671 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:45:22,264 [12140] DEBUG ReadOnlyServer-34382671 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:45:22,264 [12140] DEBUG ReadOnlyServer-34382671 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:45:22,265 [12140] DEBUG ReadOnlyServer-34382671 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:45:22,265 [12140] DEBUG ReadOnlyServer-34382671 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:45:22,326 [12140] DEBUG WriteOnlyServer-58648462 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:45:22,326 [12140] DEBUG WriteOnlyServer-58648462 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:45:22,326 [12140] DEBUG WriteOnlyServer-58648462 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:45:22,345 [12140] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:45:22,346 [12140] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:45:22,390 [14544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:45:22,396 [9560] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:45:22,454 [8364] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:45:22,470 [5904] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:45:22,480 [17184] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:45:22,481 [15740] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:45:22,485 [4896] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:45:22,486 [9560] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:45:22,491 [944] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:45:22,492 [5904] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:45:22,497 [8364] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:45:22,498 [9560] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:45:22,502 [17184] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:45:22,502 [15740] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:45:22,507 [4896] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:45:22,508 [9560] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:45:22,512 [944] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:45:22,514 [9560] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:45:22,535 [8364] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6877)
2016-02-29 21:45:22,538 [15740] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:45:22,547 [15740] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:45:22,625 [12140] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:45:22,629 [12140] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:45:22,634 [12140] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:45:22,634 [12140] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:45:22,636 [12140] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:45:22,637 [4896] DEBUG WriteOnlyServer-58648462 - insert into Supplier (ID, Name) values ('28a311e7-46fd-4a32-8d71-725bc5aadc2f', 'new');
2016-02-29 21:45:22,645 [15740] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 21:45:22,645 [944] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:45:22,646 [4896] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:45:22,650 [4896] DEBUG WriteOnlyServer-58648462 - insert into Warehouse (ID, Name) values ('52f12c3d-df4d-4f5b-b256-c91d87db16c8', 'new');
2016-02-29 21:45:22,652 [4896] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:45:22,653 [4896] DEBUG WriteOnlyServer-58648462 - insert into Employee (ID, Name) values ('8ac834d1-ee53-4a75-b6b3-33f727bcd9fb', 'new');
2016-02-29 21:45:22,656 [4896] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:45:22,665 [4896] DEBUG WriteOnlyServer-58648462 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('29fe3e7e-5a29-475b-9a5b-ad5497a89b70', '1', '2016-02-29 21:45:22.599', '0', '1', '', '97a565fd-3367-4737-85aa-496c591fb4a8', '', '28a311e7-46fd-4a32-8d71-725bc5aadc2f', '', '52f12c3d-df4d-4f5b-b256-c91d87db16c8', '8ac834d1-ee53-4a75-b6b3-33f727bcd9fb');
2016-02-29 21:45:22,668 [4896] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:45:22,674 [4896] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '29fe3e7e-5a29-475b-9a5b-ad5497a89b70'
2016-02-29 21:45:22,699 [12140] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:45:22,700 [12140] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:45:22,705 [15740] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:45:22,707 [15740] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: 28a311e7-46fd-4a32-8d71-725bc5aadc2f)
2016-02-29 21:45:43,146 [10416] DEBUG ReadOnlyServer-34382671 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:45:43,154 [10416] DEBUG ReadOnlyServer-34382671 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:45:43,155 [10416] DEBUG ReadOnlyServer-34382671 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:45:43,155 [10416] DEBUG ReadOnlyServer-34382671 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:45:43,155 [10416] DEBUG ReadOnlyServer-34382671 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:45:43,214 [10416] DEBUG WriteOnlyServer-58648462 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:45:43,214 [10416] DEBUG WriteOnlyServer-58648462 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:45:43,214 [10416] DEBUG WriteOnlyServer-58648462 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:45:43,232 [10416] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:45:43,234 [10416] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:45:43,276 [8996] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:45:43,281 [13192] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:45:43,336 [11724] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:45:43,353 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:45:43,359 [7164] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:45:43,360 [9168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:45:43,362 [11724] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:45:43,363 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:45:43,365 [16204] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:45:43,365 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:45:43,367 [9304] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:45:43,368 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:45:43,370 [7164] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:45:43,370 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:45:43,372 [11724] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:45:43,373 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:45:43,375 [16204] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:45:43,375 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:45:43,385 [9304] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6878)
2016-02-29 21:45:43,387 [9880] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:45:43,391 [9880] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:45:43,420 [10416] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:45:43,421 [10416] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:45:43,433 [10416] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:45:43,433 [10416] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:45:43,436 [9880] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:45:43,436 [9880] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:45:43,437 [16204] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:45:43,439 [9168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:45:43,439 [9304] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:45:43,440 [9880] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:45:43,440 [11724] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:45:43,441 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:45:43,442 [7164] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:45:43,442 [9880] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:45:43,443 [16204] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:45:43,443 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:45:43,444 [9304] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:45:43,444 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:45:43,445 [11724] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:45:43,445 [9880] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:45:43,446 [7164] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:45:43,447 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:45:43,448 [16204] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6878)
2016-02-29 21:45:43,449 [9168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:45:43,449 [9168] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:45:43,462 [10416] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:45:43,469 [9304] DEBUG WriteOnlyServer-58648462 - insert into Maker (ID, Name) values ('fc927bcf-4936-42bc-a71e-966b9d537f92', 'soime');
2016-02-29 21:45:43,475 [9304] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 184)
2016-02-29 21:45:43,556 [13192] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:45:43,558 [13192] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: fc927bcf-4936-42bc-a71e-966b9d537f92)
2016-02-29 21:45:43,973 [10416] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:45:43,973 [10416] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:45:43,974 [10416] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:45:43,974 [10416] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:45:43,986 [9168] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:45:43,986 [9168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:45:43,987 [9304] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:45:43,989 [9168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:45:43,989 [16204] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:45:43,990 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:45:43,991 [11724] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1214)
2016-02-29 21:45:43,991 [9880] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:45:43,992 [7164] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:45:43,993 [9880] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:45:43,993 [9304] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:45:43,994 [9880] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:45:43,995 [16204] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:45:43,995 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:45:43,996 [11724] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:45:43,997 [9880] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:45:43,997 [7164] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:45:43,998 [9168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:45:43,999 [9304] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6878)
2016-02-29 21:45:43,999 [9168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:45:43,999 [9168] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:45:44,002 [10416] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 21:45:44,004 [16204] DEBUG WriteOnlyServer-58648462 - delete from Maker where ID = '3c2e5e6d-eda5-4180-bfa7-4ac528c26a1f';
2016-02-29 21:45:44,012 [16204] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 21:45:44,012 [16204] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 21:45:44,012 [16204] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = '3c2e5e6d-eda5-4180-bfa7-4ac528c26a1f';
2016-02-29 21:45:44,015 [16204] DEBUG WriteOnlyServer-58648462 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 21:45:44,016 [9880] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: DELT, TYPE: Maker)
2016-02-29 21:45:44,018 [9880] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 3c2e5e6d-eda5-4180-bfa7-4ac528c26a1f)
2016-02-29 21:45:44,020 [9880] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:45:44,022 [11724] DEBUG WriteOnlyServer-58648462 - update InventoryFormat set MakerID = '' where ID = 'dbd0ad49-69a3-4dbe-97e7-f126f0ef0112';
2016-02-29 21:45:44,024 [11724] DEBUG WriteOnlyServer-58648462 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 348)
2016-02-29 21:45:44,108 [10416] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:45:44,108 [10416] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:45:44,111 [10416] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:45:44,116 [10416] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:45:44,120 [13192] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:45:44,120 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:45:44,121 [16204] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:45:44,123 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:45:44,123 [11724] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:45:44,124 [9880] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:45:44,125 [9304] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1152)
2016-02-29 21:45:44,125 [9880] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:45:44,126 [7164] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:45:44,126 [9168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:45:44,127 [16204] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:45:44,128 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:45:44,128 [11724] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:45:44,129 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:45:44,130 [9304] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:45:44,130 [9880] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:45:44,131 [7164] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:45:44,132 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:45:44,133 [16204] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6842)
2016-02-29 21:45:44,135 [9168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:45:44,136 [9168] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:45:44,287 [10416] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 21:45:44,287 [7164] DEBUG WriteOnlyServer-58648462 - insert into Product (ID, Name) values ('c41736f0-9bb3-4cb5-bab8-7fe7b359ae86', '새로운 제품');
2016-02-29 21:45:44,291 [7164] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 197)
2016-02-29 21:45:44,291 [9168] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Product)
2016-02-29 21:45:44,291 [9168] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Product, ID: c41736f0-9bb3-4cb5-bab8-7fe7b359ae86)
2016-02-29 21:45:44,393 [10416] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:45:44,393 [10416] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:45:44,397 [10416] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:45:44,397 [10416] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:45:44,399 [13192] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:45:44,400 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:45:44,400 [16204] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:45:44,403 [9168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:45:44,403 [9304] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:45:44,404 [9168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:45:44,405 [11724] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1152)
2016-02-29 21:45:44,405 [9168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:45:44,406 [7164] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:45:44,407 [9168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:45:44,408 [16204] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:45:44,408 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:45:44,409 [9304] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:45:44,409 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:45:44,410 [11724] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:45:44,411 [9880] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:45:44,411 [7164] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:45:44,412 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:45:44,413 [16204] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6842)
2016-02-29 21:45:44,414 [9168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:45:44,414 [9168] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:45:44,417 [10416] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:45:44,417 [9304] DEBUG WriteOnlyServer-58648462 - insert into Maker (ID, Name) values ('f57f074d-c8a2-4847-a9a0-97b586dc6a12', 'some maker');
2016-02-29 21:45:44,418 [10416] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Measure)
2016-02-29 21:45:44,418 [10416] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:InventoryFormat)
2016-02-29 21:45:44,425 [9304] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 189)
2016-02-29 21:45:44,425 [13192] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:45:44,425 [13192] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: f57f074d-c8a2-4847-a9a0-97b586dc6a12)
2016-02-29 21:45:44,425 [11724] DEBUG WriteOnlyServer-58648462 - insert into Measure (ID, Name) values ('fcc8707e-7ce8-49d0-886d-790bbfd9bb1d', 'some measure');
2016-02-29 21:45:44,431 [11724] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Measure, SIZE: 193)
2016-02-29 21:45:44,432 [13192] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Measure)
2016-02-29 21:45:44,432 [11724] DEBUG WriteOnlyServer-58648462 - insert into InventoryFormat (ID, Specification, Quantity, Memo, ProductID, MakerID, MeasureID) values ('0b86e392-8b78-46c2-8231-aef2dd484366', 'some specification', '0', 'spec', 'e09b2410-8d33-4334-b4ba-a44c3ff98ad8', 'f57f074d-c8a2-4847-a9a0-97b586dc6a12', 'fcc8707e-7ce8-49d0-886d-790bbfd9bb1d');
2016-02-29 21:45:44,432 [13192] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: fcc8707e-7ce8-49d0-886d-790bbfd9bb1d)
2016-02-29 21:45:44,434 [11724] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 394)
2016-02-29 21:45:44,434 [13192] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: InventoryFormat)
2016-02-29 21:45:44,434 [13192] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 0b86e392-8b78-46c2-8231-aef2dd484366)
2016-02-29 21:45:44,534 [10416] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:45:44,534 [10416] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:45:44,536 [10416] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:45:44,536 [10416] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:45:44,538 [13192] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:45:44,538 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:45:44,539 [11724] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:45:44,541 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:45:44,542 [16204] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:45:44,542 [9168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:45:44,543 [7164] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1218)
2016-02-29 21:45:44,544 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:45:44,544 [9304] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:45:44,545 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:45:44,546 [11724] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:45:44,546 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:45:44,547 [16204] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:45:44,549 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:45:44,550 [7164] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:45:44,552 [9168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:45:44,553 [9304] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:45:44,553 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:45:44,554 [11724] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 7103)
2016-02-29 21:45:44,555 [13192] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:45:44,556 [13192] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:45:44,587 [10416] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:45:44,590 [10416] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:45:44,590 [7164] DEBUG WriteOnlyServer-58648462 - insert into Supplier (ID, Name) values ('fe446185-49a0-4e5d-bfce-ec345205b423', 'new');
2016-02-29 21:45:44,590 [10416] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:45:44,591 [10416] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:45:44,593 [10416] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:45:44,599 [7164] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:45:44,600 [9168] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:45:44,600 [9168] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: fe446185-49a0-4e5d-bfce-ec345205b423)
2016-02-29 21:45:44,600 [7164] DEBUG WriteOnlyServer-58648462 - insert into Warehouse (ID, Name) values ('a016a4ab-a2bb-4ff5-a2b9-c1f0056091de', 'new');
2016-02-29 21:45:44,603 [7164] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:45:44,603 [9880] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Warehouse)
2016-02-29 21:45:44,603 [7164] DEBUG WriteOnlyServer-58648462 - insert into Employee (ID, Name) values ('2236417b-7c7e-472d-bebe-1c14afc7c330', 'new');
2016-02-29 21:45:44,603 [9880] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Warehouse, ID: a016a4ab-a2bb-4ff5-a2b9-c1f0056091de)
2016-02-29 21:45:44,606 [7164] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:45:44,606 [9880] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Employee)
2016-02-29 21:45:44,606 [9880] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: 2236417b-7c7e-472d-bebe-1c14afc7c330)
2016-02-29 21:45:44,607 [8996] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 21:45:44,607 [9304] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:45:44,613 [7164] DEBUG WriteOnlyServer-58648462 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('32173c0b-42fa-4e0d-9ce9-a75ee4259b73', '1', '2016-02-29 21:45:44.559', '0', '1', '', '00e63593-f2ac-4201-8a01-a7527a854e2f', '', 'fe446185-49a0-4e5d-bfce-ec345205b423', '', 'a016a4ab-a2bb-4ff5-a2b9-c1f0056091de', '2236417b-7c7e-472d-bebe-1c14afc7c330');
2016-02-29 21:45:44,617 [7164] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:45:44,617 [8996] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: IOStockFormat)
2016-02-29 21:45:44,617 [8996] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 32173c0b-42fa-4e0d-9ce9-a75ee4259b73)
2016-02-29 21:45:44,623 [7164] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '32173c0b-42fa-4e0d-9ce9-a75ee4259b73'
2016-02-29 21:45:44,646 [10416] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:45:44,646 [10416] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:46:40,569 [656] DEBUG ReadOnlyServer-34382671 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:46:40,578 [656] DEBUG ReadOnlyServer-34382671 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:46:40,578 [656] DEBUG ReadOnlyServer-34382671 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:46:40,578 [656] DEBUG ReadOnlyServer-34382671 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:46:40,578 [656] DEBUG ReadOnlyServer-34382671 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:46:40,646 [656] DEBUG WriteOnlyServer-58648462 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:46:40,646 [656] DEBUG WriteOnlyServer-58648462 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:46:40,646 [656] DEBUG WriteOnlyServer-58648462 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:46:40,667 [656] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:46:40,669 [656] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:46:40,746 [7808] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:46:40,751 [9316] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:46:40,844 [14388] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:46:40,862 [14208] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:46:40,869 [14184] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:46:40,871 [14208] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:46:40,874 [14388] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:46:40,875 [14208] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:46:40,878 [14184] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:46:40,878 [7808] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:46:40,881 [14388] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:46:40,882 [7316] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:46:40,885 [14184] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:46:40,886 [14208] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:46:40,889 [14388] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:46:40,890 [14208] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:46:40,893 [14184] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:46:40,893 [7808] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:46:40,908 [14388] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6874)
2016-02-29 21:46:40,910 [14208] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:46:40,917 [14208] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:46:41,057 [656] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:46:41,062 [656] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:46:41,070 [656] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:46:41,071 [656] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:46:41,074 [656] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:46:41,074 [14184] DEBUG WriteOnlyServer-58648462 - insert into Supplier (ID, Name) values ('c268a405-5bd2-4373-8a96-ba9279149b46', 'new');
2016-02-29 21:46:41,076 [14184] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:46:41,081 [14184] DEBUG WriteOnlyServer-58648462 - insert into Warehouse (ID, Name) values ('9a8d99d3-9e6c-49fe-ae58-219fcc5bbe4b', 'new');
2016-02-29 21:46:41,086 [14184] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:46:41,086 [14184] DEBUG WriteOnlyServer-58648462 - insert into Employee (ID, Name) values ('e3e6fea6-3d9a-4502-958f-cd7b60ac5384', 'new');
2016-02-29 21:46:41,089 [14184] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:46:41,094 [3320] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:46:41,094 [9316] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:IOStockFormat)
2016-02-29 21:46:41,129 [14184] DEBUG WriteOnlyServer-58648462 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('b3fce4b6-a655-4aea-8ba7-62e5cdc4f1cd', '1', '2016-02-29 21:46:41.026', '0', '1', '', '415bae05-5711-466d-b05e-3d078ddce5da', '', 'c268a405-5bd2-4373-8a96-ba9279149b46', '', '9a8d99d3-9e6c-49fe-ae58-219fcc5bbe4b', 'e3e6fea6-3d9a-4502-958f-cd7b60ac5384');
2016-02-29 21:46:41,138 [14184] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:46:41,151 [14184] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = 'b3fce4b6-a655-4aea-8ba7-62e5cdc4f1cd'
2016-02-29 21:46:41,187 [7808] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:46:41,191 [7808] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: c268a405-5bd2-4373-8a96-ba9279149b46)
2016-02-29 21:46:41,209 [656] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:46:41,212 [656] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:47:37,103 [5864] DEBUG ReadOnlyServer-34382671 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 21:47:37,114 [5864] DEBUG ReadOnlyServer-34382671 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 21:47:37,114 [5864] DEBUG ReadOnlyServer-34382671 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 21:47:37,114 [5864] DEBUG ReadOnlyServer-34382671 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 21:47:37,114 [5864] DEBUG ReadOnlyServer-34382671 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 21:47:37,177 [5864] DEBUG WriteOnlyServer-58648462 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 21:47:37,177 [5864] DEBUG WriteOnlyServer-58648462 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 21:47:37,177 [5864] DEBUG WriteOnlyServer-58648462 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 21:47:37,197 [5864] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:47:37,198 [5864] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:47:37,247 [13668] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:47:37,252 [10592] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:47:37,315 [15632] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:47:37,334 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:47:37,341 [13872] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:47:37,342 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:47:37,344 [11060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:47:37,345 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:47:37,347 [3060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:47:37,348 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:47:37,350 [15632] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:47:37,351 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:47:37,353 [13872] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:47:37,354 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:47:37,356 [11060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:47:37,357 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:47:37,359 [3060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:47:37,359 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:47:37,372 [15632] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6870)
2016-02-29 21:47:37,374 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:47:37,378 [952] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:47:37,411 [5864] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:47:37,411 [5864] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:47:37,426 [5864] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:47:37,426 [5864] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:47:37,428 [952] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:47:37,429 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:47:37,430 [3060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:47:37,431 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:47:37,432 [11060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:47:37,433 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:47:37,434 [13872] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 21:47:37,435 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:47:37,436 [15632] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:47:37,437 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:47:37,438 [3060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:47:37,439 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:47:37,439 [11060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:47:37,440 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:47:37,441 [13872] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:47:37,441 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:47:37,442 [15632] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:47:37,443 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:47:37,444 [3060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6870)
2016-02-29 21:47:37,445 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:47:37,445 [952] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:47:37,467 [5864] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:47:37,475 [11060] DEBUG WriteOnlyServer-58648462 - insert into Maker (ID, Name) values ('16c24c78-9ba3-4ea1-94db-58d7c86cff0b', 'soime');
2016-02-29 21:47:37,483 [11060] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 184)
2016-02-29 21:47:37,576 [10592] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:47:37,577 [10592] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 16c24c78-9ba3-4ea1-94db-58d7c86cff0b)
2016-02-29 21:47:37,978 [5864] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:47:37,978 [5864] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:47:37,979 [5864] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:47:37,980 [5864] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:47:37,994 [952] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:47:37,994 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:47:37,995 [11060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:47:37,997 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:47:37,998 [13872] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:47:37,999 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:47:38,000 [15632] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1214)
2016-02-29 21:47:38,000 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:47:38,001 [3060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:47:38,002 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:47:38,003 [11060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:47:38,004 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:47:38,004 [13872] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:47:38,005 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:47:38,006 [15632] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:47:38,007 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:47:38,007 [3060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:47:38,008 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:47:38,008 [11060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6870)
2016-02-29 21:47:38,010 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:47:38,011 [10592] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:47:38,014 [5864] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 21:47:38,016 [13872] DEBUG WriteOnlyServer-58648462 - delete from Maker where ID = '1a260a8c-0597-4385-af66-7a9129a22f03';
2016-02-29 21:47:38,025 [13872] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 21:47:38,026 [13872] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 21:47:38,026 [13872] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = '1a260a8c-0597-4385-af66-7a9129a22f03';
2016-02-29 21:47:38,029 [13872] DEBUG WriteOnlyServer-58648462 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 21:47:38,029 [952] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: DELT, TYPE: Maker)
2016-02-29 21:47:38,032 [952] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 1a260a8c-0597-4385-af66-7a9129a22f03)
2016-02-29 21:47:38,034 [952] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:47:38,034 [952] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:47:38,034 [952] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:47:38,034 [952] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:47:38,034 [952] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 21:47:38,037 [15632] DEBUG WriteOnlyServer-58648462 - update InventoryFormat set MakerID = '' where ID = '3e0bb832-9c47-40a2-8986-53d06daacba8';
2016-02-29 21:47:38,039 [15632] DEBUG WriteOnlyServer-58648462 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 349)
2016-02-29 21:47:38,040 [15632] DEBUG WriteOnlyServer-58648462 - update InventoryFormat set MakerID = '' where ID = '4d42472c-3cf3-4b61-acdf-707b0b64a375';
2016-02-29 21:47:38,042 [15632] DEBUG WriteOnlyServer-58648462 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 348)
2016-02-29 21:47:38,043 [15632] DEBUG WriteOnlyServer-58648462 - update InventoryFormat set MakerID = '' where ID = '95ef26cf-81ab-47fe-a98a-fb09b36008d5';
2016-02-29 21:47:38,045 [15632] DEBUG WriteOnlyServer-58648462 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 351)
2016-02-29 21:47:38,045 [15632] DEBUG WriteOnlyServer-58648462 - update InventoryFormat set MakerID = '' where ID = 'ad6058df-0fa7-4d31-810a-4b63e80348eb';
2016-02-29 21:47:38,047 [15632] DEBUG WriteOnlyServer-58648462 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 350)
2016-02-29 21:47:38,048 [15632] DEBUG WriteOnlyServer-58648462 - update InventoryFormat set MakerID = '' where ID = 'bb5edc03-9411-454e-8aae-d46ac3cb9b0b';
2016-02-29 21:47:38,050 [15632] DEBUG WriteOnlyServer-58648462 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 346)
2016-02-29 21:47:38,128 [5864] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:47:38,129 [5864] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:47:38,133 [5864] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:47:38,139 [5864] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:47:38,142 [3588] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:47:38,142 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:47:38,143 [11060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:47:38,144 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:47:38,145 [13872] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:47:38,146 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:47:38,147 [15632] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1146)
2016-02-29 21:47:38,148 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:47:38,149 [3060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:47:38,149 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:47:38,150 [15632] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 21:47:38,151 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:47:38,152 [3060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:47:38,153 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:47:38,153 [13872] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:47:38,154 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:47:38,154 [11060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:47:38,155 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:47:38,156 [15632] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6690)
2016-02-29 21:47:38,157 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:47:38,157 [3588] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:47:38,332 [5864] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 21:47:38,333 [3060] DEBUG WriteOnlyServer-58648462 - insert into Product (ID, Name) values ('9d9fa0a4-1be2-40cd-8031-52523da494ac', '새로운 제품');
2016-02-29 21:47:38,341 [3060] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 197)
2016-02-29 21:47:38,342 [3588] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Product)
2016-02-29 21:47:38,342 [3588] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Product, ID: 9d9fa0a4-1be2-40cd-8031-52523da494ac)
2016-02-29 21:47:38,440 [5864] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:47:38,440 [5864] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:47:38,445 [5864] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:47:38,445 [5864] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:47:38,448 [3588] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:47:38,449 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:47:38,449 [15632] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:47:38,451 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:47:38,452 [13872] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:47:38,452 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:47:38,453 [3060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1146)
2016-02-29 21:47:38,454 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:47:38,454 [11060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 21:47:38,455 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:47:38,456 [15632] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:47:38,456 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:47:38,457 [13872] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:47:38,457 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:47:38,458 [3060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:47:38,459 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:47:38,459 [11060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:47:38,460 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:47:38,461 [15632] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6690)
2016-02-29 21:47:38,462 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:47:38,463 [10592] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:47:38,466 [5864] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 21:47:38,466 [13872] DEBUG WriteOnlyServer-58648462 - insert into Maker (ID, Name) values ('ed6a6e90-df5b-4983-9b63-47969da76c38', 'some maker');
2016-02-29 21:47:38,466 [5864] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Measure)
2016-02-29 21:47:38,467 [5864] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:InventoryFormat)
2016-02-29 21:47:38,474 [13872] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 189)
2016-02-29 21:47:38,474 [10592] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 21:47:38,474 [10592] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: ed6a6e90-df5b-4983-9b63-47969da76c38)
2016-02-29 21:47:38,474 [13872] DEBUG WriteOnlyServer-58648462 - insert into Measure (ID, Name) values ('0ad46811-b23e-40ad-9860-0c88dc45ff9b', 'some measure');
2016-02-29 21:47:38,480 [13872] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Measure, SIZE: 193)
2016-02-29 21:47:38,480 [10592] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Measure)
2016-02-29 21:47:38,480 [10592] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: 0ad46811-b23e-40ad-9860-0c88dc45ff9b)
2016-02-29 21:47:38,480 [13872] DEBUG WriteOnlyServer-58648462 - insert into InventoryFormat (ID, Specification, Quantity, Memo, ProductID, MakerID, MeasureID) values ('211ee0ae-afa4-463e-895a-ee8bd746496a', 'some specification', '0', 'spec', '1da1ff00-b68c-40e7-af26-adba789b7f4b', 'ed6a6e90-df5b-4983-9b63-47969da76c38', '0ad46811-b23e-40ad-9860-0c88dc45ff9b');
2016-02-29 21:47:38,483 [13872] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 394)
2016-02-29 21:47:38,483 [10592] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: InventoryFormat)
2016-02-29 21:47:38,483 [10592] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 211ee0ae-afa4-463e-895a-ee8bd746496a)
2016-02-29 21:47:38,584 [5864] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:47:38,584 [5864] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 21:47:38,586 [5864] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 21:47:38,586 [5864] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 21:47:38,589 [10592] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 21:47:38,589 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 21:47:38,590 [3060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 21:47:38,593 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 21:47:38,593 [13872] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 21:47:38,594 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 21:47:38,595 [11060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1212)
2016-02-29 21:47:38,596 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 21:47:38,597 [15632] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 21:47:38,598 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 21:47:38,598 [3060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 21:47:38,600 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 21:47:38,600 [13872] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 21:47:38,601 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 21:47:38,602 [11060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 21:47:38,603 [10592] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 21:47:38,603 [15632] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 21:47:38,604 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 21:47:38,605 [3060] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6951)
2016-02-29 21:47:38,607 [3588] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 21:47:38,608 [3588] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 21:47:38,640 [5864] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 21:47:38,644 [5864] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 21:47:38,644 [11060] DEBUG WriteOnlyServer-58648462 - insert into Supplier (ID, Name) values ('32ee6542-891f-4395-b3fc-bf0659aedb44', 'new');
2016-02-29 21:47:38,644 [5864] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 21:47:38,645 [5864] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 21:47:38,647 [5864] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 21:47:38,653 [11060] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 21:47:38,653 [10592] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 21:47:38,654 [10592] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: 32ee6542-891f-4395-b3fc-bf0659aedb44)
2016-02-29 21:47:38,654 [11060] DEBUG WriteOnlyServer-58648462 - insert into Warehouse (ID, Name) values ('645be150-c981-4620-9015-c6c8dccd25c8', 'new');
2016-02-29 21:47:38,656 [11060] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 21:47:38,657 [952] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Warehouse)
2016-02-29 21:47:38,657 [11060] DEBUG WriteOnlyServer-58648462 - insert into Employee (ID, Name) values ('359de7e4-a9d0-4bd1-9cf0-fa046454b30d', 'new');
2016-02-29 21:47:38,657 [952] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Warehouse, ID: 645be150-c981-4620-9015-c6c8dccd25c8)
2016-02-29 21:47:38,660 [11060] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 21:47:38,660 [952] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Employee)
2016-02-29 21:47:38,660 [952] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: 359de7e4-a9d0-4bd1-9cf0-fa046454b30d)
2016-02-29 21:47:38,661 [952] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 21:47:38,661 [13872] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 21:47:38,668 [11060] DEBUG WriteOnlyServer-58648462 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('d85a840d-703d-43db-98ef-563e90dd8ab2', '1', '2016-02-29 21:47:38.612', '0', '1', '', 'bffdfa00-0bbd-48f8-ae84-ea31e2c40cc4', '', '32ee6542-891f-4395-b3fc-bf0659aedb44', '', '645be150-c981-4620-9015-c6c8dccd25c8', '359de7e4-a9d0-4bd1-9cf0-fa046454b30d');
2016-02-29 21:47:38,672 [11060] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 21:47:38,672 [952] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: IOStockFormat)
2016-02-29 21:47:38,672 [952] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: d85a840d-703d-43db-98ef-563e90dd8ab2)
2016-02-29 21:47:38,678 [11060] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = 'd85a840d-703d-43db-98ef-563e90dd8ab2'
2016-02-29 21:47:38,701 [5864] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 21:47:38,702 [5864] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 22:12:02,790 [11532] DEBUG ReadOnlyServer-8836559 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 22:12:02,799 [11532] DEBUG ReadOnlyServer-8836559 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 22:12:02,799 [11532] DEBUG ReadOnlyServer-8836559 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 22:12:02,799 [11532] DEBUG ReadOnlyServer-8836559 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 22:12:02,799 [11532] DEBUG ReadOnlyServer-8836559 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 22:12:02,859 [11532] DEBUG WriteOnlyServer-62792180 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 22:12:02,859 [11532] DEBUG WriteOnlyServer-62792180 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 22:12:02,860 [11532] DEBUG WriteOnlyServer-62792180 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 22:12:02,879 [11532] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 22:12:02,880 [11532] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 22:12:02,926 [9512] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:02,931 [17156] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:02,991 [16188] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 22:12:03,007 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 22:12:03,013 [13864] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 22:12:03,014 [13500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 22:12:03,016 [7404] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 22:12:03,017 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 22:12:03,019 [16188] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 22:12:03,020 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 22:12:03,022 [3924] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 22:12:03,022 [13500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 22:12:03,026 [15084] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 22:12:03,026 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 22:12:03,028 [232] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 22:12:03,029 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 22:12:03,031 [13864] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 22:12:03,031 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 22:12:03,045 [7404] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6870)
2016-02-29 22:12:03,046 [13500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 22:12:03,051 [13500] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 22:12:03,083 [11532] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 22:12:03,083 [11532] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 22:12:03,087 [11532] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 22:12:03,088 [11532] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 22:12:03,090 [13500] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:03,090 [13500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:03,091 [7404] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 22:12:03,092 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 22:12:03,093 [15084] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 22:12:03,094 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 22:12:03,094 [13864] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 22:12:03,095 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 22:12:03,096 [3924] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 22:12:03,096 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 22:12:03,097 [232] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 22:12:03,098 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 22:12:03,098 [16188] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 22:12:03,099 [13500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 22:12:03,099 [7404] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 22:12:03,100 [13500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 22:12:03,100 [15084] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 22:12:03,101 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 22:12:03,102 [13864] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6870)
2016-02-29 22:12:03,103 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 22:12:03,104 [10324] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 22:12:03,117 [11532] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 22:12:03,124 [3924] DEBUG WriteOnlyServer-62792180 - insert into Maker (ID, Name) values ('3f632807-46a9-4501-a405-7b05de2835a5', 'soime');
2016-02-29 22:12:03,134 [3924] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 184)
2016-02-29 22:12:03,214 [17156] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 22:12:03,216 [17156] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 3f632807-46a9-4501-a405-7b05de2835a5)
2016-02-29 22:12:03,631 [11532] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 22:12:03,631 [11532] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 22:12:03,632 [11532] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 22:12:03,632 [11532] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 22:12:03,646 [10324] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:03,646 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:03,647 [232] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 22:12:03,648 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 22:12:03,649 [3924] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 22:12:03,650 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 22:12:03,651 [13864] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1214)
2016-02-29 22:12:03,651 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 22:12:03,652 [16188] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 22:12:03,653 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 22:12:03,654 [15084] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 22:12:03,654 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 22:12:03,655 [7404] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 22:12:03,655 [13500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 22:12:03,656 [232] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 22:12:03,657 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 22:12:03,658 [3924] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 22:12:03,658 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 22:12:03,659 [13864] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6870)
2016-02-29 22:12:03,660 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 22:12:03,660 [17156] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 22:12:03,663 [11532] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 22:12:03,664 [16188] DEBUG WriteOnlyServer-62792180 - delete from Maker where ID = '6863085e-da62-442d-bea0-ac6abd8b7ad9';
2016-02-29 22:12:03,673 [16188] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 22:12:03,674 [16188] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 22:12:03,674 [16188] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = '6863085e-da62-442d-bea0-ac6abd8b7ad9';
2016-02-29 22:12:03,677 [16188] DEBUG WriteOnlyServer-62792180 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 22:12:03,677 [10324] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: DELT, TYPE: Maker)
2016-02-29 22:12:03,680 [10324] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 6863085e-da62-442d-bea0-ac6abd8b7ad9)
2016-02-29 22:12:03,681 [10324] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 22:12:03,681 [10324] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 22:12:03,682 [10324] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 22:12:03,682 [10324] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 22:12:03,682 [10324] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 22:12:03,684 [15084] DEBUG WriteOnlyServer-62792180 - update InventoryFormat set MakerID = '' where ID = '3c004e48-7e64-4efb-83ae-502856d89143';
2016-02-29 22:12:03,685 [15084] DEBUG WriteOnlyServer-62792180 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 348)
2016-02-29 22:12:03,686 [10324] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: UPDT, TYPE: InventoryFormat)
2016-02-29 22:12:03,686 [15084] DEBUG WriteOnlyServer-62792180 - update InventoryFormat set MakerID = '' where ID = '5be32cee-23a2-4980-a380-0ae40cf6775a';
2016-02-29 22:12:03,687 [10324] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 3c004e48-7e64-4efb-83ae-502856d89143)
2016-02-29 22:12:03,687 [15084] DEBUG WriteOnlyServer-62792180 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 348)
2016-02-29 22:12:03,688 [15084] DEBUG WriteOnlyServer-62792180 - update InventoryFormat set MakerID = '' where ID = '5e42d245-1000-4d0b-bf13-1ef18b849d93';
2016-02-29 22:12:03,688 [17156] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: UPDT, TYPE: InventoryFormat)
2016-02-29 22:12:03,688 [17156] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 5be32cee-23a2-4980-a380-0ae40cf6775a)
2016-02-29 22:12:03,689 [15084] DEBUG WriteOnlyServer-62792180 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 345)
2016-02-29 22:12:03,689 [17156] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: UPDT, TYPE: InventoryFormat)
2016-02-29 22:12:03,689 [17156] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 5e42d245-1000-4d0b-bf13-1ef18b849d93)
2016-02-29 22:12:03,690 [15084] DEBUG WriteOnlyServer-62792180 - update InventoryFormat set MakerID = '' where ID = '65ada885-0fc5-48a9-9043-35e9579118c4';
2016-02-29 22:12:03,691 [15084] DEBUG WriteOnlyServer-62792180 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 349)
2016-02-29 22:12:03,691 [17156] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: UPDT, TYPE: InventoryFormat)
2016-02-29 22:12:03,691 [17156] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 65ada885-0fc5-48a9-9043-35e9579118c4)
2016-02-29 22:12:03,691 [15084] DEBUG WriteOnlyServer-62792180 - update InventoryFormat set MakerID = '' where ID = '6ed27c09-65aa-47f4-a3e5-d1e298340cf6';
2016-02-29 22:12:03,692 [15084] DEBUG WriteOnlyServer-62792180 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 349)
2016-02-29 22:12:03,692 [17156] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: UPDT, TYPE: InventoryFormat)
2016-02-29 22:12:03,692 [17156] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 6ed27c09-65aa-47f4-a3e5-d1e298340cf6)
2016-02-29 22:12:03,767 [11532] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 22:12:03,767 [11532] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 22:12:03,771 [11532] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 22:12:03,776 [11532] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 22:12:03,783 [10324] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:03,783 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:03,784 [7404] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 22:12:03,786 [13500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 22:12:03,787 [3924] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 22:12:03,788 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 22:12:03,788 [16188] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1150)
2016-02-29 22:12:03,789 [13500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 22:12:03,790 [13864] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 22:12:03,790 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 22:12:03,791 [232] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 22:12:03,791 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 22:12:03,792 [15084] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 22:12:03,792 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 22:12:03,793 [7404] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 22:12:03,794 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 22:12:03,794 [3924] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 22:12:03,795 [13500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 22:12:03,796 [16188] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6690)
2016-02-29 22:12:03,797 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 22:12:03,797 [17156] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 22:12:03,943 [11532] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 22:12:03,943 [13864] DEBUG WriteOnlyServer-62792180 - insert into Product (ID, Name) values ('23dda4b6-05db-426f-9767-08fa9fdc5715', '새로운 제품');
2016-02-29 22:12:03,952 [13864] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 197)
2016-02-29 22:12:03,952 [10324] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Product)
2016-02-29 22:12:03,952 [10324] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Product, ID: 23dda4b6-05db-426f-9767-08fa9fdc5715)
2016-02-29 22:12:04,048 [11532] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 22:12:04,048 [11532] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 22:12:04,052 [11532] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 22:12:04,052 [11532] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 22:12:04,055 [17156] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:04,055 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:04,056 [232] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 22:12:04,058 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 22:12:04,058 [15084] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 22:12:04,059 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 22:12:04,060 [13864] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1150)
2016-02-29 22:12:04,061 [13500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 22:12:04,061 [16188] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 22:12:04,062 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 22:12:04,063 [3924] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 22:12:04,063 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 22:12:04,064 [7404] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 22:12:04,064 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 22:12:04,065 [232] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 22:12:04,065 [13500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 22:12:04,066 [15084] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 22:12:04,067 [13500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 22:12:04,068 [13864] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6690)
2016-02-29 22:12:04,069 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 22:12:04,070 [17156] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 22:12:04,072 [11532] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 22:12:04,073 [16188] DEBUG WriteOnlyServer-62792180 - insert into Maker (ID, Name) values ('b3652506-0021-4a34-b204-bca476f38ca9', 'some maker');
2016-02-29 22:12:04,073 [11532] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Measure)
2016-02-29 22:12:04,074 [11532] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:InventoryFormat)
2016-02-29 22:12:04,080 [16188] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 189)
2016-02-29 22:12:04,080 [13500] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 22:12:04,080 [16188] DEBUG WriteOnlyServer-62792180 - insert into Measure (ID, Name) values ('ef921ed2-134a-42fd-80a9-5cd024ca0d70', 'some measure');
2016-02-29 22:12:04,080 [13500] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: b3652506-0021-4a34-b204-bca476f38ca9)
2016-02-29 22:12:04,085 [16188] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Measure, SIZE: 193)
2016-02-29 22:12:04,085 [13500] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Measure)
2016-02-29 22:12:04,085 [13500] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: ef921ed2-134a-42fd-80a9-5cd024ca0d70)
2016-02-29 22:12:04,085 [16188] DEBUG WriteOnlyServer-62792180 - insert into InventoryFormat (ID, Specification, Quantity, Memo, ProductID, MakerID, MeasureID) values ('a1a390d3-d3f9-4fa6-9fd1-0487bb0eba9a', 'some specification', '0', 'spec', '39d9f0dc-0dac-49f2-9617-0e3498b14abd', 'b3652506-0021-4a34-b204-bca476f38ca9', 'ef921ed2-134a-42fd-80a9-5cd024ca0d70');
2016-02-29 22:12:04,087 [16188] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 394)
2016-02-29 22:12:04,087 [13500] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: InventoryFormat)
2016-02-29 22:12:04,087 [13500] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: a1a390d3-d3f9-4fa6-9fd1-0487bb0eba9a)
2016-02-29 22:12:04,192 [11532] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 22:12:04,192 [11532] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 22:12:04,192 [11532] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 22:12:04,192 [11532] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 22:12:04,195 [13500] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:04,195 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:04,196 [7404] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 22:12:04,198 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 22:12:04,199 [16188] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 22:12:04,199 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 22:12:04,200 [13864] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1216)
2016-02-29 22:12:04,200 [13500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 22:12:04,201 [3924] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 430)
2016-02-29 22:12:04,202 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 22:12:04,202 [232] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 22:12:04,203 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 22:12:04,204 [15084] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 22:12:04,205 [13500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 22:12:04,205 [7404] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 22:12:04,206 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 22:12:04,207 [16188] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 22:12:04,208 [13500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 22:12:04,209 [13864] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6951)
2016-02-29 22:12:04,210 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 22:12:04,211 [17156] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 22:12:04,235 [11532] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:12:04,239 [11532] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 22:12:04,239 [232] DEBUG WriteOnlyServer-62792180 - insert into Supplier (ID, Name) values ('ed969e6c-712c-4379-a5d2-080c1a5f6ad3', 'new');
2016-02-29 22:12:04,239 [11532] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 22:12:04,240 [11532] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 22:12:04,242 [11532] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 22:12:04,248 [232] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 22:12:04,248 [17156] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 22:12:04,248 [232] DEBUG WriteOnlyServer-62792180 - insert into Warehouse (ID, Name) values ('114f5dc7-8589-4935-a480-5cddb8cf7f0f', 'new');
2016-02-29 22:12:04,248 [17156] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: ed969e6c-712c-4379-a5d2-080c1a5f6ad3)
2016-02-29 22:12:04,251 [232] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 22:12:04,251 [13500] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 22:12:04,251 [17156] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Warehouse)
2016-02-29 22:12:04,251 [232] DEBUG WriteOnlyServer-62792180 - insert into Employee (ID, Name) values ('7d96231c-58d5-4315-a8c4-2926f06d5411', 'new');
2016-02-29 22:12:04,251 [17156] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Warehouse, ID: 114f5dc7-8589-4935-a480-5cddb8cf7f0f)
2016-02-29 22:12:04,251 [13864] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 22:12:04,259 [232] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 22:12:04,260 [13500] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Employee)
2016-02-29 22:12:04,260 [13500] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: 7d96231c-58d5-4315-a8c4-2926f06d5411)
2016-02-29 22:12:04,266 [232] DEBUG WriteOnlyServer-62792180 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('df1ac3ae-687f-4894-bf9a-2649163c3d45', '1', '2016-02-29 22:12:04.214', '0', '1', '', '1680cf13-2719-428f-953e-2b989b609323', '', 'ed969e6c-712c-4379-a5d2-080c1a5f6ad3', '', '114f5dc7-8589-4935-a480-5cddb8cf7f0f', '7d96231c-58d5-4315-a8c4-2926f06d5411');
2016-02-29 22:12:04,269 [232] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 22:12:04,269 [13500] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: IOStockFormat)
2016-02-29 22:12:04,269 [13500] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: df1ac3ae-687f-4894-bf9a-2649163c3d45)
2016-02-29 22:12:04,275 [232] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = 'df1ac3ae-687f-4894-bf9a-2649163c3d45'
2016-02-29 22:12:04,282 [11532] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 22:12:04,283 [11532] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 22:12:16,757 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 22:12:16,766 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 22:12:16,766 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 22:12:16,766 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 22:12:16,766 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 22:12:16,828 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 22:12:16,828 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 22:12:16,828 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 22:12:16,852 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - Listener (127.0.0.1:4000) was started
2016-02-29 22:12:16,854 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - Listener (127.0.0.1:4001) was started
2016-02-29 22:12:16,891 [16444] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:16,895 [10324] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:16,918 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 22:12:16,919 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 22:12:16,922 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - Listener (127.0.0.1:4000) was started
2016-02-29 22:12:16,922 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - Listener (127.0.0.1:4001) was started
2016-02-29 22:12:16,925 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 22:12:16,925 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 22:12:16,937 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - Listener (127.0.0.1:4000) was started
2016-02-29 22:12:16,938 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - Listener (127.0.0.1:4001) was started
2016-02-29 22:12:16,942 [17156] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:16,942 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:17,009 [2888] DEBUG ReadOnlyServer-21870138 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 22:12:17,027 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 22:12:17,032 [10324] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Product)
2016-02-29 22:12:17,040 [12872] DEBUG WriteOnlyServer-66843585 - delete from Product where ID = '7f181ff7-1182-431d-a459-7a5aab468a03';
2016-02-29 22:12:17,051 [13864] DEBUG ReadOnlyServer-21870138 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Product, BYTE SIZE: 128)
2016-02-29 22:12:17,052 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Product)
2016-02-29 22:12:17,057 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 22:12:17,057 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 22:12:17,061 [12872] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 22:12:17,061 [12872] DEBUG R54IN0.Server.DeleteCommand - KillInventoryFormat
2016-02-29 22:12:17,061 [12872] DEBUG R54IN0.Server.DeleteCommand - delete from IOStockFormat where InventoryID in (select ID from InventoryFormat where ProductID = '7f181ff7-1182-431d-a459-7a5aab468a03');
2016-02-29 22:12:17,062 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - Listener (127.0.0.1:4000) was started
2016-02-29 22:12:17,066 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - Listener (127.0.0.1:4001) was started
2016-02-29 22:12:17,069 [12872] DEBUG R54IN0.Server.DeleteCommand - delete from InventoryFormat where ProductID = '7f181ff7-1182-431d-a459-7a5aab468a03';
2016-02-29 22:12:17,081 [12872] DEBUG WriteOnlyServer-66843585 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Product, SIZE: 164)
2016-02-29 22:12:17,082 [17156] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:17,082 [9512] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:17,095 [7404] DEBUG ReadOnlyServer-21870138 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 22:12:17,096 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 22:12:17,097 [17156] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Employee)
2016-02-29 22:12:17,097 [2888] DEBUG WriteOnlyServer-66843585 - delete from Employee where ID = 'ca78c0d3-0838-4a7a-b511-9f81151e38aa';
2016-02-29 22:12:17,107 [2888] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 22:12:17,108 [2888] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 22:12:17,108 [3924] DEBUG ReadOnlyServer-21870138 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Employee, BYTE SIZE: 129)
2016-02-29 22:12:17,108 [2888] DEBUG R54IN0.Server.DeleteCommand - update IOStockFormat set EmployeeID = '' where EmployeeID = 'ca78c0d3-0838-4a7a-b511-9f81151e38aa';
2016-02-29 22:12:17,109 [9512] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Employee)
2016-02-29 22:12:17,112 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 22:12:17,112 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 22:12:17,115 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - Listener (127.0.0.1:4000) was started
2016-02-29 22:12:17,115 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - Listener (127.0.0.1:4001) was started
2016-02-29 22:12:17,118 [2888] DEBUG WriteOnlyServer-66843585 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Employee, SIZE: 165)
2016-02-29 22:12:17,120 [9512] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:17,121 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:17,141 [15084] DEBUG ReadOnlyServer-21870138 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 22:12:17,144 [9512] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 22:12:17,145 [9512] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 22:12:17,145 [7404] DEBUG WriteOnlyServer-66843585 - delete from Maker where ID = '80e1c257-b78b-4d81-a183-a112d68c4586';
2016-02-29 22:12:17,155 [7404] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 22:12:17,155 [7404] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 22:12:17,155 [7404] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = '80e1c257-b78b-4d81-a183-a112d68c4586';
2016-02-29 22:12:17,155 [7404] DEBUG WriteOnlyServer-66843585 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 22:12:17,156 [16188] DEBUG ReadOnlyServer-21870138 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Maker, BYTE SIZE: 126)
2016-02-29 22:12:17,157 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Maker)
2016-02-29 22:12:17,160 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 22:12:17,160 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 22:12:17,162 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - Listener (127.0.0.1:4000) was started
2016-02-29 22:12:17,162 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - Listener (127.0.0.1:4001) was started
2016-02-29 22:12:17,166 [17156] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:17,166 [9512] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:17,187 [232] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 22:12:17,189 [232] DEBUG WriteOnlyServer-66843585 - insert into Product (ID, Name) values ('cdc059ab-7a47-441f-b84f-462dc3d24ea3', 'new');
2016-02-29 22:12:17,197 [232] DEBUG WriteOnlyServer-66843585 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 184)
2016-02-29 22:12:17,198 [3924] DEBUG ReadOnlyServer-21870138 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Product, BYTE SIZE: 186)
2016-02-29 22:12:17,200 [9512] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Product)
2016-02-29 22:12:17,207 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 22:12:17,207 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 22:12:17,209 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - Listener (127.0.0.1:4000) was started
2016-02-29 22:12:17,209 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - Listener (127.0.0.1:4001) was started
2016-02-29 22:12:17,212 [9512] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:17,212 [9512] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:17,235 [232] DEBUG ReadOnlyServer-21870138 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 870)
2016-02-29 22:12:17,236 [9512] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 22:12:17,248 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 22:12:17,248 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 22:12:17,250 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - Listener (127.0.0.1:4000) was started
2016-02-29 22:12:17,250 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - Listener (127.0.0.1:4001) was started
2016-02-29 22:12:17,254 [9512] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:17,254 [9512] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:17,265 [16188] DEBUG ReadOnlyServer-21870138 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 870)
2016-02-29 22:12:17,269 [10324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 22:12:17,270 [15084] DEBUG ReadOnlyServer-21870138 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Product, BYTE SIZE: 192)
2016-02-29 22:12:17,271 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Product)
2016-02-29 22:12:17,276 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 22:12:17,276 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 22:12:17,298 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - Listener (127.0.0.1:4000) was started
2016-02-29 22:12:17,299 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - Listener (127.0.0.1:4001) was started
2016-02-29 22:12:17,310 [17156] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:17,310 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:17,327 [2888] DEBUG ReadOnlyServer-21870138 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6376)
2016-02-29 22:12:17,328 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 22:12:17,330 [12872] DEBUG ReadOnlyServer-21870138 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: InventoryFormat, BYTE SIZE: 384)
2016-02-29 22:12:17,331 [9512] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:InventoryFormat)
2016-02-29 22:12:17,335 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 22:12:17,335 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 22:12:17,340 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - Listener (127.0.0.1:4000) was started
2016-02-29 22:12:17,342 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - Listener (127.0.0.1:4001) was started
2016-02-29 22:12:17,352 [9512] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:17,352 [9512] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 22:12:17,375 [12872] DEBUG ReadOnlyServer-21870138 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 870)
2016-02-29 22:12:17,377 [17156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 22:12:17,377 [17156] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:Product)
2016-02-29 22:12:17,379 [3924] DEBUG WriteOnlyServer-66843585 - update Product set Name = 'some' where ID = 'ad6c2d31-06bc-4a93-99ea-bbb69ae5ec80';
2016-02-29 22:12:17,388 [3924] DEBUG WriteOnlyServer-66843585 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 185)
2016-02-29 22:12:17,389 [13864] DEBUG ReadOnlyServer-21870138 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Product, BYTE SIZE: 187)
2016-02-29 22:12:17,389 [9512] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Product)
2016-02-29 22:12:17,403 [TestRunnerThread] DEBUG ReadOnlyServer-21870138 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 22:12:17,403 [TestRunnerThread] DEBUG WriteOnlyServer-66843585 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 22:12:18,622 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 3791083d-fde5-4e64-858a-252e7183b732)
2016-02-29 22:12:18,644 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 020572e7-3dbe-474e-99cc-812d062abcf4)
2016-02-29 22:12:20,207 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: c44e4d7a-3292-4165-934d-c53897e511a0)
2016-02-29 22:12:20,210 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: 2eb4a41e-0c94-4fcf-9701-ef0c7a80f530)
2016-02-29 22:12:20,212 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: a2d18b4f-5ac7-4968-af47-7a49e8cb77e4)
2016-02-29 22:12:20,224 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 9a97392f-8452-4cb8-bb4b-2b301490efd6)
2016-02-29 22:12:20,404 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 6c3a802d-8953-44d2-beea-8552f1568d9a)
2016-02-29 22:12:20,415 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: c7f8e6b6-fde7-4e29-80fe-8ca14f33b415)
2016-02-29 22:12:23,436 [3384] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:12:23,670 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 19536e9e-3bbc-4d81-82db-316ca01ba31d)
2016-02-29 22:12:23,671 [3384] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:12:23,676 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: e637662b-da44-46b2-98ee-6b96fa64f5b6)
2016-02-29 22:12:23,686 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ab1b7332-3eea-479e-88bd-ece70f44c8e2)
2016-02-29 22:12:23,687 [3384] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -4 to 6
2016-02-29 22:12:23,692 [3384] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:12:23,696 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 2a7c9ba3-41c9-4d89-a1ff-59543fbd4297)
2016-02-29 22:12:23,700 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ba0b3cb5-5e2a-40c9-a2c5-ef5ceda7af6c)
2016-02-29 22:12:23,700 [3384] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 5 to 6
2016-02-29 22:12:23,705 [3384] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:12:23,709 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: 6af8789e-e832-4884-a5b2-3c55955e981a)
2016-02-29 22:12:23,711 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Warehouse, ID: 19d70c04-7581-4a5c-b15a-00d6075f49e8)
2016-02-29 22:12:23,713 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: aed32655-bd03-450e-b632-7d453159f403)
2016-02-29 22:12:23,716 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: cd03d66d-161b-4610-bfc2-5d4d925711d8)
2016-02-29 22:12:23,720 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 087f7c1b-5c5e-497d-957f-56a3de793bd4)
2016-02-29 22:12:23,720 [3384] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 5 to 6
2016-02-29 22:12:23,725 [3384] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:12:23,729 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: e8678c60-c387-45e1-906c-9aad0a61f32d)
2016-02-29 22:12:23,734 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 538f84f3-f44e-47d2-a58f-c90deed460e7)
2016-02-29 22:12:23,734 [3384] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -11 to -12
2016-02-29 22:12:23,740 [3384] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:12:23,744 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Customer, ID: 552371d3-d291-4b2c-97a3-81d1fe3b932a)
2016-02-29 22:12:23,746 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Project, ID: f4931d05-8a55-427c-ae84-08950d5119ee)
2016-02-29 22:12:23,748 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: c891ac84-7a4a-4b7b-a4f5-8426202118cc)
2016-02-29 22:12:23,750 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 843945b5-9fa7-4766-aa15-f697b9d99d71)
2016-02-29 22:12:23,754 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: eef99602-da21-452a-948a-1b56971d7d10)
2016-02-29 22:12:23,754 [3384] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -5 to -6
2016-02-29 22:12:23,769 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 9021d834-d08e-4003-8943-288cdbc53fe1)
2016-02-29 22:12:23,769 [3384] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -2 to -1
2016-02-29 22:12:23,788 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f9a37158-892f-4459-ac9a-e445a0dc3762)
2016-02-29 22:12:23,801 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 3d5d2859-1274-4aff-8ade-8c27efbe4694)
2016-02-29 22:12:23,861 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: cc87ae18-e7f7-49c0-8a6c-6799c2ce36b4)
2016-02-29 22:12:23,861 [3384] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:12:23,865 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 184a6732-1c42-4842-854e-aea811fbb1ef)
2016-02-29 22:12:23,869 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: cc87ae18-e7f7-49c0-8a6c-6799c2ce36b4)
2016-02-29 22:12:23,869 [3384] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 0 to 1
2016-02-29 22:12:23,870 [3384] DEBUG R54IN0.WPF.DataDirector - update Property: Memo Convert  to 
2016-02-29 22:12:23,870 [3384] DEBUG R54IN0.WPF.DataDirector - update Property: MakerID Convert  to 
2016-02-29 22:12:23,870 [3384] DEBUG R54IN0.WPF.DataDirector - update Property: MeasureID Convert  to 
2016-02-29 22:12:23,870 [3384] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:12:23,871 [3384] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:12:23,881 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 45bee7ba-02fc-4a24-92d3-74892fac27e6)
2016-02-29 22:12:23,885 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: cc87ae18-e7f7-49c0-8a6c-6799c2ce36b4)
2016-02-29 22:12:23,885 [3384] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 1 to 0
2016-02-29 22:12:23,885 [3384] DEBUG R54IN0.WPF.DataDirector - update Property: MakerID Convert  to 
2016-02-29 22:12:23,885 [3384] DEBUG R54IN0.WPF.DataDirector - update Property: MeasureID Convert  to 
2016-02-29 22:12:23,885 [3384] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:12:23,887 [3384] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:12:23,892 [3384] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:12:23,898 [3384] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:12:23,901 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: fd5bd764-6d0b-48a9-9009-377af2ef2c9a)
2016-02-29 22:12:23,905 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f36f88f0-0cfd-4f7e-baab-57a6e052cda4)
2016-02-29 22:12:23,905 [3384] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 16 to 17
2016-02-29 22:12:23,905 [3384] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:12:23,911 [3384] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:12:23,912 [3384] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:12:23,916 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 99475bc7-2d42-4d2a-bc3d-b75fc67306b3)
2016-02-29 22:12:23,926 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: cc87ae18-e7f7-49c0-8a6c-6799c2ce36b4)
2016-02-29 22:12:23,926 [3384] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 0 to -1
2016-02-29 22:12:23,926 [3384] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:12:23,928 [3384] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:12:24,768 [3384] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 6d9ca66b-0713-4ab0-baa3-a8ee9846a6ab)
2016-02-29 22:12:24,768 [3384] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -25 to -27
2016-02-29 22:12:26,206 [2640] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:12:26,208 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 0d4728de-7c53-4021-930c-354d10d9f9b3)
2016-02-29 22:12:26,211 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 464c3a29-ada2-4057-a62a-963a49b02fc8)
2016-02-29 22:12:26,211 [2640] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -5 to -4
2016-02-29 22:12:26,248 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 48d60bb4-be5c-4eb9-9ced-7dedda8e0921)
2016-02-29 22:12:26,273 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f527d305-cf93-433c-9e0b-5436ac3c10d0)
2016-02-29 22:12:26,273 [2640] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -5 to 94
2016-02-29 22:12:26,294 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 2212d17c-cd30-42ea-8a7d-e759be33faa0)
2016-02-29 22:12:26,294 [2640] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 7 to -11
2016-02-29 22:12:26,335 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 1b14f1cd-ea3a-44fa-89f9-92158d0c8980)
2016-02-29 22:12:26,337 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f527d305-cf93-433c-9e0b-5436ac3c10d0)
2016-02-29 22:12:26,338 [2640] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -5 to -8
2016-02-29 22:12:26,351 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: d92d3216-909b-472c-a38d-ddc7040760df)
2016-02-29 22:12:26,352 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 81977428-07c4-4ca9-856a-c1ae16bf27cf)
2016-02-29 22:12:26,352 [2640] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 16 to 11
2016-02-29 22:12:26,365 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 632107ee-e090-4ca4-90f1-84ddf9a9a032)
2016-02-29 22:12:26,367 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1f8828c2-a3a2-4d52-a09e-34dc45c878e7)
2016-02-29 22:12:26,368 [2640] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 3 to -1
2016-02-29 22:12:26,390 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: cb5d56b0-c915-405e-a5bc-ef6716058b6f)
2016-02-29 22:12:26,392 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 804fb0bb-826f-42b5-9a13-d2c60aa8b6db)
2016-02-29 22:12:26,392 [2640] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 3 to -6
2016-02-29 22:12:26,437 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 42e95a61-5973-4334-a38d-4f2377583acf)
2016-02-29 22:12:26,438 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 628ec06e-4915-42b3-bdc9-9b8aeaaca6e3)
2016-02-29 22:12:26,438 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 39485a09-a34c-4d56-b3f3-eb28036ab406)
2016-02-29 22:12:26,439 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: ae639360-64f1-48cf-8997-fb23866954e8)
2016-02-29 22:12:26,440 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 93756d53-5820-43e7-9ae0-a9cf3667b9fb)
2016-02-29 22:12:26,441 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: b3c44c30-b05a-4798-a09b-fe2bbddbef98)
2016-02-29 22:12:26,441 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: de6e1c7d-6fa8-4626-9ab9-e54e3e7f05eb)
2016-02-29 22:12:26,442 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 4a6dccd6-0dc8-4683-bbdc-9d6c39accf2d)
2016-02-29 22:12:26,443 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: fcda4358-3383-4c08-b04c-f1f67d5fc212)
2016-02-29 22:12:26,444 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: cb2efb39-4ed0-48e7-8f7b-947a8ce4e890)
2016-02-29 22:12:26,445 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: a47fb818-3706-47d6-895f-aa2130be5509)
2016-02-29 22:12:26,457 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 00b754ce-5181-46b5-95bd-47dc85bbfb98)
2016-02-29 22:12:26,459 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 48d60bb4-be5c-4eb9-9ced-7dedda8e0921)
2016-02-29 22:12:26,459 [2640] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -10 to -2
2016-02-29 22:12:26,472 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 94adb491-b569-4031-a4c3-83a90bf6c94e)
2016-02-29 22:12:26,474 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 4c626e6c-d503-434e-a46b-8a046d608995)
2016-02-29 22:12:26,474 [2640] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -4 to -6
2016-02-29 22:12:26,493 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: e28f3134-f765-49bf-9e6c-9ed71b2abd56)
2016-02-29 22:12:26,495 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: cf41d491-8e4d-425a-8bbe-232828930daf)
2016-02-29 22:12:26,495 [2640] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -13 to -15
2016-02-29 22:12:26,507 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Project, id: 3c3d9497-6a8c-47a5-807e-e0cc61f7933b)
2016-02-29 22:12:26,510 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1f8828c2-a3a2-4d52-a09e-34dc45c878e7)
2016-02-29 22:12:26,513 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f9f7a34f-6b01-4680-b451-0a348a949857)
2016-02-29 22:12:26,515 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: e08d3c06-6b68-4762-94ad-c31d1d69128f)
2016-02-29 22:12:26,519 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 0f1c2485-25be-4579-9ccb-6c561274223e)
2016-02-29 22:12:26,521 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f9f7a34f-6b01-4680-b451-0a348a949857)
2016-02-29 22:12:26,524 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 3a1a03c6-fc2e-4072-98ae-720013eaa452)
2016-02-29 22:12:26,526 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 464c3a29-ada2-4057-a62a-963a49b02fc8)
2016-02-29 22:12:26,529 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 4c626e6c-d503-434e-a46b-8a046d608995)
2016-02-29 22:12:26,531 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 900f1fdb-dd54-460b-bc91-73f0fcd2097c)
2016-02-29 22:12:26,537 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f9f7a34f-6b01-4680-b451-0a348a949857)
2016-02-29 22:12:26,541 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 2f605b98-86d8-4a82-b92b-0a19574439d8)
2016-02-29 22:12:26,544 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: e6c78f8a-8c62-439f-9593-3f4ffd64ec9e)
2016-02-29 22:12:26,547 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: cf41d491-8e4d-425a-8bbe-232828930daf)
2016-02-29 22:12:26,549 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: cf41d491-8e4d-425a-8bbe-232828930daf)
2016-02-29 22:12:26,551 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: e613ddcd-bafc-43bc-b821-69ee208ee244)
2016-02-29 22:12:26,553 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: bd5d8400-7f72-45ae-8754-b123d10cfbab)
2016-02-29 22:12:26,556 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 900f1fdb-dd54-460b-bc91-73f0fcd2097c)
2016-02-29 22:12:26,558 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: e6c78f8a-8c62-439f-9593-3f4ffd64ec9e)
2016-02-29 22:12:26,561 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 0f1c2485-25be-4579-9ccb-6c561274223e)
2016-02-29 22:12:26,564 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: a08ec7bc-5718-42b9-bd7e-de21ae46d01e)
2016-02-29 22:12:26,566 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 804fb0bb-826f-42b5-9a13-d2c60aa8b6db)
2016-02-29 22:12:26,569 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: e6c78f8a-8c62-439f-9593-3f4ffd64ec9e)
2016-02-29 22:12:26,573 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 061d1aa5-0aec-4374-80b8-42693779c8a6)
2016-02-29 22:12:26,575 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 0f1c2485-25be-4579-9ccb-6c561274223e)
2016-02-29 22:12:26,577 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: e08d3c06-6b68-4762-94ad-c31d1d69128f)
2016-02-29 22:12:26,580 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 804fb0bb-826f-42b5-9a13-d2c60aa8b6db)
2016-02-29 22:12:26,583 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 48d60bb4-be5c-4eb9-9ced-7dedda8e0921)
2016-02-29 22:12:26,585 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 464c3a29-ada2-4057-a62a-963a49b02fc8)
2016-02-29 22:12:26,588 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 061d1aa5-0aec-4374-80b8-42693779c8a6)
2016-02-29 22:12:26,590 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 0f1c2485-25be-4579-9ccb-6c561274223e)
2016-02-29 22:12:26,592 [2640] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: db61f346-4020-490b-b954-c71069f7d93e)
2016-02-29 22:12:28,123 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 52dbe3ee-3b82-4d42-b736-a860e5206b6e)
2016-02-29 22:12:28,134 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 109d432e-bc22-4ae5-b03e-afe2f298c9d2)
2016-02-29 22:12:28,144 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 6243de21-d944-4598-86ff-60530e05e773)
2016-02-29 22:12:28,153 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: af8f6a94-15bb-4bb6-abfa-27c6adaffa57)
2016-02-29 22:12:28,180 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 029de39f-c844-4eb1-a2cb-2a651c4bc248)
2016-02-29 22:12:28,228 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 8512ad6d-8757-47c2-ae37-a51377649a4c)
2016-02-29 22:12:28,236 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: 53ec3dc4-355f-4aac-a2b1-c531a97e7818)
2016-02-29 22:12:28,244 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: bb23c512-dab3-46fb-b008-3d3c5b952216)
2016-02-29 22:12:28,254 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Measure, id: 5dbea39e-c88a-4242-8698-827502e44ecf)
2016-02-29 22:12:31,256 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 0c7fd81f-55c0-464d-b2b0-9d2dd89a868d)
2016-02-29 22:12:31,261 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 81ba829c-bc2e-4fc2-b71e-12a91389b820)
2016-02-29 22:12:31,261 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -14 to -10
2016-02-29 22:12:31,265 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 0f93e47b-4178-4b77-b165-a506553d4b39)
2016-02-29 22:12:31,269 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 4e5960b3-8aa0-47cf-8805-19136f5b7310)
2016-02-29 22:12:31,269 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 0 to 1
2016-02-29 22:12:31,272 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 1b35d965-9a42-4e7e-87ea-1de58b4acdca)
2016-02-29 22:12:31,278 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: e9ab46ab-2d03-4b54-869f-0378065852fb)
2016-02-29 22:12:31,278 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -7 to 1
2016-02-29 22:12:31,282 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 1ddebb66-1603-427e-86a5-a455c54be0eb)
2016-02-29 22:12:31,286 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 2071755c-5d16-48e0-b095-a0fe05bebf14)
2016-02-29 22:12:31,287 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -5 to 1
2016-02-29 22:12:31,290 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 2e0aab6f-6052-4e88-88fa-bd1c8af1c036)
2016-02-29 22:12:31,295 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 2071755c-5d16-48e0-b095-a0fe05bebf14)
2016-02-29 22:12:31,295 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 1 to 7
2016-02-29 22:12:31,304 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 2e0c8909-a24c-435e-ade7-a8449dad6962)
2016-02-29 22:12:31,310 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f80cda73-dceb-488f-b2bd-5fe80d8b85b9)
2016-02-29 22:12:31,311 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 13 to 18
2016-02-29 22:12:31,315 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 3b3cbc74-6b31-44b5-842a-5afb2384a14b)
2016-02-29 22:12:31,319 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 81ba829c-bc2e-4fc2-b71e-12a91389b820)
2016-02-29 22:12:31,319 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -10 to -2
2016-02-29 22:12:31,322 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 42e34e3a-cc42-40bb-a82e-8c7090eb74a7)
2016-02-29 22:12:31,328 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: e9ab46ab-2d03-4b54-869f-0378065852fb)
2016-02-29 22:12:31,328 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 1 to 7
2016-02-29 22:12:31,331 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 498b3703-3860-4cc0-83f2-36ecc0e03f6a)
2016-02-29 22:12:31,336 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ce37f4e5-751c-4c9d-b8b2-ab18a20f9da8)
2016-02-29 22:12:31,336 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 7 to 15
2016-02-29 22:12:31,340 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 4e7a63f2-5c91-4fa7-bdd3-01630ce88f0b)
2016-02-29 22:12:31,345 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 25c5f8fd-b4fd-4534-82b3-7cbe18b4ae2a)
2016-02-29 22:12:31,345 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -5 to -4
2016-02-29 22:12:31,348 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 52f60bbf-394c-47a6-bfa3-a32f47394d53)
2016-02-29 22:12:31,352 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 13ed9003-c4ba-4274-b851-96b24ca5a277)
2016-02-29 22:12:31,352 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -2 to 2
2016-02-29 22:12:31,356 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 5a02c2d8-19a2-49b5-a1fe-4ae4267543d2)
2016-02-29 22:12:31,360 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 18617df2-9bf1-4a0e-b134-5c02645a4757)
2016-02-29 22:12:31,360 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 3 to 6
2016-02-29 22:12:31,363 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 63f785ca-375a-444f-adf4-233733ff0154)
2016-02-29 22:12:31,368 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 333b00ae-3630-4e2d-9560-ab9024c10aa7)
2016-02-29 22:12:31,368 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 1 to 6
2016-02-29 22:12:31,371 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 6a230ba4-3ac0-4bf2-a99a-87dd83ef4eba)
2016-02-29 22:12:31,376 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 8b155620-5d8a-4f82-8f62-0c87298b2af0)
2016-02-29 22:12:31,376 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 4 to 12
2016-02-29 22:12:31,381 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 6dba4907-4ca7-4235-95c1-ba14a656a5c9)
2016-02-29 22:12:31,385 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 2ccecb63-8c67-4d2e-b57d-b449cd6ef63b)
2016-02-29 22:12:31,385 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 22 to 28
2016-02-29 22:12:31,404 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 6ef0a7a5-a9c1-4845-8723-21189c343d6c)
2016-02-29 22:12:31,409 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 9e5765fc-9ea7-470f-b4de-51dfdc9ff6e1)
2016-02-29 22:12:31,409 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -14 to -5
2016-02-29 22:12:31,412 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 73aae944-1b3d-4eff-b252-5088e20880b1)
2016-02-29 22:12:31,417 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 17e93299-16cc-40d2-b2ca-1733a40ac9ac)
2016-02-29 22:12:31,417 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 14 to 21
2016-02-29 22:12:31,420 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 7eadefcf-66b7-41b8-977e-cff1e1d117f0)
2016-02-29 22:12:31,424 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f42fbd3f-c3da-4d74-8411-2385d1031664)
2016-02-29 22:12:31,425 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -8 to -5
2016-02-29 22:12:31,428 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 7f12582a-12e5-4c02-91c8-f6ff80c4b062)
2016-02-29 22:12:31,434 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f42fbd3f-c3da-4d74-8411-2385d1031664)
2016-02-29 22:12:31,434 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -5 to 4
2016-02-29 22:12:31,439 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 88c26bb5-5c91-4075-9749-67f6b5d9133c)
2016-02-29 22:12:31,444 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 45686e8f-aea5-4788-9996-b32134047b8a)
2016-02-29 22:12:31,444 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -7 to -4
2016-02-29 22:12:31,448 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 9303ff90-3076-4695-adaf-326fb1129188)
2016-02-29 22:12:31,452 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 25c5f8fd-b4fd-4534-82b3-7cbe18b4ae2a)
2016-02-29 22:12:31,452 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -4 to 5
2016-02-29 22:12:31,456 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 942ee8eb-33f2-4d8a-95ef-93bcba333e6d)
2016-02-29 22:12:31,460 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 45686e8f-aea5-4788-9996-b32134047b8a)
2016-02-29 22:12:31,460 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -4 to 4
2016-02-29 22:12:31,463 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 982d5af8-a39d-41bc-b33b-9ea0f7f4a8c6)
2016-02-29 22:12:31,468 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 9e5765fc-9ea7-470f-b4de-51dfdc9ff6e1)
2016-02-29 22:12:31,468 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -5 to 3
2016-02-29 22:12:31,471 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 9a22efad-75d4-49ef-9d9d-a249b7360a76)
2016-02-29 22:12:31,478 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f42fbd3f-c3da-4d74-8411-2385d1031664)
2016-02-29 22:12:31,479 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 4 to 9
2016-02-29 22:12:31,482 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 9ec131db-5fe0-461f-9907-72cea3783ec2)
2016-02-29 22:12:31,486 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 8e2ccf2b-0405-4482-beea-efdb24f736c9)
2016-02-29 22:12:31,486 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 2 to 4
2016-02-29 22:12:31,490 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: a254d009-2a99-4734-b520-289b9ae1c893)
2016-02-29 22:12:31,494 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 81ba829c-bc2e-4fc2-b71e-12a91389b820)
2016-02-29 22:12:31,494 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -2 to 5
2016-02-29 22:12:31,497 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: ae522a96-afd6-48f8-8941-6874065f6ec7)
2016-02-29 22:12:31,502 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 9e5765fc-9ea7-470f-b4de-51dfdc9ff6e1)
2016-02-29 22:12:31,502 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 3 to 11
2016-02-29 22:12:31,505 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: b146a4cd-14f5-4af6-b368-9536272aaabe)
2016-02-29 22:12:31,510 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 2ccecb63-8c67-4d2e-b57d-b449cd6ef63b)
2016-02-29 22:12:31,511 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 28 to 36
2016-02-29 22:12:31,514 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: b4371f71-75d8-4f55-83c7-cb5ae7035fe0)
2016-02-29 22:12:31,518 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 27fc35d1-514d-473c-a16e-8ae64359a51b)
2016-02-29 22:12:31,518 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -13 to -6
2016-02-29 22:12:31,521 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: b4df13f7-31c1-42ff-9a45-56c8bbff1355)
2016-02-29 22:12:31,526 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 2ccecb63-8c67-4d2e-b57d-b449cd6ef63b)
2016-02-29 22:12:31,526 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 36 to 37
2016-02-29 22:12:31,530 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: b877e933-835f-45cc-8cd5-f59510e232f4)
2016-02-29 22:12:31,534 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1c507da6-a105-4061-a22b-dda08e814948)
2016-02-29 22:12:31,534 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -1 to 1
2016-02-29 22:12:31,538 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: bd998d60-df62-4c0a-a56c-57b7a7c7506e)
2016-02-29 22:12:31,544 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 8b155620-5d8a-4f82-8f62-0c87298b2af0)
2016-02-29 22:12:31,544 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 12 to 14
2016-02-29 22:12:31,548 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: bff5a032-7fa7-4977-b000-05da9e062d17)
2016-02-29 22:12:31,552 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 8e2ccf2b-0405-4482-beea-efdb24f736c9)
2016-02-29 22:12:31,552 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 4 to 12
2016-02-29 22:12:31,555 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: c140f6e5-36cc-4827-a505-307bef665e46)
2016-02-29 22:12:31,559 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 9e5765fc-9ea7-470f-b4de-51dfdc9ff6e1)
2016-02-29 22:12:31,559 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 11 to 13
2016-02-29 22:12:31,562 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: c453c229-c448-4760-b6c4-28a1e58e5cba)
2016-02-29 22:12:31,565 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 18617df2-9bf1-4a0e-b134-5c02645a4757)
2016-02-29 22:12:31,566 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 6 to 7
2016-02-29 22:12:31,568 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: cba0b05e-639a-4b00-8181-b83cfa9fb8c5)
2016-02-29 22:12:31,572 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 9e5765fc-9ea7-470f-b4de-51dfdc9ff6e1)
2016-02-29 22:12:31,572 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 13 to 17
2016-02-29 22:12:31,575 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: d7d42e04-03b2-4101-866d-8fc70e6d5133)
2016-02-29 22:12:31,579 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: b5815595-1b1d-4352-98df-3ef85161f5c2)
2016-02-29 22:12:31,580 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 1 to 4
2016-02-29 22:12:31,582 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: d8c256e7-d1a9-4e29-9b61-ba6b71e93c1e)
2016-02-29 22:12:31,586 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 27fc35d1-514d-473c-a16e-8ae64359a51b)
2016-02-29 22:12:31,586 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -6 to -1
2016-02-29 22:12:31,589 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: d98e6deb-897e-4eba-a462-5e1644846f37)
2016-02-29 22:12:31,593 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 17e93299-16cc-40d2-b2ca-1733a40ac9ac)
2016-02-29 22:12:31,593 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 21 to 26
2016-02-29 22:12:31,596 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: da5b0c4f-ce75-42c3-9635-edff087f1b9f)
2016-02-29 22:12:31,599 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: dc9e9764-93b8-462e-a70f-82a8c3739ac9)
2016-02-29 22:12:31,600 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 15 to 19
2016-02-29 22:12:31,602 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: ddfff779-e61c-42fe-ae57-ba5f3963ef8d)
2016-02-29 22:12:31,606 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 2ccecb63-8c67-4d2e-b57d-b449cd6ef63b)
2016-02-29 22:12:31,606 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 37 to 44
2016-02-29 22:12:31,609 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: e1d8c5b0-c391-442a-afe2-4c8c1edd02e1)
2016-02-29 22:12:31,612 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 333b00ae-3630-4e2d-9560-ab9024c10aa7)
2016-02-29 22:12:31,612 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 6 to 14
2016-02-29 22:12:31,615 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: e899059f-8769-4832-800b-90352ceed382)
2016-02-29 22:12:31,618 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 13ed9003-c4ba-4274-b851-96b24ca5a277)
2016-02-29 22:12:31,618 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 2 to 9
2016-02-29 22:12:31,621 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: ebb57225-4262-4806-8c5b-c39fb305bd84)
2016-02-29 22:12:31,635 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 0ed3a34f-4f9e-484e-a230-bb992fb70088)
2016-02-29 22:12:31,635 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -11 to -3
2016-02-29 22:12:31,638 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: f2aa4f4c-16db-438b-bcac-7de24464b16f)
2016-02-29 22:12:31,642 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: dc9e9764-93b8-462e-a70f-82a8c3739ac9)
2016-02-29 22:12:31,642 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 19 to 20
2016-02-29 22:12:31,651 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: f9162979-99fd-47da-8875-98a42f59b73a)
2016-02-29 22:12:31,663 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 17e93299-16cc-40d2-b2ca-1733a40ac9ac)
2016-02-29 22:12:31,663 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 26 to 31
2016-02-29 22:12:31,666 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: fb2a8cac-ea14-4e21-a4d6-72091074360e)
2016-02-29 22:12:31,669 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 31920204-51ed-4329-bae1-271ca35881c4)
2016-02-29 22:12:31,669 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 10 to 12
2016-02-29 22:12:31,673 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Project, id: d8108b91-f71d-4d56-af6a-651b60fd413e)
2016-02-29 22:12:33,458 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Product, id: 39a4290f-1d44-4e13-9582-32d3fda46559)
2016-02-29 22:12:33,458 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: c10899ff-ef36-476b-aa41-563c874ca5cb)
2016-02-29 22:12:33,458 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: c09b4316-cbab-4243-ad33-37c532d197a6)
2016-02-29 22:12:33,459 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 9907cc71-d923-475c-91a9-7e625584f731)
2016-02-29 22:12:33,461 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 57a68088-4721-43c8-ae83-53b8a112792e)
2016-02-29 22:12:33,462 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: c14023fe-659f-4100-a531-ae0deba186a9)
2016-02-29 22:12:33,463 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 999b0cd3-0291-41ae-bf42-b1deb194a13b)
2016-02-29 22:12:33,464 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: a268d7fc-c5d1-4663-b8e9-40e98aa48242)
2016-02-29 22:12:33,465 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 67d2cbfe-6014-46b0-bb52-df10f39f15f8)
2016-02-29 22:12:33,467 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: ea8b5cc2-3bd5-4da8-854e-b48a904dfa93)
2016-02-29 22:12:33,468 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: a487258c-2760-4ffd-99b4-fd023473bf02)
2016-02-29 22:12:33,469 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 1378ac03-17dd-4a41-8b75-3508982c1f03)
2016-02-29 22:12:33,471 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 90f0f669-f59f-4824-8232-05a2d80f8b68)
2016-02-29 22:12:33,473 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 9db91c61-a932-425d-9e73-d0a1bd9dec9d)
2016-02-29 22:12:33,474 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: c8afd673-4152-4af6-b4d7-ca5ecf92a66c)
2016-02-29 22:12:33,475 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: ba186c55-b515-48b5-ba00-6cd8d6436449)
2016-02-29 22:12:33,496 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Product, id: b4dbb834-5687-4866-825c-dc956d79ef8e)
2016-02-29 22:12:33,496 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: a8d4e1d4-6515-4fd3-9496-0ea6744e2a5e)
2016-02-29 22:12:33,511 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Product, id: 497ef951-69db-402e-a580-5ceb560865f0)
2016-02-29 22:12:33,511 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: bec20757-5b95-44f5-a8d0-4c5f30bb15ac)
2016-02-29 22:12:33,532 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Product, id: 7d8110a9-ec3e-41f9-90e8-f64bd9163eae)
2016-02-29 22:12:33,532 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 125b7529-ca98-4cd4-a4d1-e27433614272)
2016-02-29 22:12:33,532 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 40933436-5a4e-42ab-b8d7-a112f3f431b9)
2016-02-29 22:12:33,532 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 42286071-7553-43e3-aa96-c08df6ca6092)
2016-02-29 22:12:33,532 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 7203501d-63d8-4195-a9b8-06cb83e387ab)
2016-02-29 22:12:33,532 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 74f9c738-52cb-4a7f-959c-22f29805b39d)
2016-02-29 22:12:33,532 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 7a382e23-6e3c-443d-bf01-b3966be52cb4)
2016-02-29 22:12:33,532 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 8396689a-2a17-4dfa-bc5e-9e52d8820349)
2016-02-29 22:12:33,532 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 8483e450-b189-4023-809d-5bf5e31dbf16)
2016-02-29 22:12:33,532 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 8abbd396-2eca-4677-b5ba-2863224389a9)
2016-02-29 22:12:33,532 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: a2fc87d3-b298-44c0-bda5-1155a680ded6)
2016-02-29 22:12:33,532 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: cd090336-8abc-4703-b349-f9154c2d6728)
2016-02-29 22:12:33,532 [17392] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: fb9320f2-161f-48f4-98d4-551ca49a557a)
2016-02-29 22:24:24,715 [4196] DEBUG ReadOnlyServer-34382671 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 22:24:24,725 [4196] DEBUG ReadOnlyServer-34382671 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 22:24:24,725 [4196] DEBUG ReadOnlyServer-34382671 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 22:24:24,725 [4196] DEBUG ReadOnlyServer-34382671 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 22:24:24,725 [4196] DEBUG ReadOnlyServer-34382671 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 22:24:24,784 [4196] DEBUG WriteOnlyServer-58648462 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 22:24:24,784 [4196] DEBUG WriteOnlyServer-58648462 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 22:24:24,784 [4196] DEBUG WriteOnlyServer-58648462 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 22:24:24,803 [4196] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 22:24:24,804 [4196] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 22:24:24,848 [4240] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 22:24:24,852 [13096] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 22:24:24,913 [3440] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 22:24:24,930 [13096] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 22:24:24,935 [1200] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 22:24:24,936 [13096] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 22:24:24,938 [15980] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 22:24:24,939 [6156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 22:24:24,941 [8200] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 22:24:24,941 [6156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 22:24:24,943 [3440] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 22:24:24,944 [6156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 22:24:24,945 [1200] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 22:24:24,946 [6156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 22:24:24,948 [15980] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 22:24:24,948 [6156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 22:24:24,951 [8200] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 22:24:24,951 [6156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 22:24:24,961 [3440] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6868)
2016-02-29 22:24:24,963 [6156] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 22:24:24,967 [6156] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 22:24:25,036 [4196] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:24:25,040 [4196] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 22:24:25,045 [4196] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 22:24:25,045 [4196] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 22:24:25,046 [4196] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 22:24:25,047 [15980] DEBUG WriteOnlyServer-58648462 - insert into Supplier (ID, Name) values ('f1c11f76-b232-4629-8372-2b26dfe8561f', 'new');
2016-02-29 22:24:25,056 [15980] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 22:24:25,056 [13096] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 22:24:25,056 [8200] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 22:24:25,059 [15980] DEBUG WriteOnlyServer-58648462 - insert into Warehouse (ID, Name) values ('2ff607ee-78f8-4aa6-b062-f99e9078605b', 'new');
2016-02-29 22:24:25,062 [15980] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 22:24:25,063 [15980] DEBUG WriteOnlyServer-58648462 - insert into Employee (ID, Name) values ('c048ff19-3947-47f6-8da5-9d5dd777ace3', 'new');
2016-02-29 22:24:25,066 [15980] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 22:24:25,077 [15980] DEBUG WriteOnlyServer-58648462 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('04fc1081-7cb3-4c54-bbb4-4bbd676227ef', '1', '2016-02-29 22:24:25.011', '0', '1', '', '079592d6-95d5-48ad-a43e-b8120a0247e6', '', 'f1c11f76-b232-4629-8372-2b26dfe8561f', '', '2ff607ee-78f8-4aa6-b062-f99e9078605b', 'c048ff19-3947-47f6-8da5-9d5dd777ace3');
2016-02-29 22:24:25,080 [15980] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 519)
2016-02-29 22:24:25,087 [15980] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '04fc1081-7cb3-4c54-bbb4-4bbd676227ef'
2016-02-29 22:24:25,110 [4196] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 22:24:25,111 [4196] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 22:24:25,117 [13096] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 22:24:25,119 [13096] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: f1c11f76-b232-4629-8372-2b26dfe8561f)
2016-02-29 22:58:38,095 [12076] DEBUG ReadOnlyServer-34382671 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 22:58:38,104 [12076] DEBUG ReadOnlyServer-34382671 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 22:58:38,104 [12076] DEBUG ReadOnlyServer-34382671 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 22:58:38,104 [12076] DEBUG ReadOnlyServer-34382671 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 22:58:38,105 [12076] DEBUG ReadOnlyServer-34382671 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 22:58:38,163 [12076] DEBUG WriteOnlyServer-58648462 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 22:58:38,163 [12076] DEBUG WriteOnlyServer-58648462 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 22:58:38,163 [12076] DEBUG WriteOnlyServer-58648462 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 22:58:38,182 [12076] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 22:58:38,183 [12076] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 22:58:38,226 [12068] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 22:58:38,231 [7476] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 22:58:38,289 [13164] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 22:58:38,306 [4324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 22:58:38,313 [15916] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 22:58:38,313 [7476] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 22:58:38,315 [13164] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 22:58:38,316 [4324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 22:58:38,318 [7452] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 22:58:38,319 [4324] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 22:58:38,321 [664] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 22:58:38,321 [10876] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 22:58:38,323 [15916] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 22:58:38,324 [10876] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 22:58:38,326 [13164] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 22:58:38,327 [10876] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 22:58:38,329 [7452] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 22:58:38,329 [10876] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 22:58:38,339 [664] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6872)
2016-02-29 22:58:38,341 [10876] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 22:58:38,345 [10876] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 22:58:38,415 [12076] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:58:38,419 [12076] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 22:58:38,426 [12076] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 22:58:38,426 [12076] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 22:58:38,428 [13164] DEBUG WriteOnlyServer-58648462 - insert into Supplier (ID, Name) values ('f1b2b418-303a-4f39-820d-825e7e550c6f', 'new');
2016-02-29 22:58:38,428 [12076] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 22:58:38,437 [13164] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 22:58:38,439 [10876] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 22:58:38,439 [7452] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 22:58:38,441 [13164] DEBUG WriteOnlyServer-58648462 - insert into Warehouse (ID, Name) values ('9c32c3f1-8e15-4715-9bf0-814526234312', 'new');
2016-02-29 22:58:38,444 [13164] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 22:58:38,444 [13164] DEBUG WriteOnlyServer-58648462 - insert into Employee (ID, Name) values ('f6d46eb3-e4e9-48b5-8645-73d268f20cdd', 'new');
2016-02-29 22:58:38,448 [13164] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 22:58:38,456 [13164] DEBUG WriteOnlyServer-58648462 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('3a67ed26-4d63-4e12-8d60-2368c2d427b4', '1', '2016-02-29 22:58:38.390', '0', '1', '', '90f75660-c5d2-4a6b-97a0-fb3123f0ec0b', '', 'f1b2b418-303a-4f39-820d-825e7e550c6f', '', '9c32c3f1-8e15-4715-9bf0-814526234312', 'f6d46eb3-e4e9-48b5-8645-73d268f20cdd');
2016-02-29 22:58:38,459 [13164] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 22:58:38,464 [13164] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '3a67ed26-4d63-4e12-8d60-2368c2d427b4'
2016-02-29 22:58:38,492 [12076] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 22:58:38,493 [12076] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 22:58:38,498 [10876] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 22:58:38,501 [10876] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: f1b2b418-303a-4f39-820d-825e7e550c6f)
2016-02-29 22:58:54,114 [15536] DEBUG ReadOnlyServer-34382671 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 22:58:54,123 [15536] DEBUG ReadOnlyServer-34382671 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 22:58:54,123 [15536] DEBUG ReadOnlyServer-34382671 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 22:58:54,123 [15536] DEBUG ReadOnlyServer-34382671 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 22:58:54,123 [15536] DEBUG ReadOnlyServer-34382671 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 22:58:54,182 [15536] DEBUG WriteOnlyServer-58648462 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 22:58:54,182 [15536] DEBUG WriteOnlyServer-58648462 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 22:58:54,182 [15536] DEBUG WriteOnlyServer-58648462 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 22:58:54,201 [15536] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 22:58:54,203 [15536] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 22:58:54,247 [5480] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 22:58:54,251 [13600] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 22:58:54,320 [16964] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 22:58:54,338 [13600] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 22:58:54,344 [9436] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 22:58:54,344 [12684] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 22:58:54,347 [14148] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 22:58:54,348 [13600] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 22:58:54,350 [12244] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 22:58:54,351 [16460] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 22:58:54,353 [16964] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 22:58:54,353 [5480] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 22:58:54,357 [9436] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 22:58:54,358 [5480] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 22:58:54,360 [14148] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 22:58:54,361 [16460] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 22:58:54,363 [12244] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 22:58:54,363 [5480] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 22:58:54,374 [16964] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6878)
2016-02-29 22:58:54,376 [16460] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 22:58:54,380 [16460] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 22:58:54,453 [15536] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:58:54,458 [15536] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 22:58:54,463 [15536] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 22:58:54,464 [15536] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 22:58:54,465 [15536] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 22:58:54,466 [14148] DEBUG WriteOnlyServer-58648462 - insert into Supplier (ID, Name) values ('bd8de1d0-a249-4d4d-8794-8b6d57218f7f', 'new');
2016-02-29 22:58:54,474 [5480] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 22:58:54,474 [12244] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 22:58:54,475 [14148] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 22:58:54,479 [14148] DEBUG WriteOnlyServer-58648462 - insert into Warehouse (ID, Name) values ('fe22ddc8-f492-42e9-af04-7fa385e7c465', 'new');
2016-02-29 22:58:54,483 [14148] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 22:58:54,483 [14148] DEBUG WriteOnlyServer-58648462 - insert into Employee (ID, Name) values ('2d245614-ca5c-43f4-8046-07b2b7e6dd59', 'new');
2016-02-29 22:58:54,486 [14148] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 22:58:54,498 [14148] DEBUG WriteOnlyServer-58648462 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('856843ee-8661-4e69-86a6-9b08ca54cfeb', '1', '2016-02-29 22:58:54.428', '0', '1', '', '33cf9f36-dfc4-450b-9b54-7c36b8986b20', '', 'bd8de1d0-a249-4d4d-8794-8b6d57218f7f', '', 'fe22ddc8-f492-42e9-af04-7fa385e7c465', '2d245614-ca5c-43f4-8046-07b2b7e6dd59');
2016-02-29 22:58:54,501 [14148] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 22:58:54,508 [14148] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '856843ee-8661-4e69-86a6-9b08ca54cfeb'
2016-02-29 22:58:54,535 [15536] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 22:58:54,535 [15536] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 22:58:54,537 [5480] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 22:58:54,539 [5480] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: bd8de1d0-a249-4d4d-8794-8b6d57218f7f)
2016-02-29 22:59:30,468 [4248] DEBUG ReadOnlyServer-34382671 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 22:59:30,477 [4248] DEBUG ReadOnlyServer-34382671 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 22:59:30,477 [4248] DEBUG ReadOnlyServer-34382671 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 22:59:30,477 [4248] DEBUG ReadOnlyServer-34382671 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 22:59:30,477 [4248] DEBUG ReadOnlyServer-34382671 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 22:59:30,540 [4248] DEBUG WriteOnlyServer-58648462 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 22:59:30,540 [4248] DEBUG WriteOnlyServer-58648462 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 22:59:30,540 [4248] DEBUG WriteOnlyServer-58648462 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 22:59:30,559 [4248] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was started
2016-02-29 22:59:30,561 [4248] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was started
2016-02-29 22:59:30,605 [13420] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 22:59:30,609 [928] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 22:59:30,672 [16804] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 22:59:30,690 [928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 22:59:30,697 [6076] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 22:59:30,698 [928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 22:59:30,702 [14488] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 22:59:30,703 [928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 22:59:30,704 [16516] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 22:59:30,705 [928] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 22:59:30,707 [16804] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 22:59:30,708 [3680] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 22:59:30,710 [6076] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 22:59:30,710 [3680] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 22:59:30,712 [14488] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 22:59:30,713 [3680] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 22:59:30,715 [16516] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 22:59:30,716 [3680] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 22:59:30,726 [16804] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6871)
2016-02-29 22:59:30,727 [4648] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 22:59:30,732 [4648] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 22:59:30,803 [4248] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 22:59:30,807 [4248] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Supplier)
2016-02-29 22:59:30,811 [4248] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Warehouse)
2016-02-29 22:59:30,812 [4248] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Employee)
2016-02-29 22:59:30,813 [14488] DEBUG WriteOnlyServer-58648462 - insert into Supplier (ID, Name) values ('20483820-d637-49b9-af14-d96e84c6a0de', 'new');
2016-02-29 22:59:30,814 [4248] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:IOStockFormat)
2016-02-29 22:59:30,823 [4648] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: QUEV, TYPE:)
2016-02-29 22:59:30,824 [16516] DEBUG ReadOnlyServer-34382671 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: IOStockFormat, BYTE SIZE: 134)
2016-02-29 22:59:30,837 [14488] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Supplier, SIZE: 185)
2016-02-29 22:59:30,841 [14488] DEBUG WriteOnlyServer-58648462 - insert into Warehouse (ID, Name) values ('81caa80a-7e93-40af-9df0-5ba143b61485', 'new');
2016-02-29 22:59:30,844 [14488] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Warehouse, SIZE: 186)
2016-02-29 22:59:30,844 [14488] DEBUG WriteOnlyServer-58648462 - insert into Employee (ID, Name) values ('755a53de-e272-440e-b3be-b9f74120abb0', 'new');
2016-02-29 22:59:30,847 [14488] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Employee, SIZE: 185)
2016-02-29 22:59:30,854 [14488] DEBUG WriteOnlyServer-58648462 - insert into IOStockFormat (ID, StockType, Date, UnitPrice, Quantity, Memo, InventoryID, CustomerID, SupplierID, ProjectID, WarehouseID, EmployeeID) values ('82b01237-894c-455f-9809-c8b2a26c99cf', '1', '2016-02-29 22:59:30.777', '0', '1', '', '76d69293-8de0-4950-b38f-8be15e1aa5e5', '', '20483820-d637-49b9-af14-d96e84c6a0de', '', '81caa80a-7e93-40af-9df0-5ba143b61485', '755a53de-e272-440e-b3be-b9f74120abb0');
2016-02-29 22:59:30,858 [14488] DEBUG WriteOnlyServer-58648462 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.IOStockFormat, SIZE: 520)
2016-02-29 22:59:30,870 [14488] DEBUG R54IN0.Server.WriteSessionCommandExtension - select InventoryID from IOStockFormat where ID = '82b01237-894c-455f-9809-c8b2a26c99cf'
2016-02-29 22:59:30,874 [4248] DEBUG ReadOnlyServer-34382671 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 22:59:30,874 [4248] DEBUG WriteOnlyServer-58648462 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 22:59:30,899 [4648] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Supplier)
2016-02-29 22:59:30,901 [4648] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: 20483820-d637-49b9-af14-d96e84c6a0de)
2016-02-29 23:01:41,017 [10684] DEBUG ReadOnlyServer-8836559 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 23:01:41,028 [10684] DEBUG ReadOnlyServer-8836559 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 23:01:41,028 [10684] DEBUG ReadOnlyServer-8836559 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 23:01:41,028 [10684] DEBUG ReadOnlyServer-8836559 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 23:01:41,028 [10684] DEBUG ReadOnlyServer-8836559 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 23:01:41,087 [10684] DEBUG WriteOnlyServer-62792180 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 23:01:41,087 [10684] DEBUG WriteOnlyServer-62792180 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 23:01:41,087 [10684] DEBUG WriteOnlyServer-62792180 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 23:01:41,106 [10684] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 23:01:41,107 [10684] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 23:01:41,155 [11044] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:41,160 [8236] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:41,215 [1200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:01:41,234 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:01:41,240 [5200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:01:41,240 [9556] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:01:41,242 [1200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 23:01:41,243 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:01:41,245 [15984] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:01:41,246 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:01:41,248 [10428] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:01:41,248 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:01:41,250 [5200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:01:41,251 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:01:41,253 [1200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:01:41,254 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:01:41,256 [15984] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:01:41,256 [9556] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:01:41,266 [10428] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6869)
2016-02-29 23:01:41,268 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:01:41,273 [8236] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:01:41,315 [10684] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:01:41,315 [10684] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:01:41,319 [10684] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 23:01:41,320 [10684] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 23:01:41,322 [8236] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:41,322 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:41,323 [5200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:01:41,324 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:01:41,325 [10428] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:01:41,326 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:01:41,326 [1200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 23:01:41,327 [9556] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:01:41,328 [15984] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:01:41,328 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:01:41,329 [5200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:01:41,329 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:01:41,330 [10428] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:01:41,330 [9556] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:01:41,331 [1200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:01:41,332 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:01:41,332 [15984] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:01:41,333 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:01:41,334 [5200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6869)
2016-02-29 23:01:41,335 [9556] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:01:41,335 [9556] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:01:41,349 [10684] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 23:01:41,356 [10428] DEBUG WriteOnlyServer-62792180 - insert into Maker (ID, Name) values ('189cc1c9-3e37-4ada-9f07-8b99bd31f23e', 'soime');
2016-02-29 23:01:41,359 [10428] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 184)
2016-02-29 23:01:41,437 [8236] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 23:01:41,438 [8236] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 189cc1c9-3e37-4ada-9f07-8b99bd31f23e)
2016-02-29 23:01:41,881 [10684] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:01:41,881 [10684] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:01:41,883 [10684] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 23:01:41,884 [10684] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 23:01:41,899 [9556] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:41,900 [9556] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:41,901 [10428] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:01:41,903 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:01:41,903 [1200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:01:41,904 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:01:41,905 [15984] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1214)
2016-02-29 23:01:41,906 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:01:41,907 [5200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:01:41,908 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:01:41,909 [10428] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:01:41,909 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:01:41,910 [1200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:01:41,911 [9556] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:01:41,912 [15984] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:01:41,913 [9556] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:01:41,913 [5200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:01:41,914 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:01:41,915 [10428] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6869)
2016-02-29 23:01:41,916 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:01:41,917 [8236] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:01:41,919 [10684] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 23:01:41,920 [1200] DEBUG WriteOnlyServer-62792180 - delete from Maker where ID = '0ce1bf2d-8bda-4b7b-9dcf-f34c79349fe4';
2016-02-29 23:01:41,923 [1200] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 23:01:41,923 [1200] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 23:01:41,923 [1200] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = '0ce1bf2d-8bda-4b7b-9dcf-f34c79349fe4';
2016-02-29 23:01:41,928 [1200] DEBUG WriteOnlyServer-62792180 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 23:01:41,928 [9556] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: DELT, TYPE: Maker)
2016-02-29 23:01:41,931 [9556] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 0ce1bf2d-8bda-4b7b-9dcf-f34c79349fe4)
2016-02-29 23:01:41,932 [9556] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 23:01:41,932 [9556] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 23:01:41,933 [9556] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 23:01:41,933 [9556] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 23:01:41,935 [15984] DEBUG WriteOnlyServer-62792180 - update InventoryFormat set MakerID = '' where ID = '102f2897-fbb3-4101-a9a8-75ca083da27e';
2016-02-29 23:01:41,943 [15984] DEBUG WriteOnlyServer-62792180 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 351)
2016-02-29 23:01:41,943 [9556] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: UPDT, TYPE: InventoryFormat)
2016-02-29 23:01:41,944 [15984] DEBUG WriteOnlyServer-62792180 - update InventoryFormat set MakerID = '' where ID = '13451702-ad01-4ef6-b823-e2acd736005d';
2016-02-29 23:01:41,945 [9556] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 102f2897-fbb3-4101-a9a8-75ca083da27e)
2016-02-29 23:01:41,946 [15984] DEBUG WriteOnlyServer-62792180 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 345)
2016-02-29 23:01:41,946 [9556] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: UPDT, TYPE: InventoryFormat)
2016-02-29 23:01:41,946 [9556] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 13451702-ad01-4ef6-b823-e2acd736005d)
2016-02-29 23:01:41,946 [15984] DEBUG WriteOnlyServer-62792180 - update InventoryFormat set MakerID = '' where ID = '688c0f0a-6371-4f28-bf18-25c220f3bbf3';
2016-02-29 23:01:41,948 [15984] DEBUG WriteOnlyServer-62792180 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 353)
2016-02-29 23:01:41,949 [9556] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: UPDT, TYPE: InventoryFormat)
2016-02-29 23:01:41,949 [9556] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 688c0f0a-6371-4f28-bf18-25c220f3bbf3)
2016-02-29 23:01:41,949 [15984] DEBUG WriteOnlyServer-62792180 - update InventoryFormat set MakerID = '' where ID = '6b43bd12-df7c-4ef0-baf1-ffb10156d756';
2016-02-29 23:01:41,951 [15984] DEBUG WriteOnlyServer-62792180 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 351)
2016-02-29 23:01:41,951 [9556] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: UPDT, TYPE: InventoryFormat)
2016-02-29 23:01:41,951 [9556] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 6b43bd12-df7c-4ef0-baf1-ffb10156d756)
2016-02-29 23:01:42,036 [10684] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:01:42,037 [10684] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:01:42,044 [10684] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 23:01:42,052 [10684] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 23:01:42,063 [9556] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:42,063 [9556] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:42,066 [1200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:01:42,069 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:01:42,071 [10428] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:01:42,072 [9556] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:01:42,074 [15984] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1156)
2016-02-29 23:01:42,075 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:01:42,077 [5200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:01:42,078 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:01:42,079 [1200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:01:42,081 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:01:42,082 [10428] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:01:42,083 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:01:42,086 [15984] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:01:42,087 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:01:42,089 [5200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:01:42,090 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:01:42,093 [1200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6725)
2016-02-29 23:01:42,095 [9556] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:01:42,095 [9556] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:01:42,245 [10684] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 23:01:42,246 [10428] DEBUG WriteOnlyServer-62792180 - insert into Product (ID, Name) values ('53c90fb2-d970-4223-906e-682f1cdddadc', '새로운 제품');
2016-02-29 23:01:42,254 [10428] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 197)
2016-02-29 23:01:42,255 [9556] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Product)
2016-02-29 23:01:42,255 [9556] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Product, ID: 53c90fb2-d970-4223-906e-682f1cdddadc)
2016-02-29 23:01:42,362 [10684] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:01:42,362 [10684] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:01:42,371 [10684] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 23:01:42,371 [10684] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 23:01:42,377 [8236] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:42,377 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:42,379 [1200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:01:42,382 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:01:42,384 [15984] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:01:42,386 [9556] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:01:42,387 [10428] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1156)
2016-02-29 23:01:42,389 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:01:42,390 [5200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:01:42,391 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:01:42,393 [1200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 23:01:42,394 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:01:42,397 [5200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:01:42,398 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:01:42,400 [1200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:01:42,401 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:01:42,403 [15984] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:01:42,404 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:01:42,407 [10428] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6725)
2016-02-29 23:01:42,409 [9556] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:01:42,410 [9556] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:01:42,416 [10684] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 23:01:42,417 [5200] DEBUG WriteOnlyServer-62792180 - insert into Maker (ID, Name) values ('06098b97-62f7-4bb7-93bd-cc8d90da4391', 'some maker');
2016-02-29 23:01:42,417 [10684] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Measure)
2016-02-29 23:01:42,419 [10684] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:InventoryFormat)
2016-02-29 23:01:42,425 [5200] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 189)
2016-02-29 23:01:42,426 [8236] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 23:01:42,426 [8236] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 06098b97-62f7-4bb7-93bd-cc8d90da4391)
2016-02-29 23:01:42,426 [5200] DEBUG WriteOnlyServer-62792180 - insert into Measure (ID, Name) values ('87b8f27a-d034-41ae-b5fc-99ca314610b1', 'some measure');
2016-02-29 23:01:42,434 [5200] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Measure, SIZE: 193)
2016-02-29 23:01:42,435 [8236] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Measure)
2016-02-29 23:01:42,435 [5200] DEBUG WriteOnlyServer-62792180 - insert into InventoryFormat (ID, Specification, Quantity, Memo, ProductID, MakerID, MeasureID) values ('95ff4d02-1619-4b16-bbda-9f0094cd8069', 'some specification', '0', 'spec', 'cc64e970-57ae-4559-b6cc-4e5088e6e639', '06098b97-62f7-4bb7-93bd-cc8d90da4391', '87b8f27a-d034-41ae-b5fc-99ca314610b1');
2016-02-29 23:01:42,435 [8236] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: 87b8f27a-d034-41ae-b5fc-99ca314610b1)
2016-02-29 23:01:42,438 [5200] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 394)
2016-02-29 23:01:42,449 [8236] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: InventoryFormat)
2016-02-29 23:01:42,449 [8236] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 95ff4d02-1619-4b16-bbda-9f0094cd8069)
2016-02-29 23:01:42,529 [10684] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:01:42,529 [10684] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:01:54,576 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 23:01:54,585 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 23:01:54,585 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 23:01:54,585 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 23:01:54,585 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 23:01:54,645 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 23:01:54,645 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 23:01:54,645 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 23:01:54,668 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - Listener (127.0.0.1:4000) was started
2016-02-29 23:01:54,670 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - Listener (127.0.0.1:4001) was started
2016-02-29 23:01:54,701 [11044] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:54,707 [10544] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:54,741 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:01:54,742 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:01:54,745 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - Listener (127.0.0.1:4000) was started
2016-02-29 23:01:54,745 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - Listener (127.0.0.1:4001) was started
2016-02-29 23:01:54,747 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:01:54,747 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:01:54,749 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - Listener (127.0.0.1:4000) was started
2016-02-29 23:01:54,749 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - Listener (127.0.0.1:4001) was started
2016-02-29 23:01:54,761 [11908] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:54,761 [11908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:54,842 [5200] DEBUG ReadOnlyServer-32561452 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:01:54,859 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:01:54,864 [10544] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Product)
2016-02-29 23:01:54,870 [5336] DEBUG WriteOnlyServer-2433350 - delete from Product where ID = '59b5341c-8fc3-4212-b88f-3aea7e0e26e0';
2016-02-29 23:01:54,880 [5336] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 23:01:54,880 [5336] DEBUG R54IN0.Server.DeleteCommand - KillInventoryFormat
2016-02-29 23:01:54,880 [5336] DEBUG R54IN0.Server.DeleteCommand - delete from IOStockFormat where InventoryID in (select ID from InventoryFormat where ProductID = '59b5341c-8fc3-4212-b88f-3aea7e0e26e0');
2016-02-29 23:01:54,886 [5336] DEBUG R54IN0.Server.DeleteCommand - delete from InventoryFormat where ProductID = '59b5341c-8fc3-4212-b88f-3aea7e0e26e0';
2016-02-29 23:01:54,888 [5336] DEBUG WriteOnlyServer-2433350 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Product, SIZE: 164)
2016-02-29 23:01:54,893 [10428] DEBUG ReadOnlyServer-32561452 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Product, BYTE SIZE: 128)
2016-02-29 23:01:54,894 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Product)
2016-02-29 23:01:54,899 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:01:54,899 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:01:54,907 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - Listener (127.0.0.1:4000) was started
2016-02-29 23:01:54,909 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - Listener (127.0.0.1:4001) was started
2016-02-29 23:01:54,920 [10544] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:54,920 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:54,933 [5336] DEBUG ReadOnlyServer-32561452 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:01:54,935 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:01:54,936 [10544] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Employee)
2016-02-29 23:01:54,936 [4140] DEBUG WriteOnlyServer-2433350 - delete from Employee where ID = '760ec922-eb84-4782-b00b-bf3dc6957caa';
2016-02-29 23:01:54,939 [4140] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 23:01:54,939 [4140] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 23:01:54,939 [4140] DEBUG R54IN0.Server.DeleteCommand - update IOStockFormat set EmployeeID = '' where EmployeeID = '760ec922-eb84-4782-b00b-bf3dc6957caa';
2016-02-29 23:01:54,942 [4140] DEBUG WriteOnlyServer-2433350 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Employee, SIZE: 165)
2016-02-29 23:01:54,947 [5200] DEBUG ReadOnlyServer-32561452 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Employee, BYTE SIZE: 129)
2016-02-29 23:01:54,948 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Employee)
2016-02-29 23:01:54,951 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:01:54,952 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:01:54,953 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - Listener (127.0.0.1:4000) was started
2016-02-29 23:01:54,953 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - Listener (127.0.0.1:4001) was started
2016-02-29 23:01:54,960 [10544] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:54,960 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:54,973 [1200] DEBUG ReadOnlyServer-32561452 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 23:01:54,977 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:01:54,977 [10544] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 23:01:54,977 [10428] DEBUG WriteOnlyServer-2433350 - delete from Maker where ID = 'c92f5233-875a-4ca3-9c85-c3439a338991';
2016-02-29 23:01:54,986 [10428] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 23:01:54,986 [10428] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 23:01:54,986 [10428] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = 'c92f5233-875a-4ca3-9c85-c3439a338991';
2016-02-29 23:01:54,987 [10428] DEBUG WriteOnlyServer-2433350 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 23:01:54,999 [15984] DEBUG ReadOnlyServer-32561452 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Maker, BYTE SIZE: 126)
2016-02-29 23:01:55,000 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Maker)
2016-02-29 23:01:55,003 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:01:55,003 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:01:55,005 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - Listener (127.0.0.1:4000) was started
2016-02-29 23:01:55,006 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - Listener (127.0.0.1:4001) was started
2016-02-29 23:01:55,018 [10544] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:55,018 [10544] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:55,029 [4140] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 23:01:55,032 [5336] DEBUG WriteOnlyServer-2433350 - insert into Product (ID, Name) values ('329c66a7-3349-46cd-9853-4771c55451bb', 'new');
2016-02-29 23:01:55,033 [5336] DEBUG WriteOnlyServer-2433350 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 184)
2016-02-29 23:01:55,040 [5200] DEBUG ReadOnlyServer-32561452 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Product, BYTE SIZE: 186)
2016-02-29 23:01:55,042 [11908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Product)
2016-02-29 23:01:55,049 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:01:55,049 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:01:55,060 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - Listener (127.0.0.1:4000) was started
2016-02-29 23:01:55,060 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - Listener (127.0.0.1:4001) was started
2016-02-29 23:01:55,067 [11908] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:55,067 [11908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:55,078 [11176] DEBUG ReadOnlyServer-32561452 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 860)
2016-02-29 23:01:55,083 [11908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:01:55,087 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:01:55,087 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:01:55,090 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - Listener (127.0.0.1:4000) was started
2016-02-29 23:01:55,093 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - Listener (127.0.0.1:4001) was started
2016-02-29 23:01:55,097 [11908] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:55,097 [11908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:55,108 [5336] DEBUG ReadOnlyServer-32561452 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 860)
2016-02-29 23:01:55,110 [11908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:01:55,111 [5200] DEBUG ReadOnlyServer-32561452 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Product, BYTE SIZE: 193)
2016-02-29 23:01:55,111 [11908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Product)
2016-02-29 23:01:55,115 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:01:55,115 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:01:55,117 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - Listener (127.0.0.1:4000) was started
2016-02-29 23:01:55,117 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - Listener (127.0.0.1:4001) was started
2016-02-29 23:01:55,124 [11908] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:55,125 [11908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:55,142 [17328] DEBUG ReadOnlyServer-32561452 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6548)
2016-02-29 23:01:55,145 [11908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:01:55,147 [15984] DEBUG ReadOnlyServer-32561452 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: InventoryFormat, BYTE SIZE: 385)
2016-02-29 23:01:55,148 [11908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:InventoryFormat)
2016-02-29 23:01:55,152 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:01:55,152 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:01:55,154 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - Listener (127.0.0.1:4000) was started
2016-02-29 23:01:55,154 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - Listener (127.0.0.1:4001) was started
2016-02-29 23:01:55,160 [11908] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:55,160 [11908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:01:55,172 [4140] DEBUG ReadOnlyServer-32561452 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 860)
2016-02-29 23:01:55,174 [11908] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:01:55,174 [11908] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:Product)
2016-02-29 23:01:55,177 [10428] DEBUG WriteOnlyServer-2433350 - update Product set Name = 'some' where ID = '52a79348-d091-4acd-8ae3-b2dce1da474f';
2016-02-29 23:01:55,184 [10428] DEBUG WriteOnlyServer-2433350 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 185)
2016-02-29 23:01:55,186 [5200] DEBUG ReadOnlyServer-32561452 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Product, BYTE SIZE: 187)
2016-02-29 23:01:55,187 [8236] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Product)
2016-02-29 23:01:55,195 [TestRunnerThread] DEBUG ReadOnlyServer-32561452 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:01:55,195 [TestRunnerThread] DEBUG WriteOnlyServer-2433350 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:01:56,445 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 68b05d88-b9e2-4026-903b-52a1aba513d5)
2016-02-29 23:01:56,467 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 4d1d6ceb-17f5-4251-9d88-f03e909b89f6)
2016-02-29 23:01:56,473 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 8cfcc158-9f04-4ff3-bd7b-ff0dab0d0eee)
2016-02-29 23:01:56,476 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ca2250fe-cce9-4a79-bf03-20a6624958df)
2016-02-29 23:01:57,979 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: Maker, ID: 87fa02b0-65b8-46e7-bb4e-63bf1b14186b)
2016-02-29 23:01:57,981 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: Measure, ID: 387c4728-6255-40d2-ab2e-5eec3e5fbc45)
2016-02-29 23:01:57,985 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: e1021d17-e4f3-4d10-a128-b477a9222c25)
2016-02-29 23:01:57,985 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Specification Convert KCB-101D to some specification
2016-02-29 23:01:57,985 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Memo Convert  to memo
2016-02-29 23:01:57,992 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 0428e45c-7c71-4ea4-9092-eabb874fa810)
2016-02-29 23:01:57,992 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Specification Convert KCB-104D to some specification
2016-02-29 23:01:57,992 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Memo Convert  to memo
2016-02-29 23:01:57,992 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: MakerID Convert 87fa02b0-65b8-46e7-bb4e-63bf1b14186b to c1afef70-d260-4efd-887e-434199dbc15c
2016-02-29 23:01:58,005 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: d700e7b2-ce64-4557-81dc-7034cfd504b1)
2016-02-29 23:01:58,007 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: 5dd26bc0-c601-49e4-b94c-9131fa9a1019)
2016-02-29 23:01:58,010 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 20e4ebbe-4605-41c9-b246-a78e7660befc)
2016-02-29 23:01:58,020 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: cc969d5d-a7d2-4312-8827-b308f99f5d10)
2016-02-29 23:01:58,185 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: cbb770f3-e199-499d-ba5c-07404bf04677)
2016-02-29 23:01:58,195 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: df698b41-3e17-454c-9588-9006bc34a873)
2016-02-29 23:02:01,121 [6908] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:02:01,351 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 43135c41-db2f-4d31-8345-45704f41c624)
2016-02-29 23:02:01,351 [6908] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:02:01,357 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 07572649-6836-40d1-8e72-e38cd8a535ce)
2016-02-29 23:02:01,367 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 7107afb7-5cc1-49c9-af72-427b8b7175c0)
2016-02-29 23:02:01,367 [6908] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 10 to 20
2016-02-29 23:02:01,372 [6908] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:02:01,376 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: b1bd76a0-3de5-4c10-9bed-4cab65c10b36)
2016-02-29 23:02:01,380 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1fb1ad3c-abee-4f8d-8ca9-c9f1922fe8a3)
2016-02-29 23:02:01,380 [6908] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -4 to -3
2016-02-29 23:02:01,385 [6908] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:02:01,389 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: c714cff3-eb85-4244-9276-dbfc88cce22c)
2016-02-29 23:02:01,392 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Warehouse, ID: c8d93077-6e1b-4cfa-aee6-466056f6fcf9)
2016-02-29 23:02:01,394 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: bf03664d-5a26-4a3f-813e-3c8ceb8d7d6c)
2016-02-29 23:02:01,396 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: da10551e-015a-412d-b002-825a5e2c8e65)
2016-02-29 23:02:01,399 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 744721a0-0899-452a-91e9-fd7d44f90a5b)
2016-02-29 23:02:01,399 [6908] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 1 to 2
2016-02-29 23:02:01,405 [6908] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:02:01,408 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: c64d81e3-e515-4c41-a1d5-265aa557a938)
2016-02-29 23:02:01,412 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: cb9de952-c07a-480f-9707-602f67b987c6)
2016-02-29 23:02:01,412 [6908] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -5 to -6
2016-02-29 23:02:01,417 [6908] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:02:01,421 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Customer, ID: e27addfc-5594-4e94-aae6-59d9ba87940a)
2016-02-29 23:02:01,423 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Project, ID: 5aec6d6d-c04f-4f78-b4e1-328c09cba7f4)
2016-02-29 23:02:01,426 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: fdedb026-0c2c-4e7a-8ff6-915dc3290d55)
2016-02-29 23:02:01,428 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: b561e121-5fe3-44ab-b5a9-1922d88e5d59)
2016-02-29 23:02:01,432 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: cb9de952-c07a-480f-9707-602f67b987c6)
2016-02-29 23:02:01,432 [6908] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -6 to -7
2016-02-29 23:02:01,441 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 3c6c112a-97fa-4782-9617-3ba998b4541c)
2016-02-29 23:02:01,459 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 1a19bd48-8991-4709-8623-4001d7b6d726)
2016-02-29 23:02:01,467 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 101a48f9-1fb0-45ab-9879-b76b6214a9e3)
2016-02-29 23:02:01,476 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: Customer, ID: c173a7d7-44c0-4fa7-8b16-587cf9fbd649)
2016-02-29 23:02:01,479 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: Project, ID: 41b9ac39-affe-45c5-8750-2a4f624b50b7)
2016-02-29 23:02:01,481 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: Employee, ID: 31c06a08-8d38-4a0e-be9b-43e332a23c33)
2016-02-29 23:02:01,517 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 48c51243-d03f-4db5-b40d-86d9704a7672)
2016-02-29 23:02:01,517 [6908] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:02:01,521 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 7c99f3d8-4b76-49c6-a59a-2bebb4207147)
2016-02-29 23:02:01,526 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 48c51243-d03f-4db5-b40d-86d9704a7672)
2016-02-29 23:02:01,526 [6908] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 0 to 1
2016-02-29 23:02:01,526 [6908] DEBUG R54IN0.WPF.DataDirector - update Property: Memo Convert  to 
2016-02-29 23:02:01,526 [6908] DEBUG R54IN0.WPF.DataDirector - update Property: MakerID Convert  to 
2016-02-29 23:02:01,527 [6908] DEBUG R54IN0.WPF.DataDirector - update Property: MeasureID Convert  to 
2016-02-29 23:02:01,527 [6908] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:02:01,529 [6908] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:02:01,539 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 0d104800-d682-4739-a8e4-bd2088f67b24)
2016-02-29 23:02:01,544 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 48c51243-d03f-4db5-b40d-86d9704a7672)
2016-02-29 23:02:01,544 [6908] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 1 to 0
2016-02-29 23:02:01,544 [6908] DEBUG R54IN0.WPF.DataDirector - update Property: MakerID Convert  to 
2016-02-29 23:02:01,544 [6908] DEBUG R54IN0.WPF.DataDirector - update Property: MeasureID Convert  to 
2016-02-29 23:02:01,544 [6908] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:02:01,546 [6908] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:02:01,552 [6908] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:02:01,558 [6908] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:02:01,561 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 6a687723-59e7-49e5-a04a-f2588227797a)
2016-02-29 23:02:01,565 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ede65794-10de-4357-ac29-fed19f3cb6a7)
2016-02-29 23:02:01,565 [6908] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -3 to -2
2016-02-29 23:02:01,565 [6908] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:02:01,570 [6908] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:02:01,571 [6908] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:02:01,575 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: cd549f88-3f01-4db1-9d48-2adec391d2a1)
2016-02-29 23:02:01,578 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 7107afb7-5cc1-49c9-af72-427b8b7175c0)
2016-02-29 23:02:01,578 [6908] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 20 to 19
2016-02-29 23:02:01,578 [6908] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:02:01,580 [6908] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:02:02,373 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 06dbee2e-943e-4066-b413-35fc6c2ebdd8)
2016-02-29 23:02:02,373 [6908] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 6 to 10
2016-02-29 23:02:02,377 [6908] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 99d908d4-3544-4939-abd8-95da12947751)
2016-02-29 23:02:02,378 [6908] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -16 to -20
2016-02-29 23:02:03,723 [9732] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:02:03,724 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 06829fc7-df9c-4390-9a82-1d4c6e65907e)
2016-02-29 23:02:03,728 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 2ebb387b-1d35-43e4-b362-c325d7e7b797)
2016-02-29 23:02:03,728 [9732] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -7 to -6
2016-02-29 23:02:03,772 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 5c7d8de9-f765-40b8-861f-69e528001797)
2016-02-29 23:02:03,772 [9732] DEBUG R54IN0.WPF.DataDirector - update Property: Date Convert 12/15/2015 23:02:03 to 02/29/2016 23:02:03
2016-02-29 23:02:03,774 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 24a90580-4888-4423-8039-00d08eb3d8dd)
2016-02-29 23:02:03,813 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 856670f3-f402-4bdd-92d1-a8fa2631d44e)
2016-02-29 23:02:03,813 [9732] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 4 to 100
2016-02-29 23:02:03,816 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: a310677e-1e96-46d9-b57e-2686f91e3f38)
2016-02-29 23:02:03,816 [9732] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 4 to 100
2016-02-29 23:02:03,828 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 0d48fa52-df3c-4796-bb22-a5f8bbad4311)
2016-02-29 23:02:03,828 [9732] DEBUG R54IN0.WPF.DataDirector - update Property: StockType Convert INCOMING to OUTGOING
2016-02-29 23:02:03,828 [9732] DEBUG R54IN0.WPF.DataDirector - update Property: SupplierID Convert 6dddfd2b-a4fc-48bd-be51-6ee9cd79d7d8 to 
2016-02-29 23:02:03,829 [9732] DEBUG R54IN0.WPF.DataDirector - update Property: WarehouseID Convert 198e6cc4-76c8-4264-bf55-4abe3ad6e6ee to 
2016-02-29 23:02:03,831 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 494bdba1-b286-4a3c-a795-24675f10cfc0)
2016-02-29 23:02:03,831 [9732] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 1 to -11
2016-02-29 23:02:03,864 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 5f28f884-393b-404f-8e46-6cd4b3f2d688)
2016-02-29 23:02:03,866 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: b1f25e3a-810e-4030-b3cb-fab58d54357a)
2016-02-29 23:02:03,866 [9732] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 10 to 17
2016-02-29 23:02:03,879 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 463fae81-b0ba-4c08-a7b8-f7c93ce07f44)
2016-02-29 23:02:03,881 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: b1f25e3a-810e-4030-b3cb-fab58d54357a)
2016-02-29 23:02:03,881 [9732] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 10 to 8
2016-02-29 23:02:03,892 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: e9be1655-f0d2-44e8-9b79-4091a54a72f2)
2016-02-29 23:02:03,894 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 81d3c031-c60f-46a9-a103-df4c9541a68a)
2016-02-29 23:02:03,894 [9732] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -1 to 3
2016-02-29 23:02:03,906 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: a5fe56dc-0f8a-483c-b317-cd2cfcb71a37)
2016-02-29 23:02:03,907 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 191119ba-0cbe-41b3-bc2c-de9820a877ea)
2016-02-29 23:02:03,907 [9732] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -4 to 4
2016-02-29 23:02:03,933 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 494bdba1-b286-4a3c-a795-24675f10cfc0)
2016-02-29 23:02:03,934 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 28966cb8-8ea9-4e03-9c82-3e514c32f94b)
2016-02-29 23:02:03,935 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 0d48fa52-df3c-4796-bb22-a5f8bbad4311)
2016-02-29 23:02:03,936 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: cb970190-7a31-4719-98d5-0fb12ce1e460)
2016-02-29 23:02:03,937 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 5e8a5a18-1784-4168-b5db-992a73a75910)
2016-02-29 23:02:03,937 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 184f5cd3-024a-44e1-a229-34ae48caf2ac)
2016-02-29 23:02:03,938 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: daabed19-d19d-44e8-b4a9-14ba0b4a10ae)
2016-02-29 23:02:03,939 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 78ce0ec2-cbf7-4eff-aa1a-4c10f3af98f7)
2016-02-29 23:02:03,940 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: a8021d73-edb7-4ea7-8bc9-64b741bc453e)
2016-02-29 23:02:03,940 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 27c8f18d-75f6-407b-9b8c-f07159d2e012)
2016-02-29 23:02:03,941 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 3030c80b-ff19-4ff5-ab56-71e8757ab5c5)
2016-02-29 23:02:03,942 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: cbfccca1-bc59-4c16-ac19-f847685d272f)
2016-02-29 23:02:03,943 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 7b8e484b-f117-46e1-9eb6-b711b01311e0)
2016-02-29 23:02:03,959 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 9c875c32-b905-4eb8-b439-e279c9c9eb10)
2016-02-29 23:02:03,961 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f5378e15-8939-44e4-adc5-079efe1283d1)
2016-02-29 23:02:03,961 [9732] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 5 to 4
2016-02-29 23:02:03,972 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 46a44c20-77c7-4891-830f-31782d12ad8f)
2016-02-29 23:02:03,973 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 70d15745-28eb-41b7-b88b-ccc6b62d6e0b)
2016-02-29 23:02:03,974 [9732] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 11 to 13
2016-02-29 23:02:03,985 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: c5207a6b-add7-473c-a7ea-6e5a598ee84f)
2016-02-29 23:02:03,988 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: b1f25e3a-810e-4030-b3cb-fab58d54357a)
2016-02-29 23:02:03,988 [9732] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 10 to 19
2016-02-29 23:02:04,001 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Project, id: 0936b318-8ca0-4581-a6da-a8ef30bd4cbc)
2016-02-29 23:02:04,002 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 7bc4d318-b733-4410-8132-13c2f6b23f4b)
2016-02-29 23:02:04,005 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 17af0448-22dc-4331-9f18-71b564e25ab9)
2016-02-29 23:02:04,005 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 949c6407-5dd6-4d62-87e7-181448dcae87)
2016-02-29 23:02:04,007 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 666fe942-ab3a-46b2-8ba4-d2a5e4af25df)
2016-02-29 23:02:04,008 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 7b7881f9-ca4a-447d-8745-bac0ea59f6af)
2016-02-29 23:02:04,009 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: b1f25e3a-810e-4030-b3cb-fab58d54357a)
2016-02-29 23:02:04,010 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 0110858f-7c65-4f28-81a1-ba7e3f13d840)
2016-02-29 23:02:04,012 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 17af0448-22dc-4331-9f18-71b564e25ab9)
2016-02-29 23:02:04,012 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: adfdcb0c-6098-40c0-9e33-a2ae325ef8b4)
2016-02-29 23:02:04,014 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 2ebb387b-1d35-43e4-b362-c325d7e7b797)
2016-02-29 23:02:04,015 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: b4203424-804c-4158-a4ba-0aba7ffa7782)
2016-02-29 23:02:04,016 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1dd831bc-5183-40d2-ae45-725a544c0e39)
2016-02-29 23:02:04,017 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 231d1f18-2f65-4c66-9972-bd009eaa4ec8)
2016-02-29 23:02:04,019 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: d7391aef-75ea-4452-a3cf-0092739603d0)
2016-02-29 23:02:04,019 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 48aa7a63-3979-4349-a589-6ede5fb9c1a0)
2016-02-29 23:02:04,021 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 164e1312-a764-455c-b7d1-6e65c6767b12)
2016-02-29 23:02:04,022 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 0819ff09-7611-436c-bfaf-c5cf64ee2872)
2016-02-29 23:02:04,023 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f5378e15-8939-44e4-adc5-079efe1283d1)
2016-02-29 23:02:04,024 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 2884a41a-e7ad-40f6-9171-58fa2700b0e6)
2016-02-29 23:02:04,026 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 17af0448-22dc-4331-9f18-71b564e25ab9)
2016-02-29 23:02:04,026 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 4e0b2f4f-7f1a-436b-9f8d-71170477bcfe)
2016-02-29 23:02:04,030 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 24a90580-4888-4423-8039-00d08eb3d8dd)
2016-02-29 23:02:04,031 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 554d1e7a-12b6-42ea-b3ba-f64f1bf9868f)
2016-02-29 23:02:04,034 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 666fe942-ab3a-46b2-8ba4-d2a5e4af25df)
2016-02-29 23:02:04,034 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: aaf32e6b-35af-4bee-b1d4-7de21d9cd3a1)
2016-02-29 23:02:04,036 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 527fb953-c874-4bc5-ab04-3b311dfe8c32)
2016-02-29 23:02:04,037 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: cad37289-8038-482a-8800-a6bca7ea61c8)
2016-02-29 23:02:04,038 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 2ebb387b-1d35-43e4-b362-c325d7e7b797)
2016-02-29 23:02:04,039 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: cb970190-7a31-4719-98d5-0fb12ce1e460)
2016-02-29 23:02:04,041 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 494bdba1-b286-4a3c-a795-24675f10cfc0)
2016-02-29 23:02:04,042 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 1a8dd981-3b09-462b-9f54-ec8924649537)
2016-02-29 23:02:04,045 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: d7391aef-75ea-4452-a3cf-0092739603d0)
2016-02-29 23:02:04,045 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 00f21900-aaf5-439c-a523-54fee32db3da)
2016-02-29 23:02:04,047 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 81d3c031-c60f-46a9-a103-df4c9541a68a)
2016-02-29 23:02:04,048 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 0ca4c76b-8247-4999-b3dc-868299984429)
2016-02-29 23:02:04,050 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 426c506a-4585-4bc9-8677-e0981dd2b467)
2016-02-29 23:02:04,050 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 3578cc6d-df79-44ba-9c36-8ae6aa9365a0)
2016-02-29 23:02:04,052 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 773401ee-9fca-40b3-afa1-ab7c32167a46)
2016-02-29 23:02:04,053 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 46a44c20-77c7-4891-830f-31782d12ad8f)
2016-02-29 23:02:04,056 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 70d15745-28eb-41b7-b88b-ccc6b62d6e0b)
2016-02-29 23:02:04,057 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: bb09fbaa-c536-42d0-b479-51a47287a17f)
2016-02-29 23:02:04,059 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 3c4d894b-64d4-4c93-9f90-874634345e3f)
2016-02-29 23:02:04,060 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: e21f0cff-b439-43f9-abda-54634468e352)
2016-02-29 23:02:04,062 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 82e4c4b8-9fd3-47a9-b3c6-f9877dded70c)
2016-02-29 23:02:04,062 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 64ffac3c-c8fc-4afc-80db-468a49ba8f2c)
2016-02-29 23:02:04,064 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 225b0bf2-3d7f-4617-933d-8dedfe2f1d49)
2016-02-29 23:02:04,065 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 920a868f-b323-4d77-97ec-f9275d6e735f)
2016-02-29 23:02:04,067 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 81d3c031-c60f-46a9-a103-df4c9541a68a)
2016-02-29 23:02:04,067 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 22ce8fa8-9efb-4c69-91ec-c7355a085994)
2016-02-29 23:02:04,069 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 95842838-a361-4ba4-bd50-4878dd9245ae)
2016-02-29 23:02:04,070 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 43ec2e5f-a9db-403f-a421-0b6aea1e8d41)
2016-02-29 23:02:04,072 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 9242b194-4ca9-4beb-a3c6-cdc6b629766a)
2016-02-29 23:02:04,072 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: af2f940b-7bb5-4747-bfe7-a4c069b3e2ae)
2016-02-29 23:02:04,074 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: b1f25e3a-810e-4030-b3cb-fab58d54357a)
2016-02-29 23:02:04,075 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: b8dc2ea3-1647-4458-ace2-ac6d767c7b48)
2016-02-29 23:02:04,077 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f5378e15-8939-44e4-adc5-079efe1283d1)
2016-02-29 23:02:04,077 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 18f0d2a6-7a00-4179-9fef-ffc596925a4c)
2016-02-29 23:02:04,080 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 388f940f-78aa-4333-b558-bfaf8b2cbfab)
2016-02-29 23:02:04,081 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 27c8f18d-75f6-407b-9b8c-f07159d2e012)
2016-02-29 23:02:04,083 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 494bdba1-b286-4a3c-a795-24675f10cfc0)
2016-02-29 23:02:04,083 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 2ab374cf-11bd-4bdb-8c73-00aa30786525)
2016-02-29 23:02:04,085 [9732] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 773401ee-9fca-40b3-afa1-ab7c32167a46)
2016-02-29 23:02:05,460 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 1ede707a-26d4-4a4d-aa6d-548b5fa9802f)
2016-02-29 23:02:05,476 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: ca54aa30-a0ff-4782-b7f5-a50ce0c8c31f)
2016-02-29 23:02:05,486 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: a165d266-5e5c-4528-97a1-733ff939a927)
2016-02-29 23:02:05,496 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: a165d266-5e5c-4528-97a1-733ff939a927)
2016-02-29 23:02:05,519 [14712] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: cfeb3bdb-45e9-463d-a8f9-82d3b40a6c64)
2016-02-29 23:02:05,519 [14712] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 6662cbb9-e518-4bf9-b12b-9d2e205b29cc)
2016-02-29 23:02:05,527 [14712] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 355db6e2-3cf1-48e1-9568-7cbfdbfd6e5c)
2016-02-29 23:02:05,535 [14712] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: cd84817a-0d0a-40bf-92d5-3f58ef6b92f6)
2016-02-29 23:02:05,540 [14712] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 51d516aa-04e5-4797-9363-2271f5ba7429)
2016-02-29 23:02:05,546 [14712] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: aa3f26f7-eb95-47b9-be71-a59ae11fe484)
2016-02-29 23:02:05,553 [14712] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: d4903a38-52a5-49af-b2e9-64244b887135)
2016-02-29 23:02:05,559 [14712] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: a2d9db60-9f9a-4721-9faa-d5cded7cc500)
2016-02-29 23:02:05,591 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: Product, ID: be213749-4aae-4a00-9ab6-c64b4a4d0fdc)
2016-02-29 23:02:05,623 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: a5d3a34e-f482-45ad-8d06-4a5873e1d02b)
2016-02-29 23:02:05,636 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: c7fa310d-aeec-448b-a3f2-9ad913bd8a02)
2016-02-29 23:02:05,643 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 101af890-e463-42cd-bb03-066771b4babc)
2016-02-29 23:02:05,643 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: df7ac814-ce95-48d3-87c1-5336aac829b3)
2016-02-29 23:02:05,645 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: eb55433a-1941-4028-a081-7216f51968e7)
2016-02-29 23:02:05,658 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Measure, id: 0f5cb17b-7e76-4c2e-8ee2-6ddb40a202b7)
2016-02-29 23:02:05,659 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 047f5314-49d3-462e-b41f-cb456f35a9ee)
2016-02-29 23:02:05,659 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1e526e62-2a42-47d5-a6d8-4741a01a6a09)
2016-02-29 23:02:05,660 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 2e32c7ef-b565-40db-8f99-4387e5dacb83)
2016-02-29 23:02:05,660 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 3b63898d-fb6f-4dd1-aca2-a0b2176b13e9)
2016-02-29 23:02:05,661 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 735a5b22-3cf4-4217-8ef3-4f575a354dd1)
2016-02-29 23:02:05,662 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 7bc2699c-93b5-45c0-bc11-ee6c488a0fa4)
2016-02-29 23:02:05,662 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ac6f71ea-6007-4090-9820-d2e8e2c25e3c)
2016-02-29 23:02:05,663 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: df7ac814-ce95-48d3-87c1-5336aac829b3)
2016-02-29 23:02:05,663 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: eb55433a-1941-4028-a081-7216f51968e7)
2016-02-29 23:02:05,664 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ecba97e6-92ef-4a05-8627-4268fa31cca2)
2016-02-29 23:02:08,648 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 0ae6f302-dca3-4edc-9dc3-ec88192da583)
2016-02-29 23:02:08,651 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 9aab4f7b-4d3b-4a36-b24e-1516dd8569f0)
2016-02-29 23:02:08,652 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -5 to -1
2016-02-29 23:02:08,654 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 0c12a309-4731-4fbe-bf23-6c84bef163be)
2016-02-29 23:02:08,658 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: a9ab1996-8274-4d0c-a9dd-85ec44aadc6d)
2016-02-29 23:02:08,658 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -4 to -1
2016-02-29 23:02:08,660 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 0f39ed54-7208-48bf-8cfe-3f643d09b405)
2016-02-29 23:02:08,663 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: edb80c26-48f9-4ffe-9e74-794f2fa57917)
2016-02-29 23:02:08,663 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -2 to 4
2016-02-29 23:02:08,666 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 124548b0-d973-46f6-a007-9bdd5d8b74cf)
2016-02-29 23:02:08,669 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 5716efb5-ba5d-4f3b-aebd-c649e9c4f9ce)
2016-02-29 23:02:08,669 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 1 to 9
2016-02-29 23:02:08,671 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 146415f4-badb-4ffd-a2db-9dccc3ace931)
2016-02-29 23:02:08,674 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 673ca0b8-89d6-4489-ba11-5a5d94e89fb1)
2016-02-29 23:02:08,675 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -6 to -2
2016-02-29 23:02:08,677 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 1647e86c-7cc7-40fb-b404-17819418ae26)
2016-02-29 23:02:08,680 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: a522c167-8988-480f-9085-aba2cca4ce69)
2016-02-29 23:02:08,680 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -9 to -7
2016-02-29 23:02:08,682 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 188cde71-58f8-4d98-8ccc-6d62f2436d67)
2016-02-29 23:02:08,685 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ce25df73-eb62-431d-9372-f94f99c4a639)
2016-02-29 23:02:08,685 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -3 to 3
2016-02-29 23:02:08,687 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 1fd20538-9611-401d-93c0-385a1cc586cd)
2016-02-29 23:02:08,690 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 5d1ba351-04b5-48a2-9872-214a70e417e3)
2016-02-29 23:02:08,690 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 1 to 8
2016-02-29 23:02:08,693 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 27b2c07b-8a24-4287-a174-594b9c93ca00)
2016-02-29 23:02:08,696 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 539f4834-a2c8-43f8-8e2b-f1a823e30a15)
2016-02-29 23:02:08,696 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -5 to -4
2016-02-29 23:02:08,699 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 28351f49-3e13-48b1-bd69-81cf1df6474a)
2016-02-29 23:02:08,703 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: b4986235-e12e-453a-a8de-10b9d81d0e2b)
2016-02-29 23:02:08,703 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -12 to -6
2016-02-29 23:02:08,706 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 296cbc9a-d593-41ef-8a45-4e2d986a7924)
2016-02-29 23:02:08,709 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: eadcfe4f-d356-43e4-93be-6e6d5a77d058)
2016-02-29 23:02:08,709 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -10 to -1
2016-02-29 23:02:08,711 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 38a8bd7c-3f8b-461f-8794-7742bfe16a0d)
2016-02-29 23:02:08,714 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: d53060ab-3879-439a-92db-6bc5d8dc9d5d)
2016-02-29 23:02:08,714 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 6 to 7
2016-02-29 23:02:08,716 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 39282f38-e084-4cbb-8f78-16df0fb44b1c)
2016-02-29 23:02:08,719 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 810611ce-8b21-46d3-b435-78d69038064f)
2016-02-29 23:02:08,720 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -7 to 1
2016-02-29 23:02:08,722 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 4022dad1-029a-4b6c-a97a-683079434474)
2016-02-29 23:02:08,725 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 9aab4f7b-4d3b-4a36-b24e-1516dd8569f0)
2016-02-29 23:02:08,725 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -1 to 8
2016-02-29 23:02:08,728 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 4443dcd1-112f-41d2-8198-d15cf8f521c3)
2016-02-29 23:02:08,731 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: c27a4608-a086-4785-bd44-d4e509757dfa)
2016-02-29 23:02:08,731 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -25 to -24
2016-02-29 23:02:08,734 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 5002d5bd-6ff8-4ab2-9b50-a93083023e9d)
2016-02-29 23:02:08,737 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: c27a4608-a086-4785-bd44-d4e509757dfa)
2016-02-29 23:02:08,737 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -24 to -15
2016-02-29 23:02:08,739 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 59ba41f7-f703-4dfd-aa56-963370354c97)
2016-02-29 23:02:08,742 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 539f4834-a2c8-43f8-8e2b-f1a823e30a15)
2016-02-29 23:02:08,742 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -4 to -2
2016-02-29 23:02:08,745 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 5e8ce1e9-62dc-4cd6-82ca-a632aadb2a44)
2016-02-29 23:02:08,748 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: a522c167-8988-480f-9085-aba2cca4ce69)
2016-02-29 23:02:08,749 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -7 to -4
2016-02-29 23:02:08,751 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 6005de1b-fa67-4351-95dc-5c5394f93812)
2016-02-29 23:02:08,754 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 62cae1a5-c0f1-4fcd-ad7d-e66952959864)
2016-02-29 23:02:08,754 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -6 to 1
2016-02-29 23:02:08,756 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 6037ee37-f549-4f09-8157-6c3f0df7e304)
2016-02-29 23:02:08,759 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 7c9092d3-72eb-44da-b52c-ba47bbdb3539)
2016-02-29 23:02:08,759 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -9 to -8
2016-02-29 23:02:08,761 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 6943ab5c-baf8-4b25-a702-f493515a7b02)
2016-02-29 23:02:08,764 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: eadcfe4f-d356-43e4-93be-6e6d5a77d058)
2016-02-29 23:02:08,764 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -1 to 5
2016-02-29 23:02:08,767 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 7786f487-f112-4244-8bdf-ecfd1fb0706f)
2016-02-29 23:02:08,770 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: edb80c26-48f9-4ffe-9e74-794f2fa57917)
2016-02-29 23:02:08,771 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 4 to 9
2016-02-29 23:02:08,773 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 7a1d8464-5d9e-46b8-a9b5-626f7327128c)
2016-02-29 23:02:08,777 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 539f4834-a2c8-43f8-8e2b-f1a823e30a15)
2016-02-29 23:02:08,777 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -2 to -1
2016-02-29 23:02:08,779 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 9276215f-15a2-44b2-8d19-18c2ee9ed989)
2016-02-29 23:02:08,783 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ce25df73-eb62-431d-9372-f94f99c4a639)
2016-02-29 23:02:08,783 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 3 to 7
2016-02-29 23:02:08,787 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 963ee1a4-91d8-4f8d-befa-44a74b3d2701)
2016-02-29 23:02:08,790 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 7c9092d3-72eb-44da-b52c-ba47bbdb3539)
2016-02-29 23:02:08,790 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -8 to 0
2016-02-29 23:02:08,792 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: a3aa3c47-3e17-4523-b8b4-3f5e81b2e5dd)
2016-02-29 23:02:08,795 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 3056ea54-4220-45a4-b204-209a5980e4bc)
2016-02-29 23:02:08,795 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -3 to 4
2016-02-29 23:02:08,799 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: a439cf92-ea13-4539-b0cb-dc26444e45b8)
2016-02-29 23:02:08,802 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ce25df73-eb62-431d-9372-f94f99c4a639)
2016-02-29 23:02:08,802 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 7 to 8
2016-02-29 23:02:08,805 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: a787a850-d4c1-4cc8-9539-64b8feb402d9)
2016-02-29 23:02:08,808 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1966622b-b1be-4c01-b5d1-157592fe2778)
2016-02-29 23:02:08,808 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 4 to 10
2016-02-29 23:02:08,810 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: c2d6d2f1-d21a-4f02-9b73-4780a5e2277d)
2016-02-29 23:02:08,813 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: a9ab1996-8274-4d0c-a9dd-85ec44aadc6d)
2016-02-29 23:02:08,813 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -1 to 1
2016-02-29 23:02:08,815 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: c8bad314-aa1a-49c1-8a2e-96063c5dfc0e)
2016-02-29 23:02:08,820 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 62cae1a5-c0f1-4fcd-ad7d-e66952959864)
2016-02-29 23:02:08,820 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 1 to 10
2016-02-29 23:02:08,823 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: c94b3cd0-8e13-4eea-a414-57dd5da0cffe)
2016-02-29 23:02:08,826 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: a9ab1996-8274-4d0c-a9dd-85ec44aadc6d)
2016-02-29 23:02:08,826 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 1 to 6
2016-02-29 23:02:08,829 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: d253b118-ff1a-4d9f-a5c5-a864727202ef)
2016-02-29 23:02:08,833 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: a9ab1996-8274-4d0c-a9dd-85ec44aadc6d)
2016-02-29 23:02:08,833 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 6 to 11
2016-02-29 23:02:08,835 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: d5ff226c-7dfb-4423-a4a6-b75defa15c3d)
2016-02-29 23:02:08,838 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: b4986235-e12e-453a-a8de-10b9d81d0e2b)
2016-02-29 23:02:08,838 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -6 to 2
2016-02-29 23:02:08,842 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: d7681c5e-9db0-4973-a5d0-80f41decfd82)
2016-02-29 23:02:08,845 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 04406892-365a-4a70-87d1-4f2c63a71b24)
2016-02-29 23:02:08,845 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -11 to -9
2016-02-29 23:02:08,848 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: d92dcc72-8b88-41df-818b-b21ab3d45b81)
2016-02-29 23:02:08,851 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1966622b-b1be-4c01-b5d1-157592fe2778)
2016-02-29 23:02:08,851 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 10 to 18
2016-02-29 23:02:08,853 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: df79991e-bb22-464c-b072-d6fa5a5f47b5)
2016-02-29 23:02:08,857 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ed52f21c-aca2-46f3-b8b0-a32523f8ee48)
2016-02-29 23:02:08,857 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 1 to 10
2016-02-29 23:02:08,859 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: e4508c06-a3c2-4be3-b0af-f6ee8a40cfa5)
2016-02-29 23:02:08,862 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 69c640e1-8313-4adb-bc1f-7a4cba9ab09e)
2016-02-29 23:02:08,862 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -3 to 2
2016-02-29 23:02:08,864 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: e4d83152-b646-46a5-a483-7f587d79e730)
2016-02-29 23:02:08,867 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 6892bbf4-c547-4e78-ae00-36da65db20c5)
2016-02-29 23:02:08,867 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -6 to -4
2016-02-29 23:02:08,869 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: ef3c2390-f299-40f1-8c91-bf5883be9e23)
2016-02-29 23:02:08,873 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 5716efb5-ba5d-4f3b-aebd-c649e9c4f9ce)
2016-02-29 23:02:08,873 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 9 to 15
2016-02-29 23:02:08,881 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: f8faa819-f3de-4fc9-b609-c049f6bd8029)
2016-02-29 23:02:08,883 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 539f4834-a2c8-43f8-8e2b-f1a823e30a15)
2016-02-29 23:02:08,883 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -1 to 5
2016-02-29 23:02:08,886 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: fb6772e2-f307-45c3-8e08-6261a227600f)
2016-02-29 23:02:08,889 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: a9ab1996-8274-4d0c-a9dd-85ec44aadc6d)
2016-02-29 23:02:08,889 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 11 to 14
2016-02-29 23:02:08,892 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Project, id: ed97b173-cfdf-4ed1-92e9-b5098cdb46ba)
2016-02-29 23:02:11,695 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Product, id: dced46b2-6638-4c69-861f-0ebed5308193)
2016-02-29 23:02:11,695 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 2cde5582-bae1-4469-b7b3-c9e9ab09637a)
2016-02-29 23:02:11,696 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 2e099c6d-cf60-4007-af74-af9142103495)
2016-02-29 23:02:11,697 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: fbaf4181-3834-45a3-823c-285fd0d648ea)
2016-02-29 23:02:11,698 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 4093c7cc-1467-41dc-b63b-80ed138e19ec)
2016-02-29 23:02:11,698 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 065bc0f5-1fd4-43f2-9a98-cb5e37ddb9d3)
2016-02-29 23:02:11,700 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: a7f144a1-a501-4284-9c9c-806a02b1464d)
2016-02-29 23:02:11,700 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 2f804fa9-7bf3-4adb-96c0-5fdf1d234736)
2016-02-29 23:02:11,702 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 454c8508-9600-4783-8956-33a25dc51b8a)
2016-02-29 23:02:11,702 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 2cf398fa-41d8-40c6-803d-58c3d934c8b2)
2016-02-29 23:02:11,703 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 463d217a-17a4-4e50-b88e-48e9e059e3c0)
2016-02-29 23:02:11,704 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 3d6ddf90-8f6a-47db-8536-ba35bc3a649c)
2016-02-29 23:02:11,705 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: bddd6aaa-b471-4263-b1eb-43e50f729f93)
2016-02-29 23:02:11,707 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 09097682-4aba-486d-af53-9366dc50e19a)
2016-02-29 23:02:11,708 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: fc2883b4-e174-40d9-b4aa-30c1e0c2aa0e)
2016-02-29 23:02:11,709 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: f660e881-f531-467d-82d9-8d99602be852)
2016-02-29 23:02:11,710 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 4ce2e626-1e8c-476e-97d1-bc71d173194c)
2016-02-29 23:02:11,711 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 9e799bf3-81c2-4fa1-b8d0-0115b8af037f)
2016-02-29 23:02:11,712 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: f1a10464-af23-42fe-b2ab-7ce07247cc45)
2016-02-29 23:02:11,712 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: f393af37-f9d8-48ab-9132-5cc0f791addc)
2016-02-29 23:02:11,728 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Product, id: 342ff37a-5ff9-456b-8582-0d2f4fb2cd10)
2016-02-29 23:02:11,728 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: bd0a6475-c958-47f4-bac4-d8a4ac1f68b2)
2016-02-29 23:02:11,742 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Product, id: 283f90ca-5bca-455e-ac56-f34a796b80fb)
2016-02-29 23:02:11,742 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 1458d8d0-6e6d-4e23-9d18-412dac65c7dc)
2016-02-29 23:02:11,742 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 9ea2b1b9-5ca6-4043-81ca-bc3eb07c2571)
2016-02-29 23:02:11,757 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Product, id: cf262e78-6e6f-4a50-9b06-a748cdec3129)
2016-02-29 23:02:11,757 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 0bd84adf-8518-45db-97e9-8986d695c175)
2016-02-29 23:02:11,757 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 0f7dfda2-70cd-4517-a72a-c52b867a21cd)
2016-02-29 23:02:11,757 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 11a2e9fc-3222-4588-b38c-4f9616f297f5)
2016-02-29 23:02:11,757 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 1a48d70c-41f1-48cd-86fd-1af3b1d9507a)
2016-02-29 23:02:11,757 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 45fa5854-a29f-43b1-b1b0-09b95f19b599)
2016-02-29 23:02:11,757 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 5c69a9ec-effa-4e68-8512-5806cfccb6bd)
2016-02-29 23:02:11,757 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 90336e1c-8e4b-4854-aa1c-b08eac713c18)
2016-02-29 23:02:11,757 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 966d5368-917b-41af-b2a1-71f5a0e71fec)
2016-02-29 23:02:11,757 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 9a3239e1-650a-4df0-bd76-1e7fa8e546a6)
2016-02-29 23:02:11,757 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: aad17bac-ee06-4b91-a9c8-fb4225a9a50b)
2016-02-29 23:02:11,758 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: c5e206c7-6620-4f49-a34a-2fbec808d7c4)
2016-02-29 23:02:11,758 [15372] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: cb2d3dda-acf8-4db5-8357-9552695abde8)
2016-02-29 23:13:13,944 [4068] DEBUG ReadOnlyServer-8836559 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 23:13:13,958 [4068] DEBUG ReadOnlyServer-8836559 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 23:13:13,958 [4068] DEBUG ReadOnlyServer-8836559 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 23:13:13,958 [4068] DEBUG ReadOnlyServer-8836559 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 23:13:13,959 [4068] DEBUG ReadOnlyServer-8836559 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 23:13:14,028 [4068] DEBUG WriteOnlyServer-62792180 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 23:13:14,028 [4068] DEBUG WriteOnlyServer-62792180 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 23:13:14,028 [4068] DEBUG WriteOnlyServer-62792180 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 23:13:14,048 [4068] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 23:13:14,050 [4068] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 23:13:14,100 [7416] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:13:14,107 [14568] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:13:14,175 [13484] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:13:14,193 [14568] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:13:14,201 [13140] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:13:14,202 [13372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:13:14,204 [10200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 23:13:14,204 [14568] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:13:14,208 [13484] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:13:14,209 [4132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:13:14,212 [13140] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:13:14,212 [4132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:13:14,215 [10200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:13:14,216 [14568] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:13:14,219 [13484] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:13:14,220 [13372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:13:14,222 [13140] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:13:14,222 [13372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:13:14,234 [10200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6879)
2016-02-29 23:13:14,236 [4132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:13:14,241 [4132] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:13:14,275 [4068] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:13:14,276 [4068] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:13:14,280 [4068] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 23:13:14,281 [4068] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 23:13:14,283 [4132] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:13:14,283 [4132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:13:14,284 [13484] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:13:14,285 [13372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:13:14,286 [9648] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:13:14,287 [14568] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:13:14,287 [10200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 23:13:14,288 [14568] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:13:14,288 [13484] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:13:14,291 [13372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:13:14,292 [9648] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:13:14,293 [14568] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:13:14,294 [10200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:13:14,295 [14568] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:13:14,296 [13484] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:13:14,297 [4132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:13:14,298 [9648] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:13:14,298 [13372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:13:14,299 [10200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6879)
2016-02-29 23:13:14,300 [13372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:13:14,301 [13372] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:13:14,317 [4068] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 23:13:14,324 [13484] DEBUG WriteOnlyServer-62792180 - insert into Maker (ID, Name) values ('245d3cad-8453-4aba-97a7-90a743e30fe4', 'soime');
2016-02-29 23:13:14,328 [13484] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 184)
2016-02-29 23:13:14,415 [14568] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 23:13:14,416 [14568] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 245d3cad-8453-4aba-97a7-90a743e30fe4)
2016-02-29 23:13:14,843 [4068] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:13:14,843 [4068] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:13:14,846 [4068] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 23:13:14,846 [4068] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 23:13:14,863 [14568] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:13:14,863 [14568] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:13:14,864 [10200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:13:14,865 [13372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:13:14,866 [13140] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:13:14,866 [14568] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:13:14,867 [13484] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1214)
2016-02-29 23:13:14,867 [14568] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:13:14,868 [10200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:13:14,869 [4132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:13:14,869 [13140] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:13:14,870 [4132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:13:14,870 [13484] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:13:14,871 [13372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:13:14,872 [10200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:13:14,873 [14568] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:13:14,874 [13140] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:13:14,875 [13372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:13:14,876 [13484] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6879)
2016-02-29 23:13:14,877 [4132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:13:14,878 [4132] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:13:14,880 [4068] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 23:13:14,881 [10200] DEBUG WriteOnlyServer-62792180 - delete from Maker where ID = '1c5dd1a8-3619-48ed-878f-b11da7190df5';
2016-02-29 23:13:14,890 [10200] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 23:13:14,890 [10200] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 23:13:14,890 [10200] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = '1c5dd1a8-3619-48ed-878f-b11da7190df5';
2016-02-29 23:13:14,894 [10200] DEBUG WriteOnlyServer-62792180 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 23:13:14,894 [4132] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: DELT, TYPE: Maker)
2016-02-29 23:13:14,897 [4132] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 1c5dd1a8-3619-48ed-878f-b11da7190df5)
2016-02-29 23:13:14,898 [4132] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 23:13:14,901 [13140] DEBUG WriteOnlyServer-62792180 - update InventoryFormat set MakerID = '' where ID = '328444dc-96a5-470a-82f7-84db36af41eb';
2016-02-29 23:13:14,903 [13140] DEBUG WriteOnlyServer-62792180 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 349)
2016-02-29 23:13:14,903 [4132] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: UPDT, TYPE: InventoryFormat)
2016-02-29 23:13:14,904 [4132] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 328444dc-96a5-470a-82f7-84db36af41eb)
2016-02-29 23:13:14,984 [4068] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:13:14,985 [4068] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:13:14,988 [4068] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 23:13:14,995 [4068] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 23:13:14,998 [4132] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:13:14,998 [14568] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:13:14,998 [9648] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:13:15,001 [14568] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:13:15,002 [10200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:13:15,003 [4132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:13:15,004 [13140] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1152)
2016-02-29 23:13:15,004 [4132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:13:15,005 [9648] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:13:15,005 [13372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:13:15,006 [10200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:13:15,008 [4132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:13:15,009 [13140] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:13:15,009 [4132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:13:15,010 [9648] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:13:15,011 [14568] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:13:15,011 [10200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:13:15,012 [4132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:13:15,013 [13140] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6843)
2016-02-29 23:13:15,014 [14568] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:13:15,014 [14568] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:13:15,167 [4068] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 23:13:15,168 [9648] DEBUG WriteOnlyServer-62792180 - insert into Product (ID, Name) values ('48c152bb-8931-449d-9993-be91521b65c0', '새로운 제품');
2016-02-29 23:13:15,176 [9648] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 197)
2016-02-29 23:13:15,176 [14568] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Product)
2016-02-29 23:13:15,177 [14568] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Product, ID: 48c152bb-8931-449d-9993-be91521b65c0)
2016-02-29 23:13:15,278 [4068] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:13:15,278 [4068] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:13:15,284 [4068] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 23:13:15,285 [4068] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 23:13:15,288 [14568] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:13:15,288 [4132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:13:15,289 [13140] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:13:15,293 [14568] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:13:15,294 [10200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:13:15,294 [13372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:13:15,295 [13484] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1152)
2016-02-29 23:13:15,297 [14568] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:13:15,299 [13140] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:13:15,300 [13372] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:13:15,301 [10200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 23:13:15,301 [4132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:13:15,302 [13484] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:13:15,303 [14568] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:13:15,304 [13140] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:13:15,305 [4132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:13:15,305 [10200] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:13:15,306 [14568] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:13:15,307 [13484] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6843)
2016-02-29 23:13:15,310 [4132] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:13:15,311 [4132] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:13:15,313 [4068] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 23:13:15,314 [13140] DEBUG WriteOnlyServer-62792180 - insert into Maker (ID, Name) values ('234c3426-1b8f-4217-a1fc-c5790bbfe558', 'some maker');
2016-02-29 23:13:15,314 [4068] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Measure)
2016-02-29 23:13:15,314 [4068] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:InventoryFormat)
2016-02-29 23:13:15,322 [13140] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 189)
2016-02-29 23:13:15,322 [4132] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 23:13:15,322 [4132] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 234c3426-1b8f-4217-a1fc-c5790bbfe558)
2016-02-29 23:13:15,322 [10200] DEBUG WriteOnlyServer-62792180 - insert into Measure (ID, Name) values ('a6605f08-4071-4803-9c3a-1e6d795f0ec4', 'some measure');
2016-02-29 23:13:15,328 [10200] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Measure, SIZE: 193)
2016-02-29 23:13:15,328 [4132] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Measure)
2016-02-29 23:13:15,329 [4132] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: a6605f08-4071-4803-9c3a-1e6d795f0ec4)
2016-02-29 23:13:15,329 [10200] DEBUG WriteOnlyServer-62792180 - insert into InventoryFormat (ID, Specification, Quantity, Memo, ProductID, MakerID, MeasureID) values ('bb52fb88-eb33-4bd0-a27d-e707fe389e7e', 'some specification', '0', 'spec', '2667a0a5-8399-4814-bbf9-a97cf76e4077', '234c3426-1b8f-4217-a1fc-c5790bbfe558', 'a6605f08-4071-4803-9c3a-1e6d795f0ec4');
2016-02-29 23:13:15,331 [10200] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 394)
2016-02-29 23:13:15,331 [4132] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: InventoryFormat)
2016-02-29 23:13:15,331 [4132] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: bb52fb88-eb33-4bd0-a27d-e707fe389e7e)
2016-02-29 23:13:15,423 [4068] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:13:15,423 [4068] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:15:03,168 [12760] DEBUG ReadOnlyServer-8836559 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 23:15:03,177 [12760] DEBUG ReadOnlyServer-8836559 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 23:15:03,177 [12760] DEBUG ReadOnlyServer-8836559 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 23:15:03,178 [12760] DEBUG ReadOnlyServer-8836559 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 23:15:03,178 [12760] DEBUG ReadOnlyServer-8836559 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 23:15:03,240 [12760] DEBUG WriteOnlyServer-62792180 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 23:15:03,240 [12760] DEBUG WriteOnlyServer-62792180 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 23:15:03,240 [12760] DEBUG WriteOnlyServer-62792180 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 23:15:03,260 [12760] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 23:15:03,261 [12760] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 23:15:03,309 [14812] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:15:03,314 [7128] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:15:03,373 [9400] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:15:03,390 [7128] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:15:03,396 [9584] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:15:03,397 [3176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:15:03,399 [7664] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 23:15:03,400 [7128] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:15:03,402 [8300] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:15:03,403 [7128] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:15:03,405 [9400] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:15:03,405 [3176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:15:03,407 [9584] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:15:03,407 [8168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:15:03,409 [7664] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:15:03,410 [3176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:15:03,412 [8300] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:15:03,413 [7128] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:15:03,423 [9400] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6870)
2016-02-29 23:15:03,425 [8168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:15:03,429 [8168] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:15:03,471 [12760] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:15:03,471 [12760] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:15:03,475 [12760] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 23:15:03,476 [12760] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 23:15:03,478 [8168] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:15:03,478 [8168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:15:03,479 [7664] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:15:03,481 [3176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:15:03,481 [8300] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:15:03,482 [8168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:15:03,482 [9584] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 23:15:03,483 [8168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:15:03,484 [9400] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:15:03,484 [8168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:15:03,485 [7664] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:15:03,485 [8168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:15:03,486 [8300] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:15:03,486 [3176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:15:03,487 [9584] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:15:03,488 [7128] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:15:03,488 [9400] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:15:03,489 [7128] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:15:03,490 [7664] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6870)
2016-02-29 23:15:03,491 [3176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:15:03,491 [3176] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:15:03,505 [12760] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 23:15:03,516 [8300] DEBUG WriteOnlyServer-62792180 - insert into Maker (ID, Name) values ('697feab4-7f93-4ea2-87ff-639573019394', 'soime');
2016-02-29 23:15:03,520 [8300] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 184)
2016-02-29 23:15:03,599 [7128] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 23:15:03,601 [7128] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 697feab4-7f93-4ea2-87ff-639573019394)
2016-02-29 23:15:04,026 [12760] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:15:04,026 [12760] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:15:04,028 [12760] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 23:15:04,028 [12760] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 23:15:04,041 [7128] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:15:04,042 [7128] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:15:04,043 [9400] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:15:04,044 [3176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:15:04,045 [7664] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:15:04,045 [8168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:15:04,046 [9584] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1214)
2016-02-29 23:15:04,046 [8168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:15:04,047 [8300] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:15:04,048 [8168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:15:04,048 [9400] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:15:04,049 [8168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:15:04,050 [7664] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:15:04,050 [7128] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:15:04,051 [9584] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:15:04,052 [3176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:15:04,053 [8300] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:15:04,054 [7128] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:15:04,055 [9400] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6870)
2016-02-29 23:15:04,056 [8168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:15:04,057 [8168] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:15:04,059 [12760] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 23:15:04,060 [7664] DEBUG WriteOnlyServer-62792180 - delete from Maker where ID = '7318d2e3-be0a-4387-bc9f-a0652c9baa1d';
2016-02-29 23:15:04,068 [7664] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 23:15:04,068 [7664] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 23:15:04,068 [7664] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = '7318d2e3-be0a-4387-bc9f-a0652c9baa1d';
2016-02-29 23:15:04,072 [7664] DEBUG WriteOnlyServer-62792180 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 23:15:04,072 [7128] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: DELT, TYPE: Maker)
2016-02-29 23:15:04,074 [7128] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 7318d2e3-be0a-4387-bc9f-a0652c9baa1d)
2016-02-29 23:15:04,076 [7128] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 23:15:04,079 [9584] DEBUG WriteOnlyServer-62792180 - update InventoryFormat set MakerID = '' where ID = 'd899c151-2e22-4bc7-93c4-ef657a8418da';
2016-02-29 23:15:04,081 [9584] DEBUG WriteOnlyServer-62792180 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 350)
2016-02-29 23:15:04,082 [7128] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: UPDT, TYPE: InventoryFormat)
2016-02-29 23:15:04,083 [7128] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: d899c151-2e22-4bc7-93c4-ef657a8418da)
2016-02-29 23:15:04,176 [12760] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:15:04,176 [12760] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:15:04,185 [12760] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 23:15:04,194 [12760] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 23:15:04,201 [7128] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:15:04,201 [7128] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:15:04,203 [7664] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:15:04,208 [8168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:15:04,211 [9584] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:15:04,213 [8168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:15:04,215 [9400] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1152)
2016-02-29 23:15:04,217 [8168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:15:04,219 [8300] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:15:04,221 [3176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:15:04,224 [7664] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:15:04,226 [3176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:15:04,227 [9584] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:15:04,229 [7128] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:15:04,231 [9400] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:15:04,232 [8168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:15:04,234 [8300] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:15:04,235 [3176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:15:04,236 [7664] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6834)
2016-02-29 23:15:04,237 [8168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:15:04,237 [8168] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:15:04,381 [12760] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 23:15:04,381 [9584] DEBUG WriteOnlyServer-62792180 - insert into Product (ID, Name) values ('2af27624-a37a-4237-b473-83baee259c44', '새로운 제품');
2016-02-29 23:15:04,390 [9584] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 197)
2016-02-29 23:15:04,390 [3176] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Product)
2016-02-29 23:15:04,391 [3176] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Product, ID: 2af27624-a37a-4237-b473-83baee259c44)
2016-02-29 23:15:04,491 [12760] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:15:04,491 [12760] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:15:04,500 [12760] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 23:15:04,500 [12760] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 23:15:04,505 [3176] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:15:04,505 [3176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:15:04,506 [7664] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:15:04,509 [8168] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:15:04,510 [8300] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:15:04,510 [7128] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:15:04,511 [9400] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1152)
2016-02-29 23:15:04,512 [7128] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:15:04,513 [9584] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:15:04,514 [3176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:15:04,515 [7664] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 23:15:04,516 [3176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:15:04,517 [8300] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:15:04,518 [7128] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:15:04,519 [9400] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:15:04,520 [7128] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:15:04,522 [9584] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:15:04,522 [7128] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:15:04,524 [7664] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6834)
2016-02-29 23:15:04,525 [3176] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:15:04,526 [3176] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:15:04,529 [12760] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 23:15:04,530 [8300] DEBUG WriteOnlyServer-62792180 - insert into Maker (ID, Name) values ('b3dc81a4-c078-48b3-9564-65a8614a1682', 'some maker');
2016-02-29 23:15:04,530 [12760] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Measure)
2016-02-29 23:15:04,531 [12760] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:InventoryFormat)
2016-02-29 23:15:04,538 [8300] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 189)
2016-02-29 23:15:04,538 [8168] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 23:15:04,538 [8168] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: b3dc81a4-c078-48b3-9564-65a8614a1682)
2016-02-29 23:15:04,538 [8300] DEBUG WriteOnlyServer-62792180 - insert into Measure (ID, Name) values ('757307e4-b6a8-46d6-a0b7-9c3d7d2980ec', 'some measure');
2016-02-29 23:15:04,548 [8300] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Measure, SIZE: 193)
2016-02-29 23:15:04,548 [8168] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Measure)
2016-02-29 23:15:04,548 [8300] DEBUG WriteOnlyServer-62792180 - insert into InventoryFormat (ID, Specification, Quantity, Memo, ProductID, MakerID, MeasureID) values ('45993f8b-efc9-4649-9dec-2429fa9fbfbc', 'some specification', '0', 'spec', '2af27624-a37a-4237-b473-83baee259c44', 'b3dc81a4-c078-48b3-9564-65a8614a1682', '757307e4-b6a8-46d6-a0b7-9c3d7d2980ec');
2016-02-29 23:15:04,548 [8168] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: 757307e4-b6a8-46d6-a0b7-9c3d7d2980ec)
2016-02-29 23:15:04,551 [8300] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 394)
2016-02-29 23:15:04,551 [8168] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: InventoryFormat)
2016-02-29 23:15:04,551 [8168] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 45993f8b-efc9-4649-9dec-2429fa9fbfbc)
2016-02-29 23:15:04,641 [12760] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:15:04,641 [12760] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:16:22,646 [13128] DEBUG ReadOnlyServer-15927932 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 23:16:22,655 [13128] DEBUG ReadOnlyServer-15927932 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 23:16:22,655 [13128] DEBUG ReadOnlyServer-15927932 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 23:16:22,655 [13128] DEBUG ReadOnlyServer-15927932 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 23:16:22,656 [13128] DEBUG ReadOnlyServer-15927932 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 23:16:22,712 [13128] DEBUG WriteOnlyServer-48983005 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 23:16:22,712 [13128] DEBUG WriteOnlyServer-48983005 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 23:16:22,712 [13128] DEBUG WriteOnlyServer-48983005 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 23:16:22,731 [13128] DEBUG ReadOnlyServer-15927932 - Listener (0.0.0.0:4000) was started
2016-02-29 23:16:22,732 [13128] DEBUG WriteOnlyServer-48983005 - Listener (0.0.0.0:4001) was started
2016-02-29 23:16:22,779 [8748] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:22,785 [5312] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:22,848 [3568] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:16:22,865 [5312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:16:22,871 [14072] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:16:22,872 [10996] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:16:22,874 [11096] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 23:16:22,875 [3808] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:16:22,877 [10628] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:16:22,877 [5312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:16:22,880 [3568] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:16:22,881 [10996] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:16:22,883 [14072] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:16:22,883 [3808] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:16:22,885 [11096] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:16:22,886 [5312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:16:22,888 [10628] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:16:22,889 [5312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:16:22,902 [3568] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6872)
2016-02-29 23:16:22,904 [3808] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:16:22,912 [3808] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:16:22,942 [13128] DEBUG ReadOnlyServer-15927932 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:16:22,942 [13128] DEBUG WriteOnlyServer-48983005 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:16:22,947 [13128] DEBUG ReadOnlyServer-15927932 - Listener (0.0.0.0:4000) was started
2016-02-29 23:16:22,947 [13128] DEBUG WriteOnlyServer-48983005 - Listener (0.0.0.0:4001) was started
2016-02-29 23:16:22,950 [3808] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:22,950 [10996] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:22,951 [11096] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:16:22,953 [5312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:16:22,953 [3568] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:16:22,954 [5312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:16:22,955 [10628] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 23:16:22,955 [10996] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:16:22,956 [14072] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:16:22,957 [5312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:16:22,957 [11096] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:16:22,958 [10996] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:16:22,959 [3568] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:16:22,960 [3808] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:16:22,960 [10628] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:16:22,961 [10996] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:16:22,962 [14072] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:16:22,962 [5312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:16:22,963 [11096] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6872)
2016-02-29 23:16:22,965 [3808] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:16:22,966 [3808] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:16:22,980 [13128] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 23:16:22,988 [3568] DEBUG WriteOnlyServer-48983005 - insert into Maker (ID, Name) values ('b603b3b1-7a9a-425c-bb08-34265a06197a', 'soime');
2016-02-29 23:16:22,997 [3568] DEBUG WriteOnlyServer-48983005 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 184)
2016-02-29 23:16:23,077 [5312] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 23:16:23,079 [5312] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: b603b3b1-7a9a-425c-bb08-34265a06197a)
2016-02-29 23:16:23,495 [13128] DEBUG ReadOnlyServer-15927932 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:16:23,495 [13128] DEBUG WriteOnlyServer-48983005 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:16:23,496 [13128] DEBUG ReadOnlyServer-15927932 - Listener (0.0.0.0:4000) was started
2016-02-29 23:16:23,497 [13128] DEBUG WriteOnlyServer-48983005 - Listener (0.0.0.0:4001) was started
2016-02-29 23:16:23,509 [5312] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:23,509 [5312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:23,510 [11096] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:16:23,512 [10996] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:16:23,513 [3568] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:16:23,513 [5312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:16:23,514 [14072] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1214)
2016-02-29 23:16:23,515 [10996] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:16:23,515 [10628] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:16:23,516 [10996] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:16:23,517 [11096] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:16:23,517 [5312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:16:23,518 [3568] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:16:23,519 [5312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:16:23,519 [14072] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:16:23,520 [5312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:16:23,521 [10628] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:16:23,521 [5312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:16:23,522 [11096] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6872)
2016-02-29 23:16:23,523 [10996] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:16:23,524 [10996] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:16:23,526 [13128] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 23:16:23,527 [3568] DEBUG WriteOnlyServer-48983005 - delete from Maker where ID = 'b603b3b1-7a9a-425c-bb08-34265a06197a';
2016-02-29 23:16:23,529 [3568] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 23:16:23,530 [3568] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 23:16:23,530 [3568] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = 'b603b3b1-7a9a-425c-bb08-34265a06197a';
2016-02-29 23:16:23,531 [3568] DEBUG WriteOnlyServer-48983005 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 23:16:23,531 [10996] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: DELT, TYPE: Maker)
2016-02-29 23:16:23,534 [10996] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: b603b3b1-7a9a-425c-bb08-34265a06197a)
2016-02-29 23:16:23,637 [13128] DEBUG ReadOnlyServer-15927932 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:16:23,637 [13128] DEBUG WriteOnlyServer-48983005 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:16:23,641 [13128] DEBUG ReadOnlyServer-15927932 - Listener (0.0.0.0:4000) was started
2016-02-29 23:16:23,646 [13128] DEBUG WriteOnlyServer-48983005 - Listener (0.0.0.0:4001) was started
2016-02-29 23:16:23,650 [5312] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:23,651 [5312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:23,652 [10628] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:16:23,653 [10996] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:16:23,654 [3568] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:16:23,655 [10996] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:16:23,655 [11096] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 23:16:23,656 [3808] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:16:23,657 [14072] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:16:23,657 [10996] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:16:23,658 [10628] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:16:23,658 [5312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:16:23,659 [3568] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:16:23,660 [3808] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:16:23,660 [11096] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:16:23,661 [5312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:16:23,662 [14072] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:16:23,662 [10996] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:16:23,663 [10628] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6872)
2016-02-29 23:16:23,664 [3808] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:16:23,665 [3808] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:16:23,807 [13128] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 23:16:23,807 [3568] DEBUG WriteOnlyServer-48983005 - insert into Product (ID, Name) values ('514c2105-e0ef-42e1-839c-2339220b9f1a', '새로운 제품');
2016-02-29 23:16:23,811 [3568] DEBUG WriteOnlyServer-48983005 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 197)
2016-02-29 23:16:23,811 [3808] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Product)
2016-02-29 23:16:23,811 [3808] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Product, ID: 514c2105-e0ef-42e1-839c-2339220b9f1a)
2016-02-29 23:16:23,920 [13128] DEBUG ReadOnlyServer-15927932 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:16:23,920 [13128] DEBUG WriteOnlyServer-48983005 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:16:23,924 [13128] DEBUG ReadOnlyServer-15927932 - Listener (0.0.0.0:4000) was started
2016-02-29 23:16:23,924 [13128] DEBUG WriteOnlyServer-48983005 - Listener (0.0.0.0:4001) was started
2016-02-29 23:16:23,926 [5312] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:23,927 [3808] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:23,928 [3568] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:16:23,931 [3808] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:16:23,932 [11096] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:16:23,932 [10996] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:16:23,933 [10628] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 23:16:23,934 [3808] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:16:23,934 [14072] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:16:23,935 [3808] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:16:23,935 [3568] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 23:16:23,936 [3808] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:16:23,937 [11096] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:16:23,937 [5312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:16:23,938 [10628] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:16:23,939 [10996] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:16:23,939 [14072] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:16:23,940 [10996] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:16:23,941 [3568] DEBUG ReadOnlyServer-15927932 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6872)
2016-02-29 23:16:23,942 [5312] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:16:23,943 [5312] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:16:23,945 [13128] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 23:16:23,945 [11096] DEBUG WriteOnlyServer-48983005 - insert into Maker (ID, Name) values ('3ff2a145-0dd7-418e-ac88-7e4a054d8e62', 'some maker');
2016-02-29 23:16:23,945 [13128] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Measure)
2016-02-29 23:16:23,946 [13128] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:InventoryFormat)
2016-02-29 23:16:23,953 [11096] DEBUG WriteOnlyServer-48983005 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 189)
2016-02-29 23:16:23,953 [5312] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 23:16:23,953 [5312] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 3ff2a145-0dd7-418e-ac88-7e4a054d8e62)
2016-02-29 23:16:23,953 [11096] DEBUG WriteOnlyServer-48983005 - insert into Measure (ID, Name) values ('0d2fabc9-cdc8-419d-81cb-fd54ea9d904d', 'some measure');
2016-02-29 23:16:23,959 [11096] DEBUG WriteOnlyServer-48983005 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Measure, SIZE: 193)
2016-02-29 23:16:23,960 [5312] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Measure)
2016-02-29 23:16:23,960 [5312] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: 0d2fabc9-cdc8-419d-81cb-fd54ea9d904d)
2016-02-29 23:16:23,960 [11096] DEBUG WriteOnlyServer-48983005 - insert into InventoryFormat (ID, Specification, Quantity, Memo, ProductID, MakerID, MeasureID) values ('d8abbfc4-11b7-4cdc-9c0c-05b1410766ab', 'some specification', '0', 'spec', '514c2105-e0ef-42e1-839c-2339220b9f1a', '3ff2a145-0dd7-418e-ac88-7e4a054d8e62', '0d2fabc9-cdc8-419d-81cb-fd54ea9d904d');
2016-02-29 23:16:23,962 [11096] DEBUG WriteOnlyServer-48983005 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 394)
2016-02-29 23:16:23,962 [5312] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: InventoryFormat)
2016-02-29 23:16:23,962 [5312] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: d8abbfc4-11b7-4cdc-9c0c-05b1410766ab)
2016-02-29 23:16:24,069 [13128] DEBUG ReadOnlyServer-15927932 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:16:24,069 [13128] DEBUG WriteOnlyServer-48983005 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:16:30,351 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 23:16:30,360 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 23:16:30,360 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 23:16:30,360 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 23:16:30,360 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 23:16:30,415 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 23:16:30,415 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 23:16:30,415 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 23:16:30,440 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - Listener (127.0.0.1:4000) was started
2016-02-29 23:16:30,442 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - Listener (127.0.0.1:4001) was started
2016-02-29 23:16:30,473 [10996] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:30,477 [3808] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:30,501 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:16:30,501 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:16:30,504 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - Listener (127.0.0.1:4000) was started
2016-02-29 23:16:30,505 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - Listener (127.0.0.1:4001) was started
2016-02-29 23:16:30,506 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:16:30,506 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:16:30,522 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - Listener (127.0.0.1:4000) was started
2016-02-29 23:16:30,523 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - Listener (127.0.0.1:4001) was started
2016-02-29 23:16:30,528 [10180] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:30,528 [10180] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:30,603 [14072] DEBUG ReadOnlyServer-20691938 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:16:30,620 [3808] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:16:30,624 [3808] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Product)
2016-02-29 23:16:30,629 [6008] DEBUG WriteOnlyServer-63836288 - delete from Product where ID = 'd4c1a9c9-503a-47aa-a931-d1ca7be5ef57';
2016-02-29 23:16:30,642 [10628] DEBUG ReadOnlyServer-20691938 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Product, BYTE SIZE: 128)
2016-02-29 23:16:30,642 [10180] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Product)
2016-02-29 23:16:30,647 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:16:30,647 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:16:30,649 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - Listener (127.0.0.1:4000) was started
2016-02-29 23:16:30,649 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - Listener (127.0.0.1:4001) was started
2016-02-29 23:16:30,653 [10180] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:30,653 [10180] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:30,655 [6008] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 23:16:30,655 [6008] DEBUG R54IN0.Server.DeleteCommand - KillInventoryFormat
2016-02-29 23:16:30,659 [6008] DEBUG R54IN0.Server.DeleteCommand - delete from IOStockFormat where InventoryID in (select ID from InventoryFormat where ProductID = 'd4c1a9c9-503a-47aa-a931-d1ca7be5ef57');
2016-02-29 23:16:30,667 [6008] DEBUG R54IN0.Server.DeleteCommand - delete from InventoryFormat where ProductID = 'd4c1a9c9-503a-47aa-a931-d1ca7be5ef57';
2016-02-29 23:16:30,670 [6008] DEBUG WriteOnlyServer-63836288 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Product, SIZE: 164)
2016-02-29 23:16:30,676 [13344] DEBUG ReadOnlyServer-20691938 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:16:30,677 [8748] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:16:30,677 [8748] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Employee)
2016-02-29 23:16:30,678 [3568] DEBUG WriteOnlyServer-63836288 - delete from Employee where ID = '6269aba7-0b0b-4173-bd64-38dd87e28e91';
2016-02-29 23:16:30,680 [3568] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 23:16:30,681 [3568] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 23:16:30,681 [3568] DEBUG R54IN0.Server.DeleteCommand - update IOStockFormat set EmployeeID = '' where EmployeeID = '6269aba7-0b0b-4173-bd64-38dd87e28e91';
2016-02-29 23:16:30,684 [3568] DEBUG WriteOnlyServer-63836288 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Employee, SIZE: 165)
2016-02-29 23:16:30,689 [14072] DEBUG ReadOnlyServer-20691938 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Employee, BYTE SIZE: 129)
2016-02-29 23:16:30,689 [8748] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Employee)
2016-02-29 23:16:30,693 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:16:30,693 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:16:30,695 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - Listener (127.0.0.1:4000) was started
2016-02-29 23:16:30,695 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - Listener (127.0.0.1:4001) was started
2016-02-29 23:16:30,698 [8748] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:30,699 [8748] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:30,722 [13344] DEBUG ReadOnlyServer-20691938 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 23:16:30,723 [8748] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:16:30,723 [8748] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 23:16:30,724 [3568] DEBUG WriteOnlyServer-63836288 - delete from Maker where ID = 'dde8161b-5c5e-4cd7-b9e4-9309c978ae37';
2016-02-29 23:16:30,732 [3568] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 23:16:30,732 [3568] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 23:16:30,732 [3568] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = 'dde8161b-5c5e-4cd7-b9e4-9309c978ae37';
2016-02-29 23:16:30,733 [3568] DEBUG WriteOnlyServer-63836288 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 23:16:30,736 [11096] DEBUG ReadOnlyServer-20691938 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Maker, BYTE SIZE: 126)
2016-02-29 23:16:30,737 [8748] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Maker)
2016-02-29 23:16:30,742 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:16:30,742 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:16:30,751 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - Listener (127.0.0.1:4000) was started
2016-02-29 23:16:30,754 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - Listener (127.0.0.1:4001) was started
2016-02-29 23:16:30,762 [8748] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:30,763 [8748] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:30,784 [11096] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 23:16:30,786 [13344] DEBUG WriteOnlyServer-63836288 - insert into Product (ID, Name) values ('93b242a6-6ed9-40bb-a355-5af3dca8cb6c', 'new');
2016-02-29 23:16:30,788 [13344] DEBUG WriteOnlyServer-63836288 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 184)
2016-02-29 23:16:30,795 [12284] DEBUG ReadOnlyServer-20691938 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Product, BYTE SIZE: 186)
2016-02-29 23:16:30,797 [8748] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Product)
2016-02-29 23:16:30,804 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:16:30,804 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:16:30,807 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - Listener (127.0.0.1:4000) was started
2016-02-29 23:16:30,807 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - Listener (127.0.0.1:4001) was started
2016-02-29 23:16:30,811 [8748] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:30,811 [10180] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:30,822 [14072] DEBUG ReadOnlyServer-20691938 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 870)
2016-02-29 23:16:30,824 [8748] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:16:30,832 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:16:30,832 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:16:30,834 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - Listener (127.0.0.1:4000) was started
2016-02-29 23:16:30,835 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - Listener (127.0.0.1:4001) was started
2016-02-29 23:16:30,839 [8748] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:30,839 [8748] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:30,860 [6008] DEBUG ReadOnlyServer-20691938 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 870)
2016-02-29 23:16:30,862 [8748] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:16:30,863 [3568] DEBUG ReadOnlyServer-20691938 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Product, BYTE SIZE: 186)
2016-02-29 23:16:30,863 [10180] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Product)
2016-02-29 23:16:30,867 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:16:30,867 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:16:30,870 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - Listener (127.0.0.1:4000) was started
2016-02-29 23:16:30,870 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - Listener (127.0.0.1:4001) was started
2016-02-29 23:16:30,874 [10180] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:30,874 [10180] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:30,890 [10628] DEBUG ReadOnlyServer-20691938 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6369)
2016-02-29 23:16:30,891 [8748] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:16:30,894 [12284] DEBUG ReadOnlyServer-20691938 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: InventoryFormat, BYTE SIZE: 384)
2016-02-29 23:16:30,895 [8748] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:InventoryFormat)
2016-02-29 23:16:30,903 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:16:30,903 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:16:30,905 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - Listener (127.0.0.1:4000) was started
2016-02-29 23:16:30,906 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - Listener (127.0.0.1:4001) was started
2016-02-29 23:16:30,909 [8748] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:30,909 [8748] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:16:30,921 [14072] DEBUG ReadOnlyServer-20691938 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 870)
2016-02-29 23:16:30,927 [10180] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:16:30,927 [10180] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:Product)
2016-02-29 23:16:30,930 [11096] DEBUG WriteOnlyServer-63836288 - update Product set Name = 'some' where ID = 'cb57b566-2690-4178-bf0d-cc9af876df73';
2016-02-29 23:16:30,937 [11096] DEBUG WriteOnlyServer-63836288 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 185)
2016-02-29 23:16:30,939 [6008] DEBUG ReadOnlyServer-20691938 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Product, BYTE SIZE: 187)
2016-02-29 23:16:30,940 [3808] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Product)
2016-02-29 23:16:30,948 [TestRunnerThread] DEBUG ReadOnlyServer-20691938 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:16:30,949 [TestRunnerThread] DEBUG WriteOnlyServer-63836288 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:16:32,365 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 530e3ea2-0aee-44de-8e35-df1428e1fd1d)
2016-02-29 23:16:32,386 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 2f69d2cf-8993-48b3-83dd-83f9661c1880)
2016-02-29 23:16:32,393 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 9c86106d-f037-4bc7-8445-bf5452486e78)
2016-02-29 23:16:34,237 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: Maker, ID: a8df72ba-baf3-4c9a-bcd4-7aa673bd4941)
2016-02-29 23:16:34,240 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: Measure, ID: 441ad2d3-fd69-4b84-9c4f-bb89d8081f12)
2016-02-29 23:16:34,243 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 16970dc3-877c-45eb-a7fc-5342d7fc5c6c)
2016-02-29 23:16:34,243 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Specification Convert KCL-100 to some specification
2016-02-29 23:16:34,244 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Memo Convert  to memo
2016-02-29 23:16:34,251 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 5220a49a-b8ad-4c9f-aaa8-b1af761f2fc9)
2016-02-29 23:16:34,251 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Specification Convert KCB-200D to some specification
2016-02-29 23:16:34,251 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Memo Convert  to memo
2016-02-29 23:16:34,251 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: MakerID Convert bff93ad7-c7bd-4448-9060-1661bb7c652e to 463ac98d-1744-4cb0-87bc-5b614d5491a4
2016-02-29 23:16:34,251 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: MeasureID Convert 441ad2d3-fd69-4b84-9c4f-bb89d8081f12 to 80b2ebff-f20b-4a44-9b3f-effd4e890029
2016-02-29 23:16:34,264 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 3a714572-8dd5-4618-86e3-b3d2b4713e99)
2016-02-29 23:16:34,266 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: 8df8bc70-0fa5-4907-a3ec-53593672b194)
2016-02-29 23:16:34,268 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 59f56e0a-561b-44c1-b2f9-c4dbe5ef3efd)
2016-02-29 23:16:34,279 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 6ac45255-8b84-4411-83c4-e84c0c8bbba8)
2016-02-29 23:16:34,469 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: d6318b52-942b-4db6-9e69-8b5facba65b5)
2016-02-29 23:16:34,478 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 1835197a-3747-4d4d-a35a-96d64135cdb2)
2016-02-29 23:16:37,612 [12680] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:16:37,836 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: c183e67b-1bf6-4227-a3e7-a191f344b217)
2016-02-29 23:16:37,836 [12680] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:16:37,845 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 65e2ec7e-5cbb-4eaf-be40-96d6257d4c6f)
2016-02-29 23:16:37,854 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 26ae62a9-9c54-4290-a682-d8ab4ec268c7)
2016-02-29 23:16:37,854 [12680] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 1 to 11
2016-02-29 23:16:37,860 [12680] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:16:37,864 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 62b80d06-6182-42bb-9b4f-1fae13f4bbf4)
2016-02-29 23:16:37,867 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 44236e1e-972b-4edf-a6fc-b46c261fef28)
2016-02-29 23:16:37,867 [12680] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -14 to -13
2016-02-29 23:16:37,873 [12680] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:16:37,876 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: 8c4fd512-0264-4350-a265-414af11ad49e)
2016-02-29 23:16:37,879 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Warehouse, ID: b4a44961-f7b7-42c9-98ab-04cf1eba8234)
2016-02-29 23:16:37,881 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: 0865e993-93fe-4ebd-8904-50d4b98b5841)
2016-02-29 23:16:37,884 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: b261dae1-96d4-4feb-b187-e2e2cf77ecbd)
2016-02-29 23:16:37,887 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 15f3c788-8982-400d-b492-9b988a6eec92)
2016-02-29 23:16:37,887 [12680] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 11 to 12
2016-02-29 23:16:37,893 [12680] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:16:37,896 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 99f01c0e-0acf-4304-a411-75bde482eab7)
2016-02-29 23:16:37,900 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 51ee8a1c-c267-4024-abe0-cc8896d7146f)
2016-02-29 23:16:37,900 [12680] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 6 to 5
2016-02-29 23:16:37,905 [12680] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:16:37,908 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Customer, ID: 538272fc-d003-4d27-8287-30662d39e2ae)
2016-02-29 23:16:37,911 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Project, ID: a3f3f5cc-00de-40d2-897b-2b00068befca)
2016-02-29 23:16:37,913 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: 08b91edf-04cf-4491-8c68-7f90efdb9196)
2016-02-29 23:16:37,915 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: dc44b30d-8375-440d-95e0-802115e9a3cd)
2016-02-29 23:16:37,918 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 66d17c67-4550-4219-b0ab-8f3d5909d03f)
2016-02-29 23:16:37,918 [12680] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -5 to -6
2016-02-29 23:16:37,926 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: Customer, ID: 286b5d37-168d-49b9-ba70-70f17354d7b2)
2016-02-29 23:16:37,929 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: Project, ID: 4fbc0202-12c1-4108-af84-21f55566136f)
2016-02-29 23:16:37,931 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: Employee, ID: a55104f7-4f57-468e-96f5-86521d16d0df)
2016-02-29 23:16:37,974 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: cebd1ac0-dbf7-4721-9bd7-273520616797)
2016-02-29 23:16:37,974 [12680] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:16:37,977 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 33b39480-0e50-4036-8860-fa5ad7a0f990)
2016-02-29 23:16:37,981 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: cebd1ac0-dbf7-4721-9bd7-273520616797)
2016-02-29 23:16:37,981 [12680] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 0 to 1
2016-02-29 23:16:37,981 [12680] DEBUG R54IN0.WPF.DataDirector - update Property: Memo Convert  to 
2016-02-29 23:16:37,981 [12680] DEBUG R54IN0.WPF.DataDirector - update Property: MakerID Convert  to 
2016-02-29 23:16:37,981 [12680] DEBUG R54IN0.WPF.DataDirector - update Property: MeasureID Convert  to 
2016-02-29 23:16:37,981 [12680] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:16:37,982 [12680] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:16:37,985 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: ba5e8ae2-3fb0-4c03-9c71-0882a4b7d412)
2016-02-29 23:16:37,989 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: cebd1ac0-dbf7-4721-9bd7-273520616797)
2016-02-29 23:16:37,989 [12680] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 1 to 0
2016-02-29 23:16:37,989 [12680] DEBUG R54IN0.WPF.DataDirector - update Property: MakerID Convert  to 
2016-02-29 23:16:37,989 [12680] DEBUG R54IN0.WPF.DataDirector - update Property: MeasureID Convert  to 
2016-02-29 23:16:37,989 [12680] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:16:37,991 [12680] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:16:37,997 [12680] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:16:38,010 [12680] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:16:38,013 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: ed00f089-e1fa-45f9-b9ff-2866bf608283)
2016-02-29 23:16:38,021 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 91f47d51-05b2-4f25-8422-623fa53ac148)
2016-02-29 23:16:38,021 [12680] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -4 to -3
2016-02-29 23:16:38,021 [12680] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:16:38,027 [12680] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:16:38,029 [12680] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:16:38,032 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 2d41511f-5e9c-48a7-9c9b-3750e755c51b)
2016-02-29 23:16:38,036 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: a8b3df27-d35a-4378-a14e-41beb798aca3)
2016-02-29 23:16:38,036 [12680] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 6 to 5
2016-02-29 23:16:38,036 [12680] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:16:38,037 [12680] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:16:38,815 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 17f1459a-553c-4f27-96ef-7164e9b4b842)
2016-02-29 23:16:38,815 [12680] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 4 to 10
2016-02-29 23:16:38,820 [12680] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 58b69bd7-5b6a-4369-ba32-e5b8fef81fdd)
2016-02-29 23:16:38,820 [12680] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -1 to -7
2016-02-29 23:16:40,384 [7508] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:16:40,386 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 35c3dcbc-8915-4eb8-84d4-218466373185)
2016-02-29 23:16:40,390 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 93045bc2-46d6-4d60-a4b9-461a815a75fb)
2016-02-29 23:16:40,390 [7508] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -10 to -9
2016-02-29 23:16:40,436 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 3b4576df-d2a9-4eea-8eef-50a459d2bb09)
2016-02-29 23:16:40,437 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: c81b1bd4-1546-44fe-9eb4-ff590034658f)
2016-02-29 23:16:40,438 [7508] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -9 to -12
2016-02-29 23:16:40,464 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: afccf088-59e8-43df-b9b8-14691ffbcd4b)
2016-02-29 23:16:40,466 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 466b67bb-9a14-4d1e-ba5f-d9d051332884)
2016-02-29 23:16:40,466 [7508] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 0 to -8
2016-02-29 23:16:40,478 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 31f5e8f5-4c00-446c-9907-4b61b7d05a65)
2016-02-29 23:16:40,480 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 9756176c-0c02-4f0c-8128-625fb9b4ff53)
2016-02-29 23:16:40,480 [7508] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -10 to -2
2016-02-29 23:16:40,493 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 3e38e40b-3188-43c7-9c2a-ccc858419504)
2016-02-29 23:16:40,494 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 35c1c437-04dd-483a-a42e-43441a2ac6bc)
2016-02-29 23:16:40,494 [7508] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -17 to -24
2016-02-29 23:16:40,516 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 9756176c-0c02-4f0c-8128-625fb9b4ff53)
2016-02-29 23:16:40,516 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 61155b9e-d6e5-4473-bd1d-e8b51cd1ee6b)
2016-02-29 23:16:40,517 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: bef6d573-89c3-479a-93d1-6e299c7737d3)
2016-02-29 23:16:40,517 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: dc31a0bc-fd30-4f05-a4fa-7dab170e4fac)
2016-02-29 23:16:40,519 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: ad19f147-6878-4fb3-9844-bfd3195982db)
2016-02-29 23:16:40,519 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: f7bedfb7-5c68-4bf6-8dc5-15800d15ce64)
2016-02-29 23:16:40,520 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 5f451b61-8680-44e8-a7cd-395cfc5f4e02)
2016-02-29 23:16:40,521 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 4fd55ba9-13d6-403e-a3a9-a779d7386547)
2016-02-29 23:16:40,524 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: a2ff1804-a92b-439d-89f4-262d5520b2e9)
2016-02-29 23:16:40,524 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 3638ee1b-209b-4e27-b429-d632ee247320)
2016-02-29 23:16:40,525 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 91b4ccc7-3d52-4ec3-b3bc-a541b9e7ba39)
2016-02-29 23:16:40,526 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 2b814cbf-2a02-41ae-97de-54f272af4ecc)
2016-02-29 23:16:40,527 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 1496699f-88eb-4d07-ba65-bfd554d74ada)
2016-02-29 23:16:40,528 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 7f05c06b-80e0-4c62-83da-ea95d34fbfb0)
2016-02-29 23:16:40,528 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 44823434-4108-4861-8323-5d24e4ccde7d)
2016-02-29 23:16:40,529 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 067e5289-5bc2-42cc-8e62-af23e3e81724)
2016-02-29 23:16:40,530 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: f5196598-f2dc-44c6-9103-15ac3122747c)
2016-02-29 23:16:40,531 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 31f5e8f5-4c00-446c-9907-4b61b7d05a65)
2016-02-29 23:16:40,532 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 21d0d79c-7da0-4363-8e27-0103b3223a11)
2016-02-29 23:16:40,551 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 540f7e10-62c3-4889-a5c5-d5c14f6913c9)
2016-02-29 23:16:40,553 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 6b2e2ccd-c4d0-428f-87b9-957464323341)
2016-02-29 23:16:40,553 [7508] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -3 to -4
2016-02-29 23:16:40,565 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 081d029d-0ac4-41a2-9408-494b2517364b)
2016-02-29 23:16:40,567 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 0b91a929-9e1d-45af-b342-3e0ab71901b2)
2016-02-29 23:16:40,567 [7508] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 8 to 4
2016-02-29 23:16:40,590 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 964c92e7-9cd9-4182-a171-df7ae072c917)
2016-02-29 23:16:40,592 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 8c0ec496-9875-4a87-a6b5-49a447efd2eb)
2016-02-29 23:16:40,592 [7508] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 5 to 1
2016-02-29 23:16:40,607 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Project, id: cbffde7b-9c48-41ac-aa8e-3e5856df7e6d)
2016-02-29 23:16:40,609 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 2687353d-d5e2-4da3-a07b-ce90830d3f5d)
2016-02-29 23:16:40,611 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 35c1c437-04dd-483a-a42e-43441a2ac6bc)
2016-02-29 23:16:40,612 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 8f82b260-485c-46c5-b00a-0bfc841cdbb9)
2016-02-29 23:16:40,614 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 21b9730f-1035-401b-85c6-1938216065d0)
2016-02-29 23:16:40,615 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 9fc23a80-787d-4036-ae74-6f4b69d33e01)
2016-02-29 23:16:40,617 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 268c1342-cee3-4e45-aebd-2b7b6fb8ac26)
2016-02-29 23:16:40,617 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 2a8b2517-da2d-438b-bfbd-ccfe371e4c92)
2016-02-29 23:16:40,620 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 61709e32-9792-4194-94fe-4c6e26ee8aaa)
2016-02-29 23:16:40,621 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 2e99977d-4969-481d-81c4-a7e31233353a)
2016-02-29 23:16:40,623 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 93045bc2-46d6-4d60-a4b9-461a815a75fb)
2016-02-29 23:16:40,624 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: c4e975b7-9175-4377-826b-ceabd502d091)
2016-02-29 23:16:40,626 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 268c1342-cee3-4e45-aebd-2b7b6fb8ac26)
2016-02-29 23:16:40,627 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: f7bedfb7-5c68-4bf6-8dc5-15800d15ce64)
2016-02-29 23:16:40,629 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 9756176c-0c02-4f0c-8128-625fb9b4ff53)
2016-02-29 23:16:40,630 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 07736b28-6359-4257-8bc3-c6ae38f4a99b)
2016-02-29 23:16:40,632 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: d99b82cc-194e-4b6c-bb42-725454f68f7f)
2016-02-29 23:16:40,632 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 559e921b-d690-4817-8a18-466ac039f72b)
2016-02-29 23:16:40,635 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 6ff1b3aa-0600-404d-9b32-9b3cc4ec8000)
2016-02-29 23:16:40,635 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: e552b893-7dec-450c-a5bb-27357b8eeeff)
2016-02-29 23:16:40,638 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 82602ff2-4d80-4c7b-9375-48788ea07174)
2016-02-29 23:16:40,639 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 26f4ff52-a135-4515-a520-36006a6264cf)
2016-02-29 23:16:40,641 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 21b9730f-1035-401b-85c6-1938216065d0)
2016-02-29 23:16:40,641 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 6168facb-0613-4d4b-8171-20d63a07e57c)
2016-02-29 23:16:40,643 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 30170207-dd47-432d-b775-d2f2928843c5)
2016-02-29 23:16:40,644 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 44b3b97c-9848-4562-b1f9-16fc8777cc79)
2016-02-29 23:16:40,646 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: fd7e5cef-2413-430e-8fbc-169e5189ca84)
2016-02-29 23:16:40,647 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 65f7aed3-83b0-4c07-a4cf-658a59c5607f)
2016-02-29 23:16:40,649 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: b80103d4-1e73-4ed1-bc2e-2d2ba860d679)
2016-02-29 23:16:40,650 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 70380647-62c1-4b62-afb9-2df02debf379)
2016-02-29 23:16:40,652 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 0be70fe5-bfa8-41c1-a4d8-4fc65499eae0)
2016-02-29 23:16:40,653 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: ab59626e-c431-439f-9d59-9c91d8c4bca9)
2016-02-29 23:16:40,655 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 776d40e1-4875-4f90-a7f7-c70a328cd247)
2016-02-29 23:16:40,656 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: ca078b25-8455-4f75-83ee-0d7be9f8c5fa)
2016-02-29 23:16:40,658 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: e3f6c580-9df0-483b-a4ce-f09ae3eb49de)
2016-02-29 23:16:40,659 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: f3d1b06a-0f27-41e6-80ac-84fc60716bef)
2016-02-29 23:16:40,661 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 93045bc2-46d6-4d60-a4b9-461a815a75fb)
2016-02-29 23:16:40,663 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 13297d0a-8926-457c-a513-67f209a9d8b8)
2016-02-29 23:16:40,666 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 6ff1b3aa-0600-404d-9b32-9b3cc4ec8000)
2016-02-29 23:16:40,666 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 18b28161-4958-4612-8e4c-2b112c4d61fd)
2016-02-29 23:16:40,668 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: b80103d4-1e73-4ed1-bc2e-2d2ba860d679)
2016-02-29 23:16:40,669 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 69534606-4b61-4c7d-8380-ba43c6008aad)
2016-02-29 23:16:40,671 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 776d40e1-4875-4f90-a7f7-c70a328cd247)
2016-02-29 23:16:40,671 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 84cd6a1b-2a3c-4799-87d0-74a05803b3a0)
2016-02-29 23:16:40,673 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: b8f588c5-92aa-4fc9-ab49-f5ec2533f7cb)
2016-02-29 23:16:40,674 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: b8ff976c-4be7-4959-956f-0345b1f46562)
2016-02-29 23:16:40,676 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: fd7e5cef-2413-430e-8fbc-169e5189ca84)
2016-02-29 23:16:40,677 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 4eb46b63-27aa-4a16-984c-005592d60c17)
2016-02-29 23:16:40,679 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 8c0ec496-9875-4a87-a6b5-49a447efd2eb)
2016-02-29 23:16:40,680 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 891974b8-61c7-474c-88f5-435da16789df)
2016-02-29 23:16:40,682 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 82602ff2-4d80-4c7b-9375-48788ea07174)
2016-02-29 23:16:40,682 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 933d6556-784e-4195-a1ea-d9c3f525aeb5)
2016-02-29 23:16:40,684 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: c81b1bd4-1546-44fe-9eb4-ff590034658f)
2016-02-29 23:16:40,685 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: bb8c3264-ff75-480f-bddc-8d7a9eda0dff)
2016-02-29 23:16:40,687 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 776d40e1-4875-4f90-a7f7-c70a328cd247)
2016-02-29 23:16:40,687 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: c37b5feb-bf8f-483a-a0b8-013557348d5c)
2016-02-29 23:16:40,690 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 35c1c437-04dd-483a-a42e-43441a2ac6bc)
2016-02-29 23:16:40,691 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 225840f7-a454-4d83-81ed-28b67b104aec)
2016-02-29 23:16:40,693 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 93045bc2-46d6-4d60-a4b9-461a815a75fb)
2016-02-29 23:16:40,694 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 7c959a80-213d-4bf0-89f6-db2f85ff8612)
2016-02-29 23:16:40,695 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 82602ff2-4d80-4c7b-9375-48788ea07174)
2016-02-29 23:16:40,696 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: d065473b-de94-4256-9179-c59a650eb2b4)
2016-02-29 23:16:40,698 [7508] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: b80103d4-1e73-4ed1-bc2e-2d2ba860d679)
2016-02-29 23:16:42,756 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 0c276485-d301-499d-825a-28ed487b0b48)
2016-02-29 23:16:42,765 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: cbde7e10-ca87-479b-8536-ae28bbadd726)
2016-02-29 23:16:42,780 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 5adceaec-9d41-405d-8181-0c061358f5af)
2016-02-29 23:16:42,790 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: c99733a0-3bc5-4140-9328-e14e351c7f26)
2016-02-29 23:16:42,815 [5908] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 319ab44b-fa2a-4999-a1c5-18553fdd3f56)
2016-02-29 23:16:42,815 [5908] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: f7aac292-57c5-4fdc-a211-1f74d6782e1b)
2016-02-29 23:16:42,836 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: Product, ID: 166b076c-abba-442a-8148-0797f8bba243)
2016-02-29 23:16:42,861 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: a8f9e6da-66c9-4e67-b739-b6b16779093f)
2016-02-29 23:16:42,875 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: 5d57138f-6c0e-4085-9a9a-d9b561190d9d)
2016-02-29 23:16:42,882 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 35c71c84-3385-4abb-a053-d6997c0ea7e5)
2016-02-29 23:16:42,890 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Measure, id: b641a715-bf4a-4353-abed-78e6afe32954)
2016-02-29 23:16:42,891 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 124d564b-786c-4d41-8191-42eaf2391bcf)
2016-02-29 23:16:42,892 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 319ab44b-fa2a-4999-a1c5-18553fdd3f56)
2016-02-29 23:16:42,893 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 5adceaec-9d41-405d-8181-0c061358f5af)
2016-02-29 23:16:42,893 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 613bc303-480d-44a3-8e9c-4c7bb2ac7293)
2016-02-29 23:16:42,894 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 6aa17242-2998-43e0-890a-4cc1bc34f6ad)
2016-02-29 23:16:42,895 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 89996ca4-008d-4689-900b-cfd90ac0e7fc)
2016-02-29 23:16:42,895 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 8ffd901e-e2dc-4fb0-a8d6-4b954ab01a85)
2016-02-29 23:16:42,896 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 9a6ef2a9-4126-4a52-88f5-dfb224c10b61)
2016-02-29 23:16:42,896 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: cbde7e10-ca87-479b-8536-ae28bbadd726)
2016-02-29 23:16:42,897 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f60561f3-d691-4c88-9e1e-2b324539b74e)
2016-02-29 23:16:42,897 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f925458a-6b01-4624-aa60-53ce9a091d9f)
2016-02-29 23:16:42,898 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: fed8a6a5-0cd6-4613-a2cf-c3a99b4a5d83)
2016-02-29 23:16:45,729 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 0011146f-dae7-4781-a92a-723394a74b6f)
2016-02-29 23:16:45,733 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 02b9d147-8237-4fe8-9e40-47f3ccfab526)
2016-02-29 23:16:45,733 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 1 to 4
2016-02-29 23:16:45,736 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 08afda61-06fc-4dec-9fdd-269b17b762a3)
2016-02-29 23:16:45,739 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1b5aa0bc-fbd8-43ff-b031-a3f27cfc4ea2)
2016-02-29 23:16:45,739 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 4 to 10
2016-02-29 23:16:45,742 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 0edf3da6-f2ee-4aab-af97-09841129d947)
2016-02-29 23:16:45,746 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 9330dd4a-4ef2-4cb2-ad45-c86aadea981f)
2016-02-29 23:16:45,746 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 6 to 11
2016-02-29 23:16:45,749 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 0f23dd1f-fb2b-4437-9c79-d2cf18087c40)
2016-02-29 23:16:45,754 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 02b9d147-8237-4fe8-9e40-47f3ccfab526)
2016-02-29 23:16:45,754 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 4 to 7
2016-02-29 23:16:45,757 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 0fac3c08-330b-4051-888d-a4ce20c43cba)
2016-02-29 23:16:45,760 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: bd4aa43b-08c2-4655-99ed-72bd1d9733fc)
2016-02-29 23:16:45,760 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -17 to -10
2016-02-29 23:16:45,763 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 16b29e3d-2522-450b-9393-4ca1ee966346)
2016-02-29 23:16:45,767 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 52df11f1-1f32-4127-ab22-c760e40ca29d)
2016-02-29 23:16:45,767 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -8 to 1
2016-02-29 23:16:45,770 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 1cd63087-4c5c-4060-bb20-7571cd7427c3)
2016-02-29 23:16:45,774 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 02b9d147-8237-4fe8-9e40-47f3ccfab526)
2016-02-29 23:16:45,774 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 7 to 13
2016-02-29 23:16:45,781 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 2060534c-ff64-4c42-ae94-842fc87eb06c)
2016-02-29 23:16:45,785 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1ab66d34-e99f-4d22-91d1-c1c2a61096c6)
2016-02-29 23:16:45,785 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 5 to 12
2016-02-29 23:16:45,787 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 23745ae0-b141-465c-a475-014ee1120f73)
2016-02-29 23:16:45,792 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 8750de43-2cd5-4e17-a8dd-c01d82ba7741)
2016-02-29 23:16:45,792 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 5 to 9
2016-02-29 23:16:45,795 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 26d0c24f-562f-4fa8-a574-c524abb0106c)
2016-02-29 23:16:45,799 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 6416a4b7-b04d-4d34-a755-bab1dd1d045b)
2016-02-29 23:16:45,799 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -14 to -5
2016-02-29 23:16:45,801 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 2b0a6dcd-982a-4bb6-919e-0953da49504d)
2016-02-29 23:16:45,806 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 86bcd798-1b7b-4385-a154-1a792bf57e9c)
2016-02-29 23:16:45,806 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -2 to 7
2016-02-29 23:16:45,809 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 3e39e5c2-3ab0-4f8d-9096-5d18d82fa5b2)
2016-02-29 23:16:45,813 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 32e40a5c-9bfb-488d-99ff-863d72ddc317)
2016-02-29 23:16:45,813 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 6 to 9
2016-02-29 23:16:45,815 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 4e9dc2e5-2e3a-44ff-90c9-24b7bdecae8c)
2016-02-29 23:16:45,819 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: b5563a1b-db3d-40c3-ab5b-420b1096f2ad)
2016-02-29 23:16:45,819 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 3 to 10
2016-02-29 23:16:45,822 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 57a29e35-6591-42e7-895b-7cd15a3f21c1)
2016-02-29 23:16:45,826 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: fb27466f-2bf1-4580-930d-83987ebc316f)
2016-02-29 23:16:45,826 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -8 to -5
2016-02-29 23:16:45,829 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 5a609f42-c2e9-4785-8613-9799e10b7519)
2016-02-29 23:16:45,832 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 6416a4b7-b04d-4d34-a755-bab1dd1d045b)
2016-02-29 23:16:45,832 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -5 to 4
2016-02-29 23:16:45,835 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 5b593275-50fb-4d9b-bb00-beedd9b884d9)
2016-02-29 23:16:45,839 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 837b88f3-c2d5-4926-8c7d-f3ea109c9909)
2016-02-29 23:16:45,839 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 3 to 11
2016-02-29 23:16:45,842 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 77c31a8d-40bf-4bef-8edc-bc257f779a6c)
2016-02-29 23:16:45,846 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 21577e96-cffc-483e-8a9c-cf7cf2d7a22e)
2016-02-29 23:16:45,846 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -12 to -10
2016-02-29 23:16:45,849 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 7d96ef3a-19d6-4bb8-97c9-b12dab331827)
2016-02-29 23:16:45,853 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: f761a5f4-a892-440b-bc50-571c045c0d6b)
2016-02-29 23:16:45,853 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 5 to 7
2016-02-29 23:16:45,855 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 84edf58a-823c-47f0-b615-504344cc420e)
2016-02-29 23:16:45,859 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: fc578820-14ac-4396-87ba-42f538ab1311)
2016-02-29 23:16:45,859 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -3 to -2
2016-02-29 23:16:45,862 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 93bf5daf-3624-41f5-b7ac-a63c704c1019)
2016-02-29 23:16:45,865 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 86bcd798-1b7b-4385-a154-1a792bf57e9c)
2016-02-29 23:16:45,866 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 7 to 8
2016-02-29 23:16:45,868 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 9becce08-93b1-464a-a429-31bd0fb6510c)
2016-02-29 23:16:45,872 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: fc578820-14ac-4396-87ba-42f538ab1311)
2016-02-29 23:16:45,872 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -2 to 4
2016-02-29 23:16:45,875 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 9d24257e-a46b-497c-b79e-85cebacccbc0)
2016-02-29 23:16:45,882 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: bd4aa43b-08c2-4655-99ed-72bd1d9733fc)
2016-02-29 23:16:45,882 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -10 to -1
2016-02-29 23:16:45,885 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: aa23a8a3-077d-4501-b25b-c642b11b82da)
2016-02-29 23:16:45,888 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 7335b099-4dfe-429a-a7fd-606d77960925)
2016-02-29 23:16:45,888 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -8 to -2
2016-02-29 23:16:45,891 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: ab610e8f-c792-4348-8942-1cc83fd2b06f)
2016-02-29 23:16:45,896 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 86bcd798-1b7b-4385-a154-1a792bf57e9c)
2016-02-29 23:16:45,896 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 8 to 11
2016-02-29 23:16:45,898 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: b50e2ea7-12ba-4691-94c0-7ab79274a7e3)
2016-02-29 23:16:45,902 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 6416a4b7-b04d-4d34-a755-bab1dd1d045b)
2016-02-29 23:16:45,902 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 4 to 13
2016-02-29 23:16:45,905 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: b7037747-79cf-44c5-b905-62995cafc70c)
2016-02-29 23:16:45,910 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: a8ecc2bf-a6cc-48ea-b0eb-b1ed1877d394)
2016-02-29 23:16:45,910 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -2 to -1
2016-02-29 23:16:45,912 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: b8ba52b5-0b3f-42e5-82b1-270f2cff73f4)
2016-02-29 23:16:45,916 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 8750de43-2cd5-4e17-a8dd-c01d82ba7741)
2016-02-29 23:16:45,916 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 9 to 11
2016-02-29 23:16:45,918 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: c0de3f12-f451-4b03-95da-70429c63884a)
2016-02-29 23:16:45,922 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 21577e96-cffc-483e-8a9c-cf7cf2d7a22e)
2016-02-29 23:16:45,922 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -10 to -4
2016-02-29 23:16:45,925 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: c0e8c045-646e-493e-8d46-6bd150bbe948)
2016-02-29 23:16:45,929 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 8ef48853-9213-403d-8283-148c9632578d)
2016-02-29 23:16:45,929 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -10 to -3
2016-02-29 23:16:45,931 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: c1b92da2-59ec-4720-90d7-8ffbccc4b2ff)
2016-02-29 23:16:45,935 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: fc578820-14ac-4396-87ba-42f538ab1311)
2016-02-29 23:16:45,935 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 4 to 5
2016-02-29 23:16:45,938 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: c34b5bc0-54f0-4e89-b89e-85d6ff50a9ad)
2016-02-29 23:16:45,941 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 21577e96-cffc-483e-8a9c-cf7cf2d7a22e)
2016-02-29 23:16:45,941 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -4 to 3
2016-02-29 23:16:45,944 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: c934b2d9-06f6-4961-8820-fb1b66ce227f)
2016-02-29 23:16:45,948 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 32e40a5c-9bfb-488d-99ff-863d72ddc317)
2016-02-29 23:16:45,948 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 9 to 18
2016-02-29 23:16:45,950 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: cf1cc8bb-8d2c-4a28-a480-b51a3b66f1c0)
2016-02-29 23:16:45,954 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 9330dd4a-4ef2-4cb2-ad45-c86aadea981f)
2016-02-29 23:16:45,955 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 11 to 13
2016-02-29 23:16:45,958 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: cf886a8f-c3be-4001-86d3-bbaa9f2c430f)
2016-02-29 23:16:45,962 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 72be24b9-e10e-44e7-9795-b184daed8a18)
2016-02-29 23:16:45,962 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 3 to 9
2016-02-29 23:16:45,965 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: d2eb2a25-906c-42a4-b0be-f2aa86ba1ff8)
2016-02-29 23:16:45,969 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 837b88f3-c2d5-4926-8c7d-f3ea109c9909)
2016-02-29 23:16:45,969 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 11 to 16
2016-02-29 23:16:45,972 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: db0d36a2-5753-49cf-9300-957b1fcd899a)
2016-02-29 23:16:45,975 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1ab66d34-e99f-4d22-91d1-c1c2a61096c6)
2016-02-29 23:16:45,975 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 12 to 16
2016-02-29 23:16:45,984 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: ddbfa806-bbb4-41b0-baa4-df828ba78349)
2016-02-29 23:16:45,988 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1b5aa0bc-fbd8-43ff-b031-a3f27cfc4ea2)
2016-02-29 23:16:45,988 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 10 to 15
2016-02-29 23:16:45,991 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: e5f77b5e-a43d-4aed-99e4-e50ea8e9b05e)
2016-02-29 23:16:45,994 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: a8ecc2bf-a6cc-48ea-b0eb-b1ed1877d394)
2016-02-29 23:16:45,995 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -1 to 5
2016-02-29 23:16:45,997 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Project, id: 060702cb-c5b0-4413-b874-4cc758a260f1)
2016-02-29 23:16:47,656 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Product, id: 6efeb5ab-8a1f-4de1-8034-96b96606e139)
2016-02-29 23:16:47,656 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 47cf13d6-662d-4c88-b63f-31545c35da6b)
2016-02-29 23:16:47,656 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: c58b3564-65ae-4e8d-ac82-0519093e86e3)
2016-02-29 23:16:47,658 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: e8ddb593-1145-4c08-b2d4-196376226fce)
2016-02-29 23:16:47,659 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: a45435ca-8a58-4dd4-88ab-a5867278fa12)
2016-02-29 23:16:47,660 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 924847e7-fe68-42a7-a1f3-0705c591d426)
2016-02-29 23:16:47,661 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 2e10a201-da30-46b8-b5c9-b08ecb6b5726)
2016-02-29 23:16:47,663 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: d8195dff-b1fa-4441-8e7f-4f74e06f7204)
2016-02-29 23:16:47,664 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: e250481f-b6be-4616-956a-994044e1e0a1)
2016-02-29 23:16:47,665 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: ace2b20c-094e-4a37-9aed-e5c85d2bc45d)
2016-02-29 23:16:47,666 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 7763f74e-ed4d-407f-b7c1-3a1260df482a)
2016-02-29 23:16:47,667 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 6ffa2c9c-acc0-4f1b-a824-c741ba6ad529)
2016-02-29 23:16:47,669 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: b697f169-66ce-42a7-9e56-1f4088c8b475)
2016-02-29 23:16:47,670 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 3595f9cb-e28b-4aba-8442-116a0f89d673)
2016-02-29 23:16:47,671 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: af30f61a-ca45-408f-963e-26d0dfb3fa85)
2016-02-29 23:16:47,673 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: b5d175f0-8ae8-4389-bcbe-2d391b7d5853)
2016-02-29 23:16:47,674 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 6a4996e0-c3e4-4f84-9d63-85959e808d21)
2016-02-29 23:16:47,674 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 1ad3eb5a-0883-4c8c-b37e-e707f768f3db)
2016-02-29 23:16:47,675 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 2962509a-cbe4-4c15-9ed0-d74c5fa0a582)
2016-02-29 23:16:47,676 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: c605bba4-ad92-449c-a47e-719b691e3331)
2016-02-29 23:16:47,692 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Product, id: 51635f95-9c3b-4076-9db3-b460e9b9e477)
2016-02-29 23:16:47,692 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 1b8a18ed-82ca-45c5-878c-e6c9e887e764)
2016-02-29 23:16:47,707 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Product, id: 776319e5-e638-43a6-83b5-2fa97610dd7a)
2016-02-29 23:16:47,707 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 27f81b20-424d-4f89-b104-f34ae42bbfbb)
2016-02-29 23:16:47,707 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: bd708c2d-a3e8-458c-9e89-2e6a9f48e1de)
2016-02-29 23:16:47,720 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Product, id: 72b9208f-8091-4064-853d-92d074a2b518)
2016-02-29 23:16:47,721 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 2154ee88-58ae-4ae6-ab5b-72194daaee2a)
2016-02-29 23:23:30,727 [17348] DEBUG ReadOnlyServer-8836559 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 23:23:30,737 [17348] DEBUG ReadOnlyServer-8836559 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 23:23:30,737 [17348] DEBUG ReadOnlyServer-8836559 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 23:23:30,737 [17348] DEBUG ReadOnlyServer-8836559 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 23:23:30,737 [17348] DEBUG ReadOnlyServer-8836559 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 23:23:30,806 [17348] DEBUG WriteOnlyServer-62792180 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 23:23:30,806 [17348] DEBUG WriteOnlyServer-62792180 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 23:23:30,806 [17348] DEBUG WriteOnlyServer-62792180 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 23:23:30,827 [17348] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 23:23:30,829 [17348] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 23:23:30,899 [10504] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:23:30,903 [16516] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:23:30,993 [13628] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:23:31,020 [16516] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:23:31,031 [10580] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:23:31,032 [16516] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:23:31,039 [7280] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 23:23:31,040 [6352] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:23:31,047 [7280] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:23:31,048 [16516] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:23:31,054 [13628] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:23:31,055 [6352] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:23:31,060 [13628] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:23:31,062 [1732] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:23:31,070 [13628] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:23:31,071 [1732] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:23:31,075 [15848] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:23:31,076 [6352] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:23:31,093 [15848] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6879)
2016-02-29 23:23:31,096 [6352] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:23:31,103 [6352] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:23:31,158 [17348] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:23:31,158 [17348] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:23:31,164 [17348] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 23:23:31,164 [17348] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 23:23:31,168 [6352] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:23:31,168 [6352] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:23:31,169 [8912] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:23:31,172 [1732] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:23:31,173 [13628] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:23:31,174 [6352] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:23:31,175 [10580] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 23:23:31,176 [16516] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:23:31,177 [8912] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:23:31,179 [16516] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:23:31,180 [8912] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:23:31,181 [16516] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:23:31,182 [13628] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:23:31,184 [6352] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:23:31,185 [10580] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:23:31,186 [1732] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:23:31,187 [7280] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:23:31,188 [16516] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:23:31,190 [13628] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6879)
2016-02-29 23:23:31,192 [1732] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:23:31,193 [1732] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:23:31,211 [17348] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 23:23:31,228 [10580] DEBUG WriteOnlyServer-62792180 - insert into Maker (ID, Name) values ('2bfa2882-b479-47a3-8a5c-fa4b5e0deff2', 'soime');
2016-02-29 23:23:31,240 [10580] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 184)
2016-02-29 23:23:31,373 [16516] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 23:23:31,378 [16516] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 2bfa2882-b479-47a3-8a5c-fa4b5e0deff2)
2016-02-29 23:23:31,733 [17348] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:23:31,734 [17348] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:23:31,734 [17348] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 23:23:31,735 [17348] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 23:23:31,751 [16516] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:23:31,751 [16516] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:23:31,752 [15848] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:23:31,753 [16516] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:23:31,754 [10580] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:23:31,754 [1732] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:23:31,755 [13628] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1214)
2016-02-29 23:23:31,756 [6352] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:23:31,757 [15848] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:23:31,758 [6352] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:23:31,759 [10580] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:23:31,759 [1732] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:23:31,760 [13628] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:23:31,760 [16516] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:23:31,761 [15848] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:23:31,762 [16516] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:23:31,762 [10580] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:23:31,763 [6352] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:23:31,764 [13628] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6879)
2016-02-29 23:23:31,766 [1732] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:23:31,767 [1732] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:23:31,769 [17348] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 23:23:31,771 [15848] DEBUG WriteOnlyServer-62792180 - delete from Maker where ID = 'c151c25b-b140-4d38-85f2-cd59b1cc27af';
2016-02-29 23:23:31,779 [15848] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 23:23:31,779 [15848] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 23:23:31,779 [15848] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = 'c151c25b-b140-4d38-85f2-cd59b1cc27af';
2016-02-29 23:23:31,783 [15848] DEBUG WriteOnlyServer-62792180 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 23:23:31,783 [16516] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: DELT, TYPE: Maker)
2016-02-29 23:23:31,786 [16516] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: c151c25b-b140-4d38-85f2-cd59b1cc27af)
2016-02-29 23:23:31,788 [16516] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 23:23:31,788 [16516] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:InventoryFormat)
2016-02-29 23:23:31,791 [10580] DEBUG WriteOnlyServer-62792180 - update InventoryFormat set MakerID = '' where ID = '09eafaae-c623-4c6e-b4e8-283edd92cc08';
2016-02-29 23:23:31,793 [10580] DEBUG WriteOnlyServer-62792180 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 348)
2016-02-29 23:23:31,794 [16516] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: UPDT, TYPE: InventoryFormat)
2016-02-29 23:23:31,794 [10580] DEBUG WriteOnlyServer-62792180 - update InventoryFormat set MakerID = '' where ID = 'b6323f4b-89d2-4f49-a9c5-5074df02ff8b';
2016-02-29 23:23:31,796 [16516] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 09eafaae-c623-4c6e-b4e8-283edd92cc08)
2016-02-29 23:23:31,797 [10580] DEBUG WriteOnlyServer-62792180 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 349)
2016-02-29 23:23:31,797 [6352] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: UPDT, TYPE: InventoryFormat)
2016-02-29 23:23:31,797 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: b6323f4b-89d2-4f49-a9c5-5074df02ff8b)
2016-02-29 23:23:31,874 [17348] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:23:31,874 [17348] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:23:31,879 [17348] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 23:23:31,883 [17348] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 23:23:31,890 [6352] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:23:31,890 [16516] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:23:31,891 [15848] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:23:31,893 [6352] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:23:31,895 [8912] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:23:31,896 [16516] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:23:31,897 [10580] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1143)
2016-02-29 23:23:31,898 [1732] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:23:31,898 [15848] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:23:31,899 [1732] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:23:31,900 [8912] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:23:31,900 [1732] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:23:31,901 [10580] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:23:31,902 [1732] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:23:31,903 [15848] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:23:31,903 [16516] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:23:31,904 [8912] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:23:31,904 [6352] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:23:31,905 [10580] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6807)
2016-02-29 23:23:31,907 [1732] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:23:31,907 [1732] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:23:32,072 [17348] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 23:23:32,073 [15848] DEBUG WriteOnlyServer-62792180 - insert into Product (ID, Name) values ('bc152700-62ae-47e8-9690-7bf8c48af8bc', '새로운 제품');
2016-02-29 23:23:32,082 [15848] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 197)
2016-02-29 23:23:32,082 [6352] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Product)
2016-02-29 23:23:32,082 [6352] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Product, ID: bc152700-62ae-47e8-9690-7bf8c48af8bc)
2016-02-29 23:23:32,184 [17348] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:23:32,184 [17348] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:23:32,188 [17348] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was started
2016-02-29 23:23:32,188 [17348] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was started
2016-02-29 23:23:32,190 [6352] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:23:32,191 [6352] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:23:32,191 [15848] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:23:32,193 [16516] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:23:32,194 [7280] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:23:32,194 [1732] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:23:32,194 [8912] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1143)
2016-02-29 23:23:32,195 [1732] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:23:32,196 [15848] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:23:32,196 [6352] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:23:32,197 [7280] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 23:23:32,197 [6352] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:23:32,198 [8912] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:23:32,198 [16516] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:23:32,199 [15848] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:23:32,200 [6352] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:23:32,200 [7280] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:23:32,201 [6352] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:23:32,202 [8912] DEBUG ReadOnlyServer-8836559 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6807)
2016-02-29 23:23:32,204 [1732] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:23:32,204 [1732] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:23:32,207 [17348] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 23:23:32,207 [15848] DEBUG WriteOnlyServer-62792180 - insert into Maker (ID, Name) values ('68613ffb-0377-4c19-8dc7-8e3f5c1b8520', 'some maker');
2016-02-29 23:23:32,207 [17348] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Measure)
2016-02-29 23:23:32,208 [17348] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:InventoryFormat)
2016-02-29 23:23:32,226 [15848] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 189)
2016-02-29 23:23:32,226 [1732] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 23:23:32,226 [1732] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 68613ffb-0377-4c19-8dc7-8e3f5c1b8520)
2016-02-29 23:23:32,226 [15848] DEBUG WriteOnlyServer-62792180 - insert into Measure (ID, Name) values ('d938662c-7a32-440d-92ab-a9b0228ced52', 'some measure');
2016-02-29 23:23:32,232 [15848] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Measure, SIZE: 193)
2016-02-29 23:23:32,232 [1732] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Measure)
2016-02-29 23:23:32,232 [1732] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: d938662c-7a32-440d-92ab-a9b0228ced52)
2016-02-29 23:23:32,232 [15848] DEBUG WriteOnlyServer-62792180 - insert into InventoryFormat (ID, Specification, Quantity, Memo, ProductID, MakerID, MeasureID) values ('061d6a20-1dfc-474b-b0a4-91fe4b5504fc', 'some specification', '0', 'spec', '721e9771-60a9-42f3-b0f0-31ce0cf9185c', '68613ffb-0377-4c19-8dc7-8e3f5c1b8520', 'd938662c-7a32-440d-92ab-a9b0228ced52');
2016-02-29 23:23:32,234 [15848] DEBUG WriteOnlyServer-62792180 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 394)
2016-02-29 23:23:32,234 [1732] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: InventoryFormat)
2016-02-29 23:23:32,234 [1732] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 061d6a20-1dfc-474b-b0a4-91fe4b5504fc)
2016-02-29 23:23:32,316 [17348] DEBUG ReadOnlyServer-8836559 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:23:32,316 [17348] DEBUG WriteOnlyServer-62792180 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:25:21,404 [16776] DEBUG ReadOnlyServer-25557002 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 23:25:21,414 [16776] DEBUG ReadOnlyServer-25557002 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 23:25:21,414 [16776] DEBUG ReadOnlyServer-25557002 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 23:25:21,414 [16776] DEBUG ReadOnlyServer-25557002 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 23:25:21,414 [16776] DEBUG ReadOnlyServer-25557002 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 23:25:21,475 [16776] DEBUG WriteOnlyServer-62034509 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 23:25:21,476 [16776] DEBUG WriteOnlyServer-62034509 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 23:25:21,476 [16776] DEBUG WriteOnlyServer-62034509 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 23:25:21,495 [16776] DEBUG ReadOnlyServer-25557002 - Listener (0.0.0.0:4000) was started
2016-02-29 23:25:21,496 [16776] DEBUG WriteOnlyServer-62034509 - Listener (0.0.0.0:4001) was started
2016-02-29 23:25:21,542 [11552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:21,547 [14988] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:21,608 [6400] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:25:21,624 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:25:21,630 [17352] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:25:21,631 [7572] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:25:21,633 [4696] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 23:25:21,634 [7572] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:25:21,636 [14928] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:25:21,637 [11552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:25:21,639 [4696] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:25:21,639 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:25:21,641 [6400] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:25:21,642 [11552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:25:21,644 [17352] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:25:21,645 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:25:21,646 [14928] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:25:21,647 [11552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:25:21,660 [17352] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6871)
2016-02-29 23:25:21,661 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:25:21,665 [14988] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:25:21,700 [16776] DEBUG ReadOnlyServer-25557002 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:25:21,700 [16776] DEBUG WriteOnlyServer-62034509 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:25:21,705 [16776] DEBUG ReadOnlyServer-25557002 - Listener (0.0.0.0:4000) was started
2016-02-29 23:25:21,705 [16776] DEBUG WriteOnlyServer-62034509 - Listener (0.0.0.0:4001) was started
2016-02-29 23:25:21,707 [14988] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:21,707 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:21,708 [4696] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:25:21,711 [8180] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:25:21,711 [17352] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:25:21,712 [8180] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:25:21,713 [6400] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 23:25:21,713 [11552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:25:21,714 [14928] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:25:21,715 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:25:21,715 [4696] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:25:21,716 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:25:21,716 [17352] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:25:21,717 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:25:21,718 [6400] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:25:21,718 [11552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:25:21,719 [14928] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:25:21,719 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:25:21,721 [4696] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6871)
2016-02-29 23:25:21,721 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:25:21,722 [14988] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:25:21,736 [16776] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 23:25:21,742 [17352] DEBUG WriteOnlyServer-62034509 - insert into Maker (ID, Name) values ('f064d4a1-6f75-4d72-8000-dcffe5bd13f1', 'soime');
2016-02-29 23:25:21,751 [17352] DEBUG WriteOnlyServer-62034509 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 184)
2016-02-29 23:25:21,829 [8180] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 23:25:21,831 [8180] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: f064d4a1-6f75-4d72-8000-dcffe5bd13f1)
2016-02-29 23:25:22,262 [16776] DEBUG ReadOnlyServer-25557002 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:25:22,262 [16776] DEBUG WriteOnlyServer-62034509 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:25:22,263 [16776] DEBUG ReadOnlyServer-25557002 - Listener (0.0.0.0:4000) was started
2016-02-29 23:25:22,264 [16776] DEBUG WriteOnlyServer-62034509 - Listener (0.0.0.0:4001) was started
2016-02-29 23:25:22,276 [14988] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:22,276 [8180] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:22,277 [6400] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:25:22,279 [8180] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:25:22,280 [14928] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:25:22,280 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:25:22,281 [4696] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1214)
2016-02-29 23:25:22,282 [11552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:25:22,283 [17352] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:25:22,284 [8180] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:25:22,284 [6400] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:25:22,285 [8180] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:25:22,286 [14928] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:25:22,287 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:25:22,288 [4696] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:25:22,289 [8180] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:25:22,290 [17352] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:25:22,291 [7572] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:25:22,292 [6400] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6871)
2016-02-29 23:25:22,293 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:25:22,293 [14988] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:25:22,296 [16776] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 23:25:22,297 [14928] DEBUG WriteOnlyServer-62034509 - delete from Maker where ID = 'e6b5c02b-4d67-48fd-9ceb-6bd9b039552d';
2016-02-29 23:25:22,305 [14928] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 23:25:22,305 [14928] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 23:25:22,305 [14928] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = 'e6b5c02b-4d67-48fd-9ceb-6bd9b039552d';
2016-02-29 23:25:22,307 [14928] DEBUG WriteOnlyServer-62034509 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 23:25:22,307 [14988] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: DELT, TYPE: Maker)
2016-02-29 23:25:22,310 [14988] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: e6b5c02b-4d67-48fd-9ceb-6bd9b039552d)
2016-02-29 23:25:22,406 [16776] DEBUG ReadOnlyServer-25557002 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:25:22,407 [16776] DEBUG WriteOnlyServer-62034509 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:25:22,410 [16776] DEBUG ReadOnlyServer-25557002 - Listener (0.0.0.0:4000) was started
2016-02-29 23:25:22,413 [16776] DEBUG WriteOnlyServer-62034509 - Listener (0.0.0.0:4001) was started
2016-02-29 23:25:22,419 [8180] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:22,419 [7572] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:22,421 [14928] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:25:22,423 [7572] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:25:22,423 [17352] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:25:22,424 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:25:22,425 [4696] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1152)
2016-02-29 23:25:22,426 [7572] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:25:22,427 [6400] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:25:22,427 [8180] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:25:22,428 [14928] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:25:22,429 [7572] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:25:22,429 [17352] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:25:22,430 [7572] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:25:22,430 [4696] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:25:22,431 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:25:22,431 [6400] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:25:22,432 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:25:22,433 [14928] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6871)
2016-02-29 23:25:22,434 [7572] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:25:22,434 [7572] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:25:22,575 [16776] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 23:25:22,576 [17352] DEBUG WriteOnlyServer-62034509 - insert into Product (ID, Name) values ('7e763d83-4b7b-4719-b482-ede335f17fa8', '새로운 제품');
2016-02-29 23:25:22,579 [17352] DEBUG WriteOnlyServer-62034509 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 197)
2016-02-29 23:25:22,579 [7572] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Product)
2016-02-29 23:25:22,579 [7572] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Product, ID: 7e763d83-4b7b-4719-b482-ede335f17fa8)
2016-02-29 23:25:22,687 [16776] DEBUG ReadOnlyServer-25557002 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:25:22,687 [16776] DEBUG WriteOnlyServer-62034509 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:25:22,691 [16776] DEBUG ReadOnlyServer-25557002 - Listener (0.0.0.0:4000) was started
2016-02-29 23:25:22,691 [16776] DEBUG WriteOnlyServer-62034509 - Listener (0.0.0.0:4001) was started
2016-02-29 23:25:22,694 [14988] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:22,694 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:22,694 [6400] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Customer, BYTE SIZE: 988)
2016-02-29 23:25:22,697 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Customer)
2016-02-29 23:25:22,698 [17352] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:25:22,698 [7572] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:25:22,699 [14928] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1152)
2016-02-29 23:25:22,700 [8180] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:25:22,701 [4696] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Measure, BYTE SIZE: 362)
2016-02-29 23:25:22,702 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Measure)
2016-02-29 23:25:22,702 [6400] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 948)
2016-02-29 23:25:22,703 [7572] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:25:22,704 [17352] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Project, BYTE SIZE: 499)
2016-02-29 23:25:22,705 [8180] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Project)
2016-02-29 23:25:22,705 [14928] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Supplier, BYTE SIZE: 988)
2016-02-29 23:25:22,706 [7572] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Supplier)
2016-02-29 23:25:22,706 [4696] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Warehouse, BYTE SIZE: 628)
2016-02-29 23:25:22,707 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Warehouse)
2016-02-29 23:25:22,708 [6400] DEBUG ReadOnlyServer-25557002 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 6871)
2016-02-29 23:25:22,709 [8180] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:25:22,709 [8180] DEBUG R54IN0.WPF.DataDirector - ---------------DataDirector 포맷 데이터 읽기 완료---------------
2016-02-29 23:25:22,712 [16776] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Maker)
2016-02-29 23:25:22,712 [17352] DEBUG WriteOnlyServer-62034509 - insert into Maker (ID, Name) values ('c2d92aee-22b8-4080-9e9c-de06157ed60c', 'some maker');
2016-02-29 23:25:22,712 [16776] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Measure)
2016-02-29 23:25:22,713 [16776] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:InventoryFormat)
2016-02-29 23:25:22,714 [17352] DEBUG WriteOnlyServer-62034509 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Maker, SIZE: 189)
2016-02-29 23:25:22,714 [7572] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Maker)
2016-02-29 23:25:22,714 [7572] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: c2d92aee-22b8-4080-9e9c-de06157ed60c)
2016-02-29 23:25:22,714 [17352] DEBUG WriteOnlyServer-62034509 - insert into Measure (ID, Name) values ('d5e8a7e1-0120-4c75-997c-7b8d4bc8703b', 'some measure');
2016-02-29 23:25:22,720 [17352] DEBUG WriteOnlyServer-62034509 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Measure, SIZE: 193)
2016-02-29 23:25:22,720 [7572] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: Measure)
2016-02-29 23:25:22,720 [17352] DEBUG WriteOnlyServer-62034509 - insert into InventoryFormat (ID, Specification, Quantity, Memo, ProductID, MakerID, MeasureID) values ('0686ef59-0f7b-44a2-a709-8e49ff9505fb', 'some specification', '0', 'spec', '435fb630-57d2-4552-8834-556267f6f292', 'c2d92aee-22b8-4080-9e9c-de06157ed60c', 'd5e8a7e1-0120-4c75-997c-7b8d4bc8703b');
2016-02-29 23:25:22,720 [7572] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: d5e8a7e1-0120-4c75-997c-7b8d4bc8703b)
2016-02-29 23:25:22,723 [17352] DEBUG WriteOnlyServer-62034509 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.InventoryFormat, SIZE: 394)
2016-02-29 23:25:22,723 [7572] DEBUG R54IN0.WPF.MySqlBridge - 갱신서버로부터 데이터를 수신받았습니다.(CMD: INST, TYPE: InventoryFormat)
2016-02-29 23:25:22,723 [7572] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 0686ef59-0f7b-44a2-a709-8e49ff9505fb)
2016-02-29 23:25:22,827 [16776] DEBUG ReadOnlyServer-25557002 - Listener (0.0.0.0:4000) was stoppped
2016-02-29 23:25:22,827 [16776] DEBUG WriteOnlyServer-62034509 - Listener (0.0.0.0:4001) was stoppped
2016-02-29 23:25:35,413 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - The command PING(R54IN0.Server.PingCommand) has been discovered
2016-02-29 23:25:35,422 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - The command QUEF(R54IN0.Server.QueryInstanceCommand) has been discovered
2016-02-29 23:25:35,423 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - The command QUEV(R54IN0.Server.QueryValueCommand) has been discovered
2016-02-29 23:25:35,423 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - The command SELA(R54IN0.Server.SelectAllCommand) has been discovered
2016-02-29 23:25:35,423 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - The command SELO(R54IN0.Server.SelectCommand) has been discovered
2016-02-29 23:25:35,480 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - The command DELT(R54IN0.Server.DeleteCommand) has been discovered
2016-02-29 23:25:35,480 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - The command INST(R54IN0.Server.InsertCommand) has been discovered
2016-02-29 23:25:35,480 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - The command UPDT(R54IN0.Server.UpdateCommand) has been discovered
2016-02-29 23:25:35,503 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - Listener (127.0.0.1:4000) was started
2016-02-29 23:25:35,504 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - Listener (127.0.0.1:4001) was started
2016-02-29 23:25:35,534 [15384] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:35,538 [11552] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:35,566 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:25:35,567 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:25:35,570 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - Listener (127.0.0.1:4000) was started
2016-02-29 23:25:35,570 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - Listener (127.0.0.1:4001) was started
2016-02-29 23:25:35,572 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:25:35,572 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:25:35,574 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - Listener (127.0.0.1:4000) was started
2016-02-29 23:25:35,574 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - Listener (127.0.0.1:4001) was started
2016-02-29 23:25:35,578 [14988] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:35,579 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:35,644 [14124] DEBUG ReadOnlyServer-988369 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 876)
2016-02-29 23:25:35,661 [11552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:25:35,666 [11552] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Product)
2016-02-29 23:25:35,672 [14928] DEBUG WriteOnlyServer-23948080 - delete from Product where ID = '52b57cf3-07e3-4448-b9fc-01a9e8f97bee';
2016-02-29 23:25:35,675 [14928] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 23:25:35,675 [14928] DEBUG R54IN0.Server.DeleteCommand - KillInventoryFormat
2016-02-29 23:25:35,675 [14928] DEBUG R54IN0.Server.DeleteCommand - delete from IOStockFormat where InventoryID in (select ID from InventoryFormat where ProductID = '52b57cf3-07e3-4448-b9fc-01a9e8f97bee');
2016-02-29 23:25:35,683 [14928] DEBUG R54IN0.Server.DeleteCommand - delete from InventoryFormat where ProductID = '52b57cf3-07e3-4448-b9fc-01a9e8f97bee';
2016-02-29 23:25:35,683 [17352] DEBUG ReadOnlyServer-988369 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Product, BYTE SIZE: 128)
2016-02-29 23:25:35,684 [11552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Product)
2016-02-29 23:25:35,685 [14928] DEBUG WriteOnlyServer-23948080 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Product, SIZE: 164)
2016-02-29 23:25:35,689 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:25:35,690 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:25:35,693 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - Listener (127.0.0.1:4000) was started
2016-02-29 23:25:35,693 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - Listener (127.0.0.1:4001) was started
2016-02-29 23:25:35,700 [11552] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:35,701 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:35,713 [17352] DEBUG ReadOnlyServer-988369 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Employee, BYTE SIZE: 676)
2016-02-29 23:25:35,717 [11552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Employee)
2016-02-29 23:25:35,718 [11552] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Employee)
2016-02-29 23:25:35,718 [11700] DEBUG WriteOnlyServer-23948080 - delete from Employee where ID = '53154c25-8254-4eea-a625-dd3dc1f95ab8';
2016-02-29 23:25:35,721 [11700] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 23:25:35,722 [11700] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 23:25:35,722 [11700] DEBUG R54IN0.Server.DeleteCommand - update IOStockFormat set EmployeeID = '' where EmployeeID = '53154c25-8254-4eea-a625-dd3dc1f95ab8';
2016-02-29 23:25:35,725 [11700] DEBUG WriteOnlyServer-23948080 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Employee, SIZE: 165)
2016-02-29 23:25:35,729 [4348] DEBUG ReadOnlyServer-988369 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Employee, BYTE SIZE: 129)
2016-02-29 23:25:35,730 [11552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Employee)
2016-02-29 23:25:35,733 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:25:35,733 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:25:35,735 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - Listener (127.0.0.1:4000) was started
2016-02-29 23:25:35,735 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - Listener (127.0.0.1:4001) was started
2016-02-29 23:25:35,739 [11552] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:35,739 [11552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:35,752 [14124] DEBUG ReadOnlyServer-988369 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Maker, BYTE SIZE: 1153)
2016-02-29 23:25:35,752 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Maker)
2016-02-29 23:25:35,753 [14988] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: DELT, TYPE:Maker)
2016-02-29 23:25:35,753 [6400] DEBUG WriteOnlyServer-23948080 - delete from Maker where ID = '5c567a05-5187-4cd4-898e-80926eb36a50';
2016-02-29 23:25:35,762 [6400] DEBUG R54IN0.Server.DeleteCommand - SerialKiller
2016-02-29 23:25:35,762 [6400] DEBUG R54IN0.Server.DeleteCommand - KillFieldFormat
2016-02-29 23:25:35,762 [6400] DEBUG R54IN0.Server.DeleteCommand - update InventoryFormat set MakerID = '' where MakerID = '5c567a05-5187-4cd4-898e-80926eb36a50';
2016-02-29 23:25:35,762 [6400] DEBUG WriteOnlyServer-23948080 - 삭제된 포맷을 클라이언트들에게 알립니다.(TYPE: Maker, SIZE: 162)
2016-02-29 23:25:35,766 [16088] DEBUG ReadOnlyServer-988369 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Maker, BYTE SIZE: 126)
2016-02-29 23:25:35,767 [7572] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Maker)
2016-02-29 23:25:35,773 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:25:35,774 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:25:35,800 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - Listener (127.0.0.1:4000) was started
2016-02-29 23:25:35,801 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - Listener (127.0.0.1:4001) was started
2016-02-29 23:25:35,804 [7572] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:35,804 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:35,816 [14928] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: INST, TYPE:Product)
2016-02-29 23:25:35,818 [17352] DEBUG WriteOnlyServer-23948080 - insert into Product (ID, Name) values ('ddefe091-1794-4a5e-ac8f-05e8ff192991', 'new');
2016-02-29 23:25:35,820 [17352] DEBUG WriteOnlyServer-23948080 - 추가된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 184)
2016-02-29 23:25:35,828 [11700] DEBUG ReadOnlyServer-988369 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Product, BYTE SIZE: 186)
2016-02-29 23:25:35,831 [7572] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Product)
2016-02-29 23:25:35,847 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:25:35,847 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:25:35,856 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - Listener (127.0.0.1:4000) was started
2016-02-29 23:25:35,866 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - Listener (127.0.0.1:4001) was started
2016-02-29 23:25:35,899 [7572] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:35,899 [7572] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:35,923 [14124] DEBUG ReadOnlyServer-988369 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 869)
2016-02-29 23:25:35,927 [11552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:25:35,936 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:25:35,936 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:25:35,940 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - Listener (127.0.0.1:4000) was started
2016-02-29 23:25:35,941 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - Listener (127.0.0.1:4001) was started
2016-02-29 23:25:35,947 [11552] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:35,947 [11552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:35,969 [14124] DEBUG ReadOnlyServer-988369 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 869)
2016-02-29 23:25:35,972 [14988] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:25:35,973 [11700] DEBUG ReadOnlyServer-988369 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Product, BYTE SIZE: 206)
2016-02-29 23:25:35,974 [11552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Product)
2016-02-29 23:25:35,979 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:25:35,979 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:25:35,982 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - Listener (127.0.0.1:4000) was started
2016-02-29 23:25:35,982 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - Listener (127.0.0.1:4001) was started
2016-02-29 23:25:36,005 [11552] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:36,005 [11552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:36,023 [6400] DEBUG ReadOnlyServer-988369 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: InventoryFormat, BYTE SIZE: 3871)
2016-02-29 23:25:36,025 [7572] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:InventoryFormat)
2016-02-29 23:25:36,028 [17352] DEBUG ReadOnlyServer-988369 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: InventoryFormat, BYTE SIZE: 386)
2016-02-29 23:25:36,029 [11552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:InventoryFormat)
2016-02-29 23:25:36,033 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:25:36,034 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:25:36,041 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - Listener (127.0.0.1:4000) was started
2016-02-29 23:25:36,042 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - Listener (127.0.0.1:4001) was started
2016-02-29 23:25:36,051 [11552] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:36,051 [7572] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버와의 연결에 성공하였습니다.
2016-02-29 23:25:36,063 [14928] DEBUG ReadOnlyServer-988369 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELA, TYPE: Product, BYTE SIZE: 869)
2016-02-29 23:25:36,068 [11552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELA, TYPE:Product)
2016-02-29 23:25:36,068 [11552] DEBUG R54IN0.WPF.MySqlBridge - 갱신 서버로 데이터를 전송합니다.(CMD: UPDT, TYPE:Product)
2016-02-29 23:25:36,072 [11700] DEBUG WriteOnlyServer-23948080 - update Product set Name = 'some' where ID = '5e906185-4cf8-4cda-ad04-24c8c33dfba4';
2016-02-29 23:25:36,083 [11700] DEBUG WriteOnlyServer-23948080 - 변경된 포맷을 클라이언트들에게 알립니다.(TYPE: R54IN0.Product, SIZE: 185)
2016-02-29 23:25:36,088 [10932] DEBUG ReadOnlyServer-988369 - 검색 결과를 클라이언트에게 전송합니다.(CMD: SELO, TYPE: Product, BYTE SIZE: 187)
2016-02-29 23:25:36,089 [11552] DEBUG R54IN0.WPF.MySqlBridge - 쿼리 서버로 데이터를 전송합니다.(CMD: SELO, TYPE:Product)
2016-02-29 23:25:36,101 [TestRunnerThread] DEBUG ReadOnlyServer-988369 - Listener (127.0.0.1:4000) was stoppped
2016-02-29 23:25:36,101 [TestRunnerThread] DEBUG WriteOnlyServer-23948080 - Listener (127.0.0.1:4001) was stoppped
2016-02-29 23:25:37,590 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: 0b298118-3a36-4a66-8c1b-aa6e0d662baa)
2016-02-29 23:25:37,612 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 6d47eb86-85ba-4718-8495-22f58367dcfe)
2016-02-29 23:25:37,618 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 89bee30b-d083-4e1a-84a4-96714df9596a)
2016-02-29 23:25:37,621 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: fb5e1c08-e4bd-439d-90d8-4343ffad9558)
2016-02-29 23:25:39,062 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: Maker, ID: 7aa05451-6aba-4cdf-95db-8d01f3295d9e)
2016-02-29 23:25:39,065 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: Measure, ID: 0520cdd6-9124-4dd0-b5e5-09959967e7df)
2016-02-29 23:25:39,068 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 820376ca-2abf-4cc9-b280-894df16b56c8)
2016-02-29 23:25:39,068 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Specification Convert KCB-103D to some specification
2016-02-29 23:25:39,070 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Memo Convert  to memo
2016-02-29 23:25:39,078 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: afc9a559-17b1-482b-91f8-bb341948731a)
2016-02-29 23:25:39,078 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Specification Convert KCB-101D to some specification
2016-02-29 23:25:39,078 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Memo Convert  to memo
2016-02-29 23:25:39,078 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: MakerID Convert 251667c7-823e-48d2-a9b9-c9345843e983 to d2903a51-5a13-439e-bc03-7b3d798797c7
2016-02-29 23:25:39,078 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: MeasureID Convert 67a54352-b05f-4177-a5ff-b6420517066d to 089e6a30-ecf2-4470-abb1-56222456553d
2016-02-29 23:25:39,085 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: f07650e3-98cc-443a-a2dd-24c04f85f016)
2016-02-29 23:25:39,087 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: 5536767c-95a0-428f-a233-62dda2cc6804)
2016-02-29 23:25:39,089 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 561068ed-b294-4f5f-aa0e-cb6f294e2714)
2016-02-29 23:25:39,106 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 07a28aa5-f5ce-48de-8725-92ca05c334b1)
2016-02-29 23:25:39,287 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: c8847d8b-a988-4af0-9509-e4e7220c2f51)
2016-02-29 23:25:39,297 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 6bad0d79-848c-4f61-995e-5482bc6df138)
2016-02-29 23:25:42,068 [15392] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:25:42,296 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 3ed13ea3-5b74-491f-bdae-2d254d10972c)
2016-02-29 23:25:42,296 [15392] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:25:42,301 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 25c726c0-1d36-45d3-a710-d1ca07973fa7)
2016-02-29 23:25:42,310 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 2ba5f4be-153b-4217-b8bb-36ff8335a29c)
2016-02-29 23:25:42,311 [15392] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 5 to 15
2016-02-29 23:25:42,317 [15392] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:25:42,320 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 5751e7ab-bbb1-4b0c-909b-4af46a542104)
2016-02-29 23:25:42,324 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 07cd6f0a-5837-4e22-ae5a-a3807e1ecace)
2016-02-29 23:25:42,324 [15392] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 0 to 1
2016-02-29 23:25:42,329 [15392] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:25:42,333 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Supplier, ID: 4c13918a-be55-4cae-9b9b-885034bb323e)
2016-02-29 23:25:42,335 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Warehouse, ID: a948e4ac-7d02-48cd-8a43-ff3864b0c0c2)
2016-02-29 23:25:42,337 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: aecb497e-2a64-4138-aab9-b44c97eae39e)
2016-02-29 23:25:42,340 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 3ffb0e71-39c4-4f13-8376-0cd79aab7fc3)
2016-02-29 23:25:42,344 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 093589c3-953c-4821-950e-dbb7f9bf4bbd)
2016-02-29 23:25:42,344 [15392] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 15 to 16
2016-02-29 23:25:42,349 [15392] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:25:42,353 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 4fa18a74-9cf3-44c9-8b1b-bb63c200de61)
2016-02-29 23:25:42,358 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 696f1123-291e-4a62-a243-58ad875cc65d)
2016-02-29 23:25:42,358 [15392] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -3 to -4
2016-02-29 23:25:42,366 [15392] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:25:42,370 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Customer, ID: ff5b34d9-6106-4d0d-a8cb-7ca9361e40e4)
2016-02-29 23:25:42,372 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Project, ID: 665944e2-1c74-4859-b1c6-1ea9fc7ec3ce)
2016-02-29 23:25:42,374 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Employee, ID: 71c65d31-c32d-4efb-a2ae-c274dfb8fd3c)
2016-02-29 23:25:42,376 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 7ef786bb-1ccf-4dc9-9c10-bcf6a97741de)
2016-02-29 23:25:42,380 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 07cd6f0a-5837-4e22-ae5a-a3807e1ecace)
2016-02-29 23:25:42,380 [15392] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 1 to 0
2016-02-29 23:25:42,390 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 3ffb0e71-39c4-4f13-8376-0cd79aab7fc3)
2016-02-29 23:25:42,394 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 093589c3-953c-4821-950e-dbb7f9bf4bbd)
2016-02-29 23:25:42,394 [15392] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 16 to 25
2016-02-29 23:25:42,409 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 130e11b0-a7c0-4882-964b-0a47c184909f)
2016-02-29 23:25:42,417 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 02a6ceb8-7448-4b70-9abc-3eba5a3ab647)
2016-02-29 23:25:42,426 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: Customer, ID: 747e1680-d7b6-46ba-b9fc-1c1bd4c5debc)
2016-02-29 23:25:42,429 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: Project, ID: 77ba00ff-2532-40b2-aadd-182ae075e711)
2016-02-29 23:25:42,431 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: Employee, ID: 8d949f89-f3fe-44c6-bb6b-4ab74ffd31fd)
2016-02-29 23:25:42,468 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: InventoryFormat, ID: 29e9dd1d-26b4-4b73-9dc5-3a14ffe4f84d)
2016-02-29 23:25:42,468 [15392] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:25:42,471 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 3a8d973e-e0af-4900-a499-8de24ffbbc05)
2016-02-29 23:25:42,475 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 29e9dd1d-26b4-4b73-9dc5-3a14ffe4f84d)
2016-02-29 23:25:42,475 [15392] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 0 to 1
2016-02-29 23:25:42,475 [15392] DEBUG R54IN0.WPF.DataDirector - update Property: Memo Convert  to 
2016-02-29 23:25:42,475 [15392] DEBUG R54IN0.WPF.DataDirector - update Property: MakerID Convert  to 
2016-02-29 23:25:42,475 [15392] DEBUG R54IN0.WPF.DataDirector - update Property: MeasureID Convert  to 
2016-02-29 23:25:42,475 [15392] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:25:42,476 [15392] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:25:42,480 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 656a4d9c-0964-49b1-ae56-888f00aae586)
2016-02-29 23:25:42,484 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 29e9dd1d-26b4-4b73-9dc5-3a14ffe4f84d)
2016-02-29 23:25:42,484 [15392] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 1 to 0
2016-02-29 23:25:42,484 [15392] DEBUG R54IN0.WPF.DataDirector - update Property: MakerID Convert  to 
2016-02-29 23:25:42,484 [15392] DEBUG R54IN0.WPF.DataDirector - update Property: MeasureID Convert  to 
2016-02-29 23:25:42,484 [15392] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:25:42,486 [15392] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:25:42,491 [15392] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:25:42,496 [15392] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:25:42,505 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 9f8c8685-128a-47fc-aaf9-4e54a538a078)
2016-02-29 23:25:42,509 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: e2594670-81d9-4cdc-992f-a30a7f5ae549)
2016-02-29 23:25:42,509 [15392] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 10 to 11
2016-02-29 23:25:42,509 [15392] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:25:42,514 [15392] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:25:42,516 [15392] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:25:42,519 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: 8cd64052-6985-44fa-bcea-964758ee0e15)
2016-02-29 23:25:42,522 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1d6d7f3e-7b77-41c5-bf3c-f78b68a036d9)
2016-02-29 23:25:42,522 [15392] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -5 to -6
2016-02-29 23:25:42,522 [15392] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:25:42,526 [15392] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:25:43,340 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 35204a0d-30a1-4e37-9263-69d4c66d5ace)
2016-02-29 23:25:43,340 [15392] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 6 to 10
2016-02-29 23:25:43,344 [15392] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: b0be1eee-16c5-4cfd-91d5-a04815282c19)
2016-02-29 23:25:43,345 [15392] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -8 to -12
2016-02-29 23:25:45,191 [9288] DEBUG R54IN0.WPF.IOStockManagerViewModel - join SetUnitPriceAndAccountAsync
2016-02-29 23:25:45,193 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: IOStockFormat, ID: ea79538f-9cb4-492d-9a16-6dadb84699a3)
2016-02-29 23:25:45,196 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: d53d07f6-5852-4bf9-b5a8-790dd78b6523)
2016-02-29 23:25:45,197 [9288] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -2 to -1
2016-02-29 23:25:45,234 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: b1361d3f-b394-4bff-a784-92d0d87ed65e)
2016-02-29 23:25:45,234 [9288] DEBUG R54IN0.WPF.DataDirector - update Property: Date Convert 10/01/2015 23:25:46 to 02/29/2016 23:25:45
2016-02-29 23:25:45,253 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: f969b357-5a0b-4f15-af55-044d7209420d)
2016-02-29 23:25:45,253 [9288] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 1 to 100
2016-02-29 23:25:45,255 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: cfd548d0-1700-4523-956f-54eaee068b35)
2016-02-29 23:25:45,255 [9288] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 4 to -95
2016-02-29 23:25:45,271 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: a6b4e3e8-3576-4c03-85d0-87746e71455a)
2016-02-29 23:25:45,271 [9288] DEBUG R54IN0.WPF.DataDirector - update Property: StockType Convert INCOMING to OUTGOING
2016-02-29 23:25:45,272 [9288] DEBUG R54IN0.WPF.DataDirector - update Property: SupplierID Convert 92e2f876-5dec-4a92-821d-1a7f626dec61 to 
2016-02-29 23:25:45,272 [9288] DEBUG R54IN0.WPF.DataDirector - update Property: WarehouseID Convert df7855b8-87b6-4e5d-8b8a-565c82d1a641 to 
2016-02-29 23:25:45,274 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 91ca270c-54b7-404c-8112-a18de25b6324)
2016-02-29 23:25:45,275 [9288] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 2 to -4
2016-02-29 23:25:45,324 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 2526bd0f-4fb2-4150-b1c1-c715244af6f2)
2016-02-29 23:25:45,326 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 2a2d9155-a35b-4165-818e-ba513f3dd1cf)
2016-02-29 23:25:45,326 [9288] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -8 to -1
2016-02-29 23:25:45,339 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: f05bf66c-2e66-460c-be72-cf2901654c6d)
2016-02-29 23:25:45,340 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 91ca270c-54b7-404c-8112-a18de25b6324)
2016-02-29 23:25:45,340 [9288] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 2 to 8
2016-02-29 23:25:45,354 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 58bad418-c8d0-4d18-bdac-12fd6e87ac6a)
2016-02-29 23:25:45,356 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 3dd13cd2-4c92-4397-a79a-d0b13ec26032)
2016-02-29 23:25:45,356 [9288] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 13 to 5
2016-02-29 23:25:45,368 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 366f9d05-8c4b-4f18-8f5f-8892e0a2911b)
2016-02-29 23:25:45,370 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 4d230189-e4cd-4a6d-8d0a-aac5a260b7d9)
2016-02-29 23:25:45,370 [9288] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -8 to 0
2016-02-29 23:25:45,399 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 3dd13cd2-4c92-4397-a79a-d0b13ec26032)
2016-02-29 23:25:45,399 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: f3990eab-0dbd-45aa-9078-1a2a9d048c6d)
2016-02-29 23:25:45,400 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: a0908403-8017-42e0-a9d5-e05ac9d75417)
2016-02-29 23:25:45,401 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 8810b415-e0bf-443f-8e6c-d5e60ce9bdac)
2016-02-29 23:25:45,402 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: ff755c18-cf96-4045-acf3-70ea114d4a1a)
2016-02-29 23:25:45,402 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: cec17aea-1d80-4653-a329-fe17bc95a917)
2016-02-29 23:25:45,403 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 58bad418-c8d0-4d18-bdac-12fd6e87ac6a)
2016-02-29 23:25:45,404 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: dc9ad79c-b328-42de-a095-7c3c98609e76)
2016-02-29 23:25:45,405 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 95c6c2ae-1f14-4bbe-924e-fd80b48def2f)
2016-02-29 23:25:45,405 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 16381f48-9810-49fb-bfe3-2c4b16e43983)
2016-02-29 23:25:45,406 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 0b179ff0-47bc-49df-9de5-b1d90098e725)
2016-02-29 23:25:45,418 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 28b169a6-7f60-4711-a8d5-f24ff82b4ce8)
2016-02-29 23:25:45,420 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: e229dec3-e00e-4768-b8c7-b03b727869d2)
2016-02-29 23:25:45,420 [9288] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 2 to 1
2016-02-29 23:25:45,437 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 0a0ba684-029e-4c9f-a40c-ce10ee514847)
2016-02-29 23:25:45,438 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 91ca270c-54b7-404c-8112-a18de25b6324)
2016-02-29 23:25:45,439 [9288] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 2 to 4
2016-02-29 23:25:45,451 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: d09741e9-d117-4eb4-ad13-752b789dc136)
2016-02-29 23:25:45,452 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 046bb84c-cbce-462d-8c3d-baed58ca9231)
2016-02-29 23:25:45,452 [9288] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 8 to 17
2016-02-29 23:25:45,464 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Project, id: 7a51991e-b104-4c33-aa1e-568f07a93bff)
2016-02-29 23:25:45,465 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: d31d2e62-f89e-4118-81fd-b8bd70ec8869)
2016-02-29 23:25:45,466 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 1058b439-58b8-49db-afe1-6a903dcdbea4)
2016-02-29 23:25:45,467 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 2526bd0f-4fb2-4150-b1c1-c715244af6f2)
2016-02-29 23:25:45,468 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: f57fdd58-3bba-4178-89ae-fa613b2ddd20)
2016-02-29 23:25:45,468 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 2c6dd89e-4a30-4c0a-a285-364e2a6ff85e)
2016-02-29 23:25:45,469 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 57663f35-4565-4393-b784-e7640173418d)
2016-02-29 23:25:45,469 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 73df893e-7536-4b1e-b5f5-8278861db57c)
2016-02-29 23:25:45,470 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 902f9712-b8f0-40f1-a71a-38a69d35a962)
2016-02-29 23:25:45,471 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: e3e00beb-2605-4828-8f4d-e2f80dcb95a9)
2016-02-29 23:25:45,471 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: ad8fd95b-5db2-4f9f-a1ee-fe3e538ad140)
2016-02-29 23:25:45,472 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 2bb84b0b-851d-4baf-a6e9-a4bcc70a14a6)
2016-02-29 23:25:45,472 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 3aa5c8ab-462c-43d6-a66b-492c1a532152)
2016-02-29 23:25:45,473 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 52214bac-94d5-49bd-923d-c73a4a9863cf)
2016-02-29 23:25:45,473 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: b027d76d-28cf-4c93-8255-a296a2fa8453)
2016-02-29 23:25:45,473 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: fb49eccb-214d-4c4f-81c8-d3bb34bb7578)
2016-02-29 23:25:45,474 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 320f1fc2-bf41-4533-8284-a40f8dfeb1bb)
2016-02-29 23:25:45,475 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 66a58ee8-20b6-4207-9d8d-dd72c24c9817)
2016-02-29 23:25:45,476 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 7bbc1f51-5fc9-4f11-bd1a-569f57ee7381)
2016-02-29 23:25:45,476 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 402ae9bc-c792-43f4-85c5-822ea1abb616)
2016-02-29 23:25:45,477 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: b3eb1752-3dbe-4055-a27a-d31171f366d1)
2016-02-29 23:25:45,477 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 22aa7e56-9a46-4e23-b006-63b97fc50117)
2016-02-29 23:25:45,478 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 4b0083ac-eaab-4217-aeac-c6a657f66174)
2016-02-29 23:25:45,479 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 55196351-1ef5-4929-8eb1-629bc1b8902e)
2016-02-29 23:25:45,479 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 645742e2-e7eb-4ac5-b9dd-11ca798a18c8)
2016-02-29 23:25:45,480 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 8851980e-1b6a-4763-b2ff-30b138a7be60)
2016-02-29 23:25:45,481 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 8d82bd1e-278d-47aa-b5ce-de6b7f49cf3b)
2016-02-29 23:25:45,481 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: cec17aea-1d80-4653-a329-fe17bc95a917)
2016-02-29 23:25:45,482 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 07bf141c-1993-4824-be3e-9da7b9db26f6)
2016-02-29 23:25:45,483 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 427b3b45-aba0-4309-bb6c-34a45c1dc054)
2016-02-29 23:25:45,484 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: 4a5a9cd6-515d-4ee7-9df5-d8c764cd1cbe)
2016-02-29 23:25:45,485 [9288] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: IOStockFormat, ID: b295f001-eb20-4b1a-8392-7bee922b84cf)
2016-02-29 23:25:47,287 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 3cdc38ca-774b-40de-9cc7-ba6aae55ad69)
2016-02-29 23:25:47,304 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 05093a2b-6487-46da-be1c-33bea91fd259)
2016-02-29 23:25:47,314 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 05093a2b-6487-46da-be1c-33bea91fd259)
2016-02-29 23:25:47,323 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 62999583-4f06-4c08-9c76-b25294f0d1cc)
2016-02-29 23:25:47,348 [16124] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: d8c33853-f794-482e-9899-97f46485c76f)
2016-02-29 23:25:47,368 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: Product, ID: 39789a2c-9ce4-4a0b-957b-19b457af30f2)
2016-02-29 23:25:47,392 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Maker, ID: b0e9e696-7bdd-4bea-afa3-d53b38a8b01a)
2016-02-29 23:25:47,405 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataInserted(TYPE: Measure, ID: a628b5b7-ccb6-4efd-b2e3-38ecb136f73f)
2016-02-29 23:25:47,416 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Maker, id: 6455f3d5-906a-4bc6-906b-a05ebb2bfe69)
2016-02-29 23:25:47,417 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 4c8255b2-43cf-4cb3-80f0-9cf4ef5eb448)
2016-02-29 23:25:47,417 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ffcc8219-82ae-4795-b221-a67422f9dbf7)
2016-02-29 23:25:47,426 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Measure, id: c759d374-cfef-4342-a4f2-9a915963a889)
2016-02-29 23:25:47,427 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 05093a2b-6487-46da-be1c-33bea91fd259)
2016-02-29 23:25:47,427 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1ac56b69-ca06-447f-be55-cd69cfbc3153)
2016-02-29 23:25:47,428 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 3cdc38ca-774b-40de-9cc7-ba6aae55ad69)
2016-02-29 23:25:47,429 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 4657f13e-cd3e-46f8-9ea2-5e20b8b3053a)
2016-02-29 23:25:47,429 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 4c8255b2-43cf-4cb3-80f0-9cf4ef5eb448)
2016-02-29 23:25:47,430 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 8d52064e-d9c4-494d-b446-153d84f6f692)
2016-02-29 23:25:47,431 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 91468ecc-3217-4978-918c-10c7168305fc)
2016-02-29 23:25:47,432 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 91e5068a-4399-4cab-9b75-628d88d5954d)
2016-02-29 23:25:47,432 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 9ac1df8d-c596-447d-b5e4-02513c8780fd)
2016-02-29 23:25:47,433 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: d8c33853-f794-482e-9899-97f46485c76f)
2016-02-29 23:25:47,434 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ffcc8219-82ae-4795-b221-a67422f9dbf7)
2016-02-29 23:25:50,271 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 04e20da5-286e-4086-9f90-f7fa85b89911)
2016-02-29 23:25:50,275 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: fa3d5973-8b1d-4ef9-888c-60aef156941c)
2016-02-29 23:25:50,275 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 7 to 9
2016-02-29 23:25:50,278 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 05859d05-af93-45cf-b778-b83222087fb6)
2016-02-29 23:25:50,281 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: e735f801-068e-45ef-9008-f60006e08d36)
2016-02-29 23:25:50,281 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -7 to 2
2016-02-29 23:25:50,284 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 05bcfd7a-38e2-46ed-94cc-3ddca0ae01d4)
2016-02-29 23:25:50,287 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 53ffd74e-b189-4dd8-8916-f6836d7350f3)
2016-02-29 23:25:50,287 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 4 to 5
2016-02-29 23:25:50,290 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 11aacb72-df40-464e-9b44-4ebdc0ac64b4)
2016-02-29 23:25:50,294 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: c8216a09-c957-4c4a-9124-431425d3b343)
2016-02-29 23:25:50,294 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 11 to 12
2016-02-29 23:25:50,297 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 16ab72af-2d0c-40dd-b73f-cb38cffcaac8)
2016-02-29 23:25:50,300 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 354dd072-1bea-495e-ac63-8d96501352c3)
2016-02-29 23:25:50,300 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -8 to -2
2016-02-29 23:25:50,303 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 277586a4-8116-47de-9714-69ed8c701a49)
2016-02-29 23:25:50,306 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: cf063ea6-facb-4576-9efc-140b1df18dc4)
2016-02-29 23:25:50,306 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -12 to -8
2016-02-29 23:25:50,309 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 310f3bb4-1732-4d97-84b6-78e59e1aabac)
2016-02-29 23:25:50,312 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: b1b0ef14-580d-4dd2-9316-0aafd0308ce7)
2016-02-29 23:25:50,312 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 6 to 9
2016-02-29 23:25:50,315 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 38c26541-040a-4858-983f-6532c72b3028)
2016-02-29 23:25:50,318 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 7c131972-f3fa-4017-b2fc-90bb5d8dc33e)
2016-02-29 23:25:50,318 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 2 to 10
2016-02-29 23:25:50,321 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 3e997d0b-129a-4eb5-84e9-b5b08ebafb1a)
2016-02-29 23:25:50,324 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: d04e4ec0-47be-477f-8611-948049045443)
2016-02-29 23:25:50,325 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -6 to 3
2016-02-29 23:25:50,327 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 44f9b60f-3b34-4788-92d5-a20c18ae127a)
2016-02-29 23:25:50,330 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 53ffd74e-b189-4dd8-8916-f6836d7350f3)
2016-02-29 23:25:50,330 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 5 to 10
2016-02-29 23:25:50,333 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 462f1b5c-f6c8-4a8d-84bb-ea12a5c57986)
2016-02-29 23:25:50,336 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: e735f801-068e-45ef-9008-f60006e08d36)
2016-02-29 23:25:50,336 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 2 to 9
2016-02-29 23:25:50,339 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 548a7feb-a8ff-4d6d-aa62-9ae0e57ad6ed)
2016-02-29 23:25:50,342 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 22373201-991d-4f9a-b50b-8445ac92a81c)
2016-02-29 23:25:50,342 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 0 to 4
2016-02-29 23:25:50,344 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 56d09a52-9c68-49a5-b7bf-d691082109fb)
2016-02-29 23:25:50,347 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 402dee86-aca2-4487-ba5b-8d125fb76dbd)
2016-02-29 23:25:50,347 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -4 to -1
2016-02-29 23:25:50,349 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 5d8611f1-af71-494d-88b1-8bc7f5b977b0)
2016-02-29 23:25:50,352 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: c8216a09-c957-4c4a-9124-431425d3b343)
2016-02-29 23:25:50,352 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 12 to 18
2016-02-29 23:25:50,355 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 7f69aace-bdba-4b5b-9a1d-301d32dcfced)
2016-02-29 23:25:50,358 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: d04e4ec0-47be-477f-8611-948049045443)
2016-02-29 23:25:50,358 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 3 to 9
2016-02-29 23:25:50,361 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 82b84c73-52d4-407a-bb4b-d3bdb568ac56)
2016-02-29 23:25:50,363 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: c8216a09-c957-4c4a-9124-431425d3b343)
2016-02-29 23:25:50,363 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 18 to 19
2016-02-29 23:25:50,366 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 8f5abf26-0885-4ba2-ab4b-d6df6594c741)
2016-02-29 23:25:50,370 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 22373201-991d-4f9a-b50b-8445ac92a81c)
2016-02-29 23:25:50,370 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 4 to 5
2016-02-29 23:25:50,373 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 906222dd-537a-4935-bd09-ab4de4a803ce)
2016-02-29 23:25:50,376 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 22373201-991d-4f9a-b50b-8445ac92a81c)
2016-02-29 23:25:50,376 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 5 to 7
2016-02-29 23:25:50,378 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 9162f719-0b91-44b7-ae5b-865b4fd2b0c9)
2016-02-29 23:25:50,380 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 8bb47c78-0bd6-4725-8135-bcfb219239c9)
2016-02-29 23:25:50,380 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 11 to 14
2016-02-29 23:25:50,383 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 95804c21-d3cd-4415-b774-2c37ec5f3954)
2016-02-29 23:25:50,385 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: cf063ea6-facb-4576-9efc-140b1df18dc4)
2016-02-29 23:25:50,385 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -8 to -3
2016-02-29 23:25:50,388 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: a4a965dd-17d0-4a00-bca2-3dd7bf92dc9a)
2016-02-29 23:25:50,391 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: fa3d5973-8b1d-4ef9-888c-60aef156941c)
2016-02-29 23:25:50,391 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 9 to 12
2016-02-29 23:25:50,393 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: a63a223d-ca20-4358-b5c5-51c9e3701f39)
2016-02-29 23:25:50,399 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: c8216a09-c957-4c4a-9124-431425d3b343)
2016-02-29 23:25:50,400 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 19 to 20
2016-02-29 23:25:50,402 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: af240a78-5fd6-41fe-b6b0-9675dc3f0a64)
2016-02-29 23:25:50,405 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 0eb945f2-7f00-45b3-96d7-85ea9e4a6dcc)
2016-02-29 23:25:50,405 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 7 to 8
2016-02-29 23:25:50,407 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: b802e84b-05cf-4ea4-892c-c8c75df91ab3)
2016-02-29 23:25:50,410 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: bdc04569-3d89-4873-b585-e9ae89dbe44f)
2016-02-29 23:25:50,410 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -6 to 2
2016-02-29 23:25:50,413 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: bc64b2e3-9203-4a57-b934-14e1d8f24db4)
2016-02-29 23:25:50,416 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ed6d2848-286c-41ba-95a7-f8881ac766e4)
2016-02-29 23:25:50,416 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -2 to 6
2016-02-29 23:25:50,418 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: c73a0d2a-68e2-4697-8dce-4cda1e132ada)
2016-02-29 23:25:50,421 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 9075659a-0a05-4312-afab-67ef4758e830)
2016-02-29 23:25:50,421 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 17 to 18
2016-02-29 23:25:50,423 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: cdf4e258-a496-4631-b381-9b45a7eb34c6)
2016-02-29 23:25:50,427 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 0eb945f2-7f00-45b3-96d7-85ea9e4a6dcc)
2016-02-29 23:25:50,427 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 8 to 10
2016-02-29 23:25:50,429 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: d30e8815-ae7d-494f-96ad-0042fbd31309)
2016-02-29 23:25:50,433 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 1060529a-0535-4007-950f-964a94da64a1)
2016-02-29 23:25:50,433 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -17 to -13
2016-02-29 23:25:50,435 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: d343ebd5-f211-48cd-9d4b-af4e95b89c9a)
2016-02-29 23:25:50,438 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 925101e0-e97f-4bff-b930-3386dabcba42)
2016-02-29 23:25:50,438 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 1 to 4
2016-02-29 23:25:50,440 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: d8c6748a-cfc5-4194-b815-4f43f907e6a3)
2016-02-29 23:25:50,443 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 0cf2e25b-cae9-4202-ab79-e8f391bb46fa)
2016-02-29 23:25:50,443 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -9 to -2
2016-02-29 23:25:50,445 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: dd89fa82-a0b4-459e-94b3-cbbcb8a2f303)
2016-02-29 23:25:50,448 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ab688d17-36a6-4bfe-be93-bdcd759b607a)
2016-02-29 23:25:50,448 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 4 to 9
2016-02-29 23:25:50,450 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: e2dba6b7-b1e4-4420-a4d1-4c02a9297b65)
2016-02-29 23:25:50,453 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ed6d2848-286c-41ba-95a7-f8881ac766e4)
2016-02-29 23:25:50,453 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 6 to 9
2016-02-29 23:25:50,456 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: eb5c9de0-47cd-4315-9337-8bd3803a8bca)
2016-02-29 23:25:50,459 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: ed6d2848-286c-41ba-95a7-f8881ac766e4)
2016-02-29 23:25:50,459 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 9 to 14
2016-02-29 23:25:50,461 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: ec5996a8-9c02-47ee-a1e0-a6e9e416899d)
2016-02-29 23:25:50,463 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 3fe94cc7-2e92-49dc-a18d-6125491addf8)
2016-02-29 23:25:50,463 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -4 to 5
2016-02-29 23:25:50,466 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: f01eb412-b481-49fc-aa53-88bc5d3eab55)
2016-02-29 23:25:50,469 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 833795cd-ac0a-44f1-99f0-097aae8deb2f)
2016-02-29 23:25:50,469 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert -19 to -10
2016-02-29 23:25:50,471 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: f028b139-9381-4e18-a8c7-ca6a9e09ee5c)
2016-02-29 23:25:50,474 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 5fe121ec-2502-4e59-b2bd-977bbc0382b3)
2016-02-29 23:25:50,474 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 6 to 12
2016-02-29 23:25:50,476 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: f3d49c56-fc93-4c29-a873-b098fb4ee8fb)
2016-02-29 23:25:50,479 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataUpdated(TYPE: InventoryFormat, ID: 925101e0-e97f-4bff-b930-3386dabcba42)
2016-02-29 23:25:50,479 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - update Property: Quantity Convert 4 to 13
2016-02-29 23:25:50,481 [TestRunnerThread] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Project, id: 519ecff2-92fa-46cf-9120-4d54efa461b2)
2016-02-29 23:25:51,757 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Product, id: 782083e7-d196-4008-bd99-4858140d0652)
2016-02-29 23:25:51,757 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 9c5b4c74-a248-48ee-8b06-e6657a68290c)
2016-02-29 23:25:51,757 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 7792d1ac-ff53-4e31-9df3-3a374f80ba1e)
2016-02-29 23:25:51,758 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: fcb0402f-0dd5-4c10-ba29-ee2603853c45)
2016-02-29 23:25:51,759 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: e20b0e31-19f9-4708-8b45-dd8933078bec)
2016-02-29 23:25:51,759 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 4b7eb0c1-28e7-48df-b0d0-bbcddc170176)
2016-02-29 23:25:51,760 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 60e859ef-11ab-4f58-982a-4a50afd4bae5)
2016-02-29 23:25:51,761 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 688aac72-f9e1-4115-9fb0-0432bd19644b)
2016-02-29 23:25:51,762 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: cf2b3570-820c-4ea4-97c7-4b9bd720ae9c)
2016-02-29 23:25:51,762 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 68c4d05b-73a3-43d0-98c3-c329966ba14b)
2016-02-29 23:25:51,763 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 851743ee-8228-4b79-be18-14b7dbca2b5b)
2016-02-29 23:25:51,764 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 8da83143-26bc-42c9-964a-172f38998e5a)
2016-02-29 23:25:51,765 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: 29559c63-de39-46f7-b20d-50d8206efe7d)
2016-02-29 23:25:51,766 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: IOStockFormat, id: ce6562ac-9a1c-4fe2-943b-3202d9f0d17a)
2016-02-29 23:25:51,782 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Product, id: c3fad509-0342-41b3-9126-7a9155415705)
2016-02-29 23:25:51,782 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 6d327197-7942-40cf-ae76-95e3e7523461)
2016-02-29 23:25:51,796 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Product, id: 730301d6-d4ce-4528-aff2-c17329b2dd1d)
2016-02-29 23:25:51,796 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 2850254a-f5e2-4ccb-9fd5-4a6726f380d2)
2016-02-29 23:25:51,814 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: Product, id: 51c3e855-19b8-4afc-af0a-28bfdc9422a7)
2016-02-29 23:25:51,814 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: 19b28abf-b629-4098-92ba-b0bb776dacef)
2016-02-29 23:25:51,814 [9600] DEBUG R54IN0.WPF.DataDirector - OnDataDeleted(TYPE: InventoryFormat, id: f5fd4006-e24f-4107-aa42-83dba3cd27db)
