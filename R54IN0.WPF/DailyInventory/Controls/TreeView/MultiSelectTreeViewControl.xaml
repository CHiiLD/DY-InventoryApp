<UserControl x:Class="R54IN0.WPF.MultiSelectTreeViewControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:R54IN0.WPF"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:mvvmlight="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
             xmlns:tree="clr-namespace:System.Windows.Controls;assembly=TreeViewEx"
             xmlns:edttxt="clr-namespace:Custom.Controls;assembly=Custom.Controls.EditableTextBlock"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <local:BindingProxy x:Key="DataContextProxy" DataContext="{Binding}" />

        <ContextMenu x:Key="CellContextMenu" Visibility="{Binding DataContext.ContextMenuVisibility, Source={StaticResource DataContextProxy}}">
            <MenuItem Header="이름 바꾸기"
                      InputGestureText="F2"
                      Command="{Binding DataContext.SelectedNodeRenameCommand, Source={StaticResource DataContextProxy}}" />
            <MenuItem Header="새로운 폴더" Command="{Binding DataContext.NewFolderNodeAddCommand, Source={StaticResource DataContextProxy}}" Visibility="{Binding DataContext.NewFolderAddMenuVisibility, Source={StaticResource DataContextProxy}}" />
            <MenuItem Header="새로운 제품" Command="{Binding DataContext.NewProductNodeAddCommand, Source={StaticResource DataContextProxy}}" Visibility="{Binding DataContext.NewProductAddMenuVisibility, Source={StaticResource DataContextProxy}}" />
            <MenuItem Header="새로운 규격" Command="{Binding DataContext.NewInventoryNodeAddCommand, Source={StaticResource DataContextProxy}}" Visibility="{Binding DataContext.NewProductAddMenuVisibility, Source={StaticResource DataContextProxy}}" />
            <MenuItem Header="삭제하기" Command="{Binding DataContext.SelectedNodeDeletionCommand, Source={StaticResource DataContextProxy}}" />
            <Separator />
            <MenuItem Header="재고 현황으로 보기" Command="{Binding DataContext.SearchAsInventoryRecordCommand, Source={StaticResource DataContextProxy}}" />
            <MenuItem Header="제품별 입출고 현황으로 보기" Command="{Binding DataContext.SearchAsIOStockRecordCommand, Source={StaticResource DataContextProxy}}" />
            <MenuItem Header="새로운 입출고 기록 추가하기"
                      InputGestureText="Ctrl+S"
                      Command="{Binding DataContext.IOStockAmenderWindowCallCommand, Source={StaticResource DataContextProxy}}" />
        </ContextMenu>

        <HierarchicalDataTemplate DataType="{x:Type local:TreeViewNode}" ItemsSource="{Binding Root}">
            <StackPanel Orientation="Horizontal">
                <Border CornerRadius="2" Width="15" Height="15" Background="{Binding Color}" Margin="0,0,5,0" VerticalAlignment="Center" HorizontalAlignment="Left" />
                <edttxt:EditableTextBlock
                    Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    IsInEditMode="{Binding IsNameEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
        </HierarchicalDataTemplate>

        <Style TargetType="tree:TreeViewExItem">
            <Setter Property="BorderBrushFocusedSelected" Value="{DynamicResource AccentColorBrush}" />
            <Setter Property="BackgroundFocusedSelected" Value="{DynamicResource AccentColorBrush}" />

            <Setter Property="BorderBrushSelected" Value="{DynamicResource AccentColorBrush}" />
            <Setter Property="BackgroundSelected" Value="{DynamicResource AccentColorBrush}" />

            <Setter Property="BorderBrushSelectedHovered" Value="{DynamicResource AccentColorBrush3}" />
            <Setter Property="BackgroundSelectedHovered" Value="{DynamicResource AccentColorBrush3}" />

            <Setter Property="BorderBrushHovered" Value="{DynamicResource AccentColorBrush3}" />
            <Setter Property="BackgroundHovered" Value="{DynamicResource AccentColorBrush3}" />

            <Setter Property="BorderBrushFocused" Value="{x:Null}" />
            <Setter Property="BackgroundFocused" Value="{x:Null}" />

            <Setter Property="BorderBrushInactive" Value="{DynamicResource AccentColorBrush3}" />
            <Setter Property="BackgroundInactive" Value="{DynamicResource AccentColorBrush3}" />
        </Style>
    </UserControl.Resources>

    <tree:TreeViewEx
            x:Name="TreeView"
            ItemsSource="{Binding Root}"
            DragCommand="{Binding DragCommand}"
            DropCommand="{Binding DropCommand}"
            SelectedItems="{Binding SelectedNodes, Mode=TwoWay}"
            ContextMenu="{StaticResource CellContextMenu}"
            BorderBrush="{x:Null}">
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="OnSelecting">
                <mvvmlight:EventToCommand Command="{Binding NodesSelectedEventCommand}" PassEventArgsToCommand="True" />
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseRightButtonDown">
                <mvvmlight:EventToCommand Command="{Binding MouseRightButtonDownEventCommand}" PassEventArgsToCommand="True" />
            </i:EventTrigger>
        </i:Interaction.Triggers>

        <tree:TreeViewEx.InputBindings>
            <KeyBinding Key="F2" Command="{Binding DataContext.SelectedNodeRenameCommand, Source={StaticResource DataContextProxy}}" />
            <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding DataContext.IOStockAmenderWindowCallCommand, Source={StaticResource DataContextProxy}}" />
        </tree:TreeViewEx.InputBindings>
    </tree:TreeViewEx>
</UserControl>