<mah:MetroWindow x:Class="R54IN0.WPF.IOStockDataAmenderWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:R54IN0.WPF"
        xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:mvvmlight="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        mc:Ignorable="d"
        GlowBrush="{DynamicResource AccentColorBrush}"
        BorderThickness="1"
        Title="{Binding TitleText}" SizeToContent="Manual" Width="770" Height="416" ResizeMode="NoResize" WindowStartupLocation="CenterOwner">

    <Window.InputBindings>
        <KeyBinding Key="Esc" Command="{Binding WindowCloseCommand}" />
    </Window.InputBindings>

    <Window.Resources>
        <ResourceDictionary>
            <local:BindingProxy x:Key="DataContextProxy" DataContext="{Binding}" />

            <Style x:Key="CanDeleteItemComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource MetroComboBox}">
                <Setter Property="TextSearch.TextPath" Value="Name" />
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding Name}" />
                                <Button Grid.Column="1" Style="{DynamicResource MetroRectButtonStyle}" BorderThickness="0"
                                            DataContext="{Binding}">
                                    <Rectangle Width="20" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_clear_reflect_horizontal}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <mvvmlight:EventToCommand Command="{Binding DataContext.ComboBoxItemDeleteCommand, Source={StaticResource DataContextProxy}}"
                                                                      CommandParameter="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource MetroComboBoxItem}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <mah:MetroWindow.Flyouts>
        <mah:FlyoutsControl>
            <mah:Flyout x:Name="ProductSelecterFlyout" Position="Right" AreAnimationsEnabled="True"
                        IsOpen="{Binding IsOpenFlyout}"
                        Theme="Adapt"
                        Header="제품 탐색기"
                        Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=mah:MetroWindow}, Path=ActualWidth}"
                        Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=mah:MetroWindow}, Path=ActualHeight}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <local:MultiSelectTreeViewControl DataContext="{Binding TreeViewViewModel}" x:Name="MultiSelectTreeView" Height="300" />
                    <Grid Grid.Row="1" Margin="0,5,0,5">
                        <Button Command="{Binding ProductSelectCommand}" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource AccentedSquareButtonStyle}" Width="60">선택</Button>
                    </Grid>
                </Grid>
            </mah:Flyout>
        </mah:FlyoutsControl>
    </mah:MetroWindow.Flyouts>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Margin="0,0,2,2">
            <Grid.Resources>
                <Style TargetType="Grid">
                    <Setter Property="Margin" Value="1" />
                </Style>
            </Grid.Resources>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="310" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid>
                <Grid.Resources>
                    <local:EnumBooleanConverter x:Key="enumBooleanConverter" />
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="43*" />
                </Grid.ColumnDefinitions>
                <Label>종류</Label>
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <RadioButton IsEnabled="{Binding IsEnabledInComingRadioButton}"
                                 IsChecked="{Binding StockType, Converter={StaticResource enumBooleanConverter}, ConverterParameter=INCOMING}"
                                 >입고</RadioButton>
                    <RadioButton IsEnabled="{Binding IsEnabledOutGoingRadioButton}"
                                 IsChecked="{Binding StockType, Converter={StaticResource enumBooleanConverter}, ConverterParameter=OUTGOING}"
                                 Margin="10,0,0,0">출고</RadioButton>
                </StackPanel>
            </Grid>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="43*" />
                </Grid.ColumnDefinitions>
                <Label>날짜</Label>
                <DatePicker IsEnabled="{Binding IsEnabledDatePicker}" SelectedDate="{Binding Date}" Grid.Column="1" Width="200" HorizontalAlignment="Left" />
            </Grid>

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="43*" />
                </Grid.ColumnDefinitions>
                <Label>제품</Label>
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <TextBox
                         Text="{Binding ProductText}"
                         IsReadOnly="{Binding IsReadOnlyProductTextBox}"
                         mah:TextBoxHelper.Watermark="제품을 선택해주세요"
                         mah:TextBoxHelper.ButtonCommand="{Binding ProductSearchCommand}"
                         Width="200">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}"
                               BasedOn="{StaticResource SearchMetroTextBox}">
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </StackPanel>
            </Grid>

            <Grid Grid.Row="3" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="43*" />
                </Grid.ColumnDefinitions>
                <Label>규격</Label>
                <ComboBox
                          Text="{Binding SpecificationText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding Inventory}"
                          ItemsSource="{Binding InventoryList}"
                          DisplayMemberPath="Specification"
                          IsEnabled="{Binding IsEnabledSpecificationComboBox}"
                          IsEditable="{Binding IsEditableSpecification}"
                          Grid.Column="1" Width="200" HorizontalAlignment="Left">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyUp">
                            <mvvmlight:EventToCommand
                                Command="{Binding ComboBoxKeyUpEventCommand}"
                                PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </Grid>

            <Grid Grid.Row="3" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="43*" />
                </Grid.ColumnDefinitions>
                <Label>규격의 설명</Label>
                <TextBox
                    Grid.Column="1" Text="{Binding SpecificationMemo}" Margin="0,0,1,0">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}"
                               BasedOn="{StaticResource MetroTextBox}">
                            <Setter Property="mah:TextBoxHelper.ClearTextButton"
                                    Value="True"></Setter>
                            <Style.Triggers>
                                <Trigger Property="mah:TextBoxHelper.HasText"
                                         Value="False">
                                    <Setter Property="mah:TextBoxHelper.ClearTextButton"
                                            Value="False" />
                                    <Setter Property="mah:TextBoxHelper.Watermark"
                                            Value="제품의 규격에 대한 설명을 적어주세요." />
                                </Trigger>
                                <Trigger Property="mah:TextBoxHelper.HasText"
                                         Value="True">
                                    <Setter Property="mah:TextBoxHelper.ClearTextButton"
                                            Value="True" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </Grid>

            <Grid Grid.Row="4" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="43*" />
                </Grid.ColumnDefinitions>
                <Label>제조사</Label>
                <ComboBox Style="{StaticResource CanDeleteItemComboBoxStyle}"
                          Text="{Binding MakerText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding Maker}"
                          ItemsSource="{Binding MakerList}"
                          IsEditable="True"
                          Grid.Column="1" Width="200" HorizontalAlignment="Left">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyUp">
                            <mvvmlight:EventToCommand
                                Command="{Binding ComboBoxKeyUpEventCommand}"
                                PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </Grid>

            <Grid Grid.Row="5" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="43*" />
                </Grid.ColumnDefinitions>
                <Label>수량</Label>
                <mah:NumericUpDown
                    Minimum="1"
                    Value="{Binding Quantity, Mode=TwoWay}"
                    Grid.Column="1" Width="200" HorizontalAlignment="Left" />
            </Grid>

            <Grid Grid.Row="5" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="43*" />
                </Grid.ColumnDefinitions>
                <Label>단위</Label>
                <ComboBox
                    Style="{StaticResource CanDeleteItemComboBoxStyle}"
                    Text="{Binding MeasureText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    SelectedItem="{Binding Measure}"
                    ItemsSource="{Binding MeasureList}"
                    IsEditable="True"
                    Grid.Column="1" Width="200" HorizontalAlignment="Left">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyUp">
                            <mvvmlight:EventToCommand
                                Command="{Binding ComboBoxKeyUpEventCommand}"
                                PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </Grid>

            <Grid Grid.Row="6" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="43*" />
                </Grid.ColumnDefinitions>
                <Label>단가</Label>
                <mah:NumericUpDown
                    Minimum="0"
                    Value="{Binding UnitPrice, Mode=TwoWay}"
                    Grid.Column="1" Width="200" HorizontalAlignment="Left" Interval="1000"></mah:NumericUpDown>
            </Grid>

            <Grid Grid.Row="8" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="43*" />
                </Grid.ColumnDefinitions>
                <Button Command="{Binding LoadLastRecordCommand }"
                        Visibility="{Binding LoadLastRecordVisibility}"
                        Style="{DynamicResource AccentedSquareButtonStyle}" Grid.Column="1" VerticalAlignment="Center"
                        HorizontalAlignment="Left" ToolTip="가장 최근에 저장된 제품과 규격에 해당되는 입출고 기록의 수량, 단가, 보관장소, 프로젝트, 담당자 설정을 덮어씌웁니다.">
                    최근에 저장한 기록 불러오기
                </Button>
            </Grid>

            <Grid Grid.Row="7" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="43*" />
                </Grid.ColumnDefinitions>
                <Label Content="{Binding AccountTypeText}" />
                <ComboBox
                          Style="{StaticResource CanDeleteItemComboBoxStyle}"
                          Text="{Binding ClientText}"
                          SelectedItem="{Binding Client}"
                          ItemsSource="{Binding ClientList}"
                          IsEditable="True"
                          Grid.Column="1" Width="200" HorizontalAlignment="Left">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyUp">
                            <mvvmlight:EventToCommand
                                Command="{Binding ComboBoxKeyUpEventCommand}"
                                PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </Grid>

            <Grid Grid.Row="8" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="43*" />
                </Grid.ColumnDefinitions>
                <Label>보관장소</Label>
                <ComboBox
                    Style="{StaticResource CanDeleteItemComboBoxStyle}"
                    Text="{Binding WarehouseText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    SelectedItem="{Binding Warehouse}"
                    ItemsSource="{Binding WarehouseList}"
                    IsEditable="True"
                    IsEnabled="{Binding IsEnabledWarehouseComboBox}"
                    Grid.Column="1" Width="200" HorizontalAlignment="Left">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyUp">
                            <mvvmlight:EventToCommand
                                Command="{Binding ComboBoxKeyUpEventCommand}"
                                PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </Grid>

            <Grid Grid.Row="9" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="43*" />
                </Grid.ColumnDefinitions>
                <Label>프로젝트</Label>
                <ComboBox
                    Style="{StaticResource CanDeleteItemComboBoxStyle}"
                    Text="{Binding ProjectText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    SelectedItem="{Binding Project}"
                    ItemsSource="{Binding ProjectList}"
                    IsEditable="True"
                    IsEnabled="{Binding IsEnabledProjectComboBox}"
                    Grid.Column="1" Width="200" HorizontalAlignment="Left">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="GotFocus">
                            <mvvmlight:EventToCommand Command="{Binding ProjectComboBoxGotFocusEventCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="KeyUp">
                            <mvvmlight:EventToCommand
                                Command="{Binding ComboBoxKeyUpEventCommand}"
                                PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </Grid>

            <Grid Grid.Row="10" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="43*" />
                </Grid.ColumnDefinitions>
                <Label>담당자</Label>
                <ComboBox
                    Style="{StaticResource CanDeleteItemComboBoxStyle}"
                    Text="{Binding EmployeeText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    SelectedItem="{Binding Employee}"
                    ItemsSource="{Binding EmployeeList}"
                    IsEditable="True"
                    Grid.Column="1" Width="200" HorizontalAlignment="Left">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyUp">
                            <mvvmlight:EventToCommand
                                Command="{Binding ComboBoxKeyUpEventCommand}"
                                PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </Grid>

            <Grid Grid.Row="11" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="43*" />
                </Grid.ColumnDefinitions>
                <Label>비고</Label>
                <TextBox
                Grid.Column="1"
                         Text="{Binding Memo}" Margin="0,0,1,0">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}"
                               BasedOn="{StaticResource MetroTextBox}">
                            <Setter Property="mah:TextBoxHelper.ClearTextButton"
                                    Value="True"></Setter>
                            <Style.Triggers>
                                <Trigger Property="mah:TextBoxHelper.HasText"
                                         Value="False">
                                    <Setter Property="mah:TextBoxHelper.ClearTextButton"
                                            Value="False" />
                                    <Setter Property="mah:TextBoxHelper.Watermark"
                                            Value="입출고 기록에 대한 비고를 적어주세요." />
                                </Trigger>
                                <Trigger Property="mah:TextBoxHelper.HasText"
                                         Value="True">
                                    <Setter Property="mah:TextBoxHelper.ClearTextButton"
                                            Value="True" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </Grid>

            <Grid Grid.Row="10" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="43*" />
                </Grid.ColumnDefinitions>
                <Label >재고수량</Label>
                <Label
                    ContentStringFormat='{}{0:#,#.}'
                    Content="{Binding InventoryQuantity}"
                    Grid.Column="1" Width="200" ></Label>
            </Grid>

            <Grid Grid.Row="11" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="43*" />
                </Grid.ColumnDefinitions>
                <Label >단가합계</Label>
                <Label
                    ContentStringFormat='{}{0:#,#.}'
                    Content="{Binding Amount}"
                    Grid.Column="1" Width="200" ></Label>
            </Grid>
        </Grid>

        <Button Command="{Binding RecordCommand}" Width="60" Margin="5,12,5,5" Grid.Row="1" Style="{DynamicResource AccentedSquareButtonStyle}">확인</Button>
    </Grid>
</mah:MetroWindow>